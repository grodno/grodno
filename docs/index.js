/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 80);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__(3);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.replace.js
var es6_regexp_replace = __webpack_require__(6);

// CONCATENATED MODULE: ./lib/furnitura/strings.js



/**
 * Formats given string template with params.
 *
 * Template should contain placeholders like `{someKey}`,
 * which will be replaced with value by key from params.
 *
 * @param {string} template string template
 * @param {object} params hash with parameters
 */
const formatString = (template, params) => {
  if (!template) {
    return '';
  }

  return "".concat(template).replace(/\{([\S]+)\}/i, (_, key) => (params && params[key]) != null ? params[key] : '');
};
const capitalize = function capitalize(x) {
  let pre = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  if (!x) {
    return pre;
  }

  const s = "".concat(x);
  return pre + s[0].toUpperCase() + s.slice(1);
};
const tail = function tail(x) {
  let sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '.';

  if (!x) {
    return '';
  }

  const pos = x.lastIndexOf(sep);
  return pos === -1 ? x : x.slice(pos + sep.length);
};
const head = function head(x) {
  let sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '.';

  if (!x) {
    return '';
  }

  const pos = x.indexOf(sep);
  return pos === -1 ? x : x.slice(0, pos);
};
const humanize = key => ('' + key).split('_').map(s => capitalize(s)).join(' ');
// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__(1);

// CONCATENATED MODULE: ./lib/furnitura/obj.js



/** ***********************
 * Objects.
 */

/**
 * Checks if argument is empty .
 */
const isEmpty = x => {
  if (!x) {
    return true;
  }

  if (x instanceof Object) {
    // (zero-length array)
    if (Array.isArray(x)) {
      return x.length === 0;
    } // (zero-size map)


    if (x instanceof Map) {
      return x.size === 0;
    } // (has no props)


    return Object.keys(x).length === 0;
  }

  return false;
};
/**
 * Checks if ALL arguments are empty .
 */

const allEmpty = function allEmpty() {
  for (var _len = arguments.length, xx = new Array(_len), _key = 0; _key < _len; _key++) {
    xx[_key] = arguments[_key];
  }

  return xx.filter(isEmpty).length === xx.length;
};
/**
 * Checks if SOME arguments are empty .
 */

const someEmpty = function someEmpty() {
  for (var _len2 = arguments.length, xx = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    xx[_key2] = arguments[_key2];
  }

  return xx.filter(isEmpty).length > 0;
};
/**
 * Digs value in a given object structure by a given path.
 *
 * @param {*} o source object
 * @param {*} steps path
 * @param {*} def default value
 */

const dig = (o, steps, def) => {
  const x = steps.split('.').reduce((r, e) => r ? r[e === '0' ? 0 : e] : r, o);
  return typeof x === 'undefined' ? def : x;
};
// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.sort.js
var es6_array_sort = __webpack_require__(35);

// CONCATENATED MODULE: ./lib/furnitura/arr.js


/** ***********************
 * Arrays.
 */

/**
 * Builds histogram on given field for given list.
 *
 * @param {*} list source
 * @param {*} field to be used as group key
 */
function histogram(list) {
  let field = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'id';
  const result = {};
  const fieldFn = typeof field === 'string' ? e => e[field] : field;

  const iter = (v, entry) => {
    const slot = result[v] || (result[v] = {
      key: v,
      count: 0,
      subs: []
    });
    slot.count++;
    slot.subs.push(entry);
  };

  (list || []).forEach(e => {
    const value = fieldFn(e);

    if (Array.isArray(value)) {
      value.forEach(v => iter(v, e));
    } else {
      iter(value, e);
    }
  });
  return result;
}
/**
 * Sorts array by element property.
 *
 * @param {*} arr source
 * @param {*} property element property to sort by
 * @param {*} order
 */

function sortBy(arr) {
  let property = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'name';
  let order = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;
  let fn = property;

  if (typeof property === 'string') {
    if (property[0] === '-') {
      /* eslint-disable */
      order = -1;
      property = property.substr(1);
    }

    fn = e => e[property];
  }

  function compare(a, b) {
    const aa = fn(a);
    const bb = fn(b);
    /* eslint-disable */

    return aa < bb ? -order : aa > bb ? order : 0;
  }

  return (arr || []).slice(0).sort(compare);
}
/**
 * Transforms array into hash object.
 * @param {*} list source array
 * @param {*} idKey id key
 * @param {*} valKey value key
 */

const arrayToHash = function arrayToHash(list) {
  let idKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'id';
  let valKey = arguments.length > 2 ? arguments[2] : undefined;
  const r = {};

  if (list) {
    const isKeyFn = typeof idKey === 'string' ? e => e[idKey] : idKey;
    list.forEach(e => {
      r[isKeyFn(e)] = valKey ? e[valKey] : e;
    });
  }

  return r;
};
// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__(2);

// CONCATENATED MODULE: ./lib/furnitura/url.js




function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/**
 * Parses string into URL object.
 *
 * @param {string} s string in format: `type:target/path?params#data`
 * @param {object} r optional target object
 * @returns URL object like `{type, target, path, params, data }`
 */
function urlParse(s) {
  let r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (!s) {
    return _objectSpread({
      path: [],
      params: {},
      target: ''
    }, r);
  }

  if (typeof s === 'object') {
    return _objectSpread({
      path: [],
      params: {},
      target: ''
    }, r, s);
  }

  let p; // extract type:

  p = s.indexOf(':');

  if (p > -1) {
    r.type = s.slice(0, p);
    s = s.slice(p + 1);
  } // extract data:


  p = s.indexOf('#');

  if (p > -1) {
    r.data = decodeValue(s.slice(p + 1));
    s = s.slice(0, p);
  } // extract query params:


  p = s.indexOf('?');
  r.params = r.params || {};

  if (p > -1) {
    for (let param of s.slice(p + 1).split('&')) {
      let [key, value] = param.split('=');

      if (value) {
        r.params[key] = decodeValue(value);
      }
    }

    s = s.slice(0, p);
  } // target and path:


  let path = r.path = s.split('/').map(decodeURIComponent);

  while (path.length && !r.target) {
    r.target = path.shift();
  }

  return r;
}
/**
*  Represents an URL object as a string
*
* @param {object} r URL object like `{type, target, path, params, data }`
* @returns string in format `type:target/path?params#data`
*/

function urlStringify(r) {
  let result = '';

  if (!r) {
    return result;
  }

  if (typeof r === 'string') {
    return r;
  }

  if (r.target) {
    if (r.type) {
      result += "".concat(r.type, "://");
    }

    result += r.target;
  }

  if (r.path) {
    result += "/".concat(Array.isArray(r.path) ? r.path.map(encodeURIComponent).join('/') : r.path);
  }

  const params = r.params;

  if (params) {
    const keys = Object.keys(params).filter(key => params[key] != null);

    if (keys.length) {
      result += "?".concat(keys.map(key => "".concat(key, "=").concat(encodeValue(params[key]))).join('&'));
    }
  }

  if (r.data) {
    result += "#".concat(encodeValue(r.data));
  }

  return result;
}
const VALUE_MAP = {
  true: true,
  false: false,
  undefined
};

function decodeValue(val) {
  const value = decodeURIComponent(val);

  if ('{['.indexOf(value[0]) > -1) {
    return JSON.parse(value);
  }

  const num = +value;

  if (!isNaN(num)) {
    return num;
  }

  return VALUE_MAP[value] || value;
}

function encodeValue(value) {
  return encodeURIComponent(typeof value === 'object' ? JSON.stringify(value) : "".concat(value));
}
// CONCATENATED MODULE: ./lib/furnitura/xml.js



// ==========
// XML Parse for templates. XML -> NodeTree
// ----------
const RE_XML_ENTITY = /&#?[0-9a-z]{3,5};/g;
const RE_XML_COMMENT = /<!--((?!-->)[\s\S])*-->/g;
const RE_ATTRS = /([a-z][a-zA-Z0-9-:]+)="([^"]*)"/g;
const RE_ESCAPE_XML_ENTITY = /["'&<>]/g;
const RE_XML_TAG = /(<)(\/?)([a-zA-Z][a-zA-Z0-9-:]*)((?:\s+[a-z][a-zA-Z0-9-:]+="[^"]*")*)\s*(\/?)>/g;
const SINGLE_TAGS = 'img input br'.split(' ').reduce((r, e) => {
  r[e] = 1;
  return r;
}, {});
const SUBST_XML_ENTITY = {
  amp: '&',
  gt: '>',
  lt: '<',
  quot: "\"",
  nbsp: ' '
};
const ESCAPE_XML_ENTITY = {
  34: '&quot;',
  38: '&amp;',
  39: '&#39;',
  60: '&lt;',
  62: '&gt;'
};

const FN_ESCAPE_XML_ENTITY = m => ESCAPE_XML_ENTITY[m.charCodeAt(0)];

const FN_XML_ENTITY = function FN_XML_ENTITY(_) {
  const s = _.substring(1, _.length - 1);

  return s[0] === '#' ? String.fromCharCode(+s.slice(1)) : SUBST_XML_ENTITY[s] || ' ';
};

const decodeXmlEntities = function decodeXmlEntities() {
  let s = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return s.replace(RE_XML_ENTITY, FN_XML_ENTITY);
};

const escapeXml = s => !s ? '' : ('' + s).replace(RE_ESCAPE_XML_ENTITY, FN_ESCAPE_XML_ENTITY);

let UID = 1;

const parseAttrs = s => {
  const r = new Map();

  if (!s) {
    return r;
  }

  while (1) {
    let e = RE_ATTRS.exec(s);

    if (!e) {
      return r;
    }

    r.set(e[1], decodeXmlEntities(e[2]));
  }
};

const stringifyAttrs = attrs => {
  if (!attrs || !attrs.size) {
    return '';
  }

  const r = [];
  attrs.forEach((v, k) => {
    if (v && k !== '#text') {
      r.push(' ' + k + '="' + escapeXml(v) + '"');
    }
  });
  return r.join('');
};

class Node {
  constructor(tag) {
    let attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Map();
    this.uid = UID++;
    this.tag = tag || '';
    this.attrs = attrs;
    this.nodes = [];
  }

  getChild(index) {
    return this.nodes[index];
  }

  setText(text) {
    this.attrs.set('#text', text);
  }

  addChild(tag, attrs) {
    const e = new Node(tag, attrs);
    this.nodes.push(e);
    return e;
  }

  toString() {
    return stringify(this, '');
  }

}

function stringify(_ref, tab) {
  let {
    tag,
    attrs,
    nodes
  } = _ref;
  const sattrs = stringifyAttrs(attrs);
  const ssubs = nodes.map(c => stringify(c, "  ".concat(tab))).join('\n');
  const text = attrs.get('#text');
  const stext = text ? "  ".concat(tab).concat(escapeXml(text)) : '';
  return "".concat(tab, "<").concat(tag).concat(sattrs) + (!ssubs && !stext ? '/>' : ">\n".concat(ssubs).concat(stext, "\n").concat(tab, "</").concat(tag, ">"));
}

const parseXML = (_s, key) => {
  const s = ('' + _s).trim().replace(RE_XML_COMMENT, '');

  const ctx = [new Node()];
  let lastIndex = 0; // head text omitted

  while (1 > 0) {
    let e = RE_XML_TAG.exec(s);

    if (!e) {
      break;
    } // preceding text


    const text = e.index && s.slice(lastIndex, e.index);

    if (text && text.trim()) {
      ctx[0].addChild('#text').setText(text);
    } // closing tag


    if (e[2]) {
      if (ctx[0].tag !== e[3]) {
        throw new Error((key || '') + ' XML Parse closing tag does not match at: ' + e.index + ' near ' + e.input.slice(Math.max(e.index - 150, 0), e.index) + '^^^^' + e.input.slice(e.index, Math.min(e.index + 150, e.input.length)));
      }

      ctx.shift();
    } else {
      const elt = ctx[0].addChild(e[3], parseAttrs(e[4])); // not single tag

      if (!(e[5] || e[3] in SINGLE_TAGS)) {
        ctx.unshift(elt);

        if (ctx.length === 1) {
          throw new Error('Parse error at: ' + e[0]);
        }
      }
    } // up past index


    lastIndex = RE_XML_TAG.lastIndex;
  } // tail text omitted


  return ctx[0].getChild(0);
};
// CONCATENATED MODULE: ./lib/furnitura/geospatial.js
/* eslint-disable max-statements */
const calculateDistance = (_lat1, _long1, _lat2, _long2) => {
  const R = 6372795;
  const lat1 = _lat1 * Math.PI / 180;
  const lat2 = _lat2 * Math.PI / 180;
  const long1 = _long1 * Math.PI / 180;
  const long2 = _long2 * Math.PI / 180;
  const cl1 = Math.cos(lat1);
  const cl2 = Math.cos(lat2);
  const sl1 = Math.sin(lat1);
  const sl2 = Math.sin(lat2);
  const delta = long2 - long1;
  const cdelta = Math.cos(delta);
  const sdelta = Math.sin(delta);
  const y = Math.sqrt((cl2 * sdelta) ** 2 + (cl1 * sl2 - sl1 * cl2 * cdelta) ** 2);
  const x = sl1 * sl2 + cl1 * cl2 * cdelta;
  const ad = Math.atan2(y, x);
  const distance = ad * R / 1000;
  /* eslint-disable no-restricted-globals */

  return isNaN(distance) ? -1 : Number(distance.toFixed(2));
};
// CONCATENATED MODULE: ./lib/furnitura/dates.js

const today = 'сегодня';
const tomorrow = 'завтра';

const pad = function pad(x) {
  let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;
  let s = String(x);

  while (s.length < size) {
    s = "0".concat(s);
  }

  return s;
};

let currentYear = new Date().getFullYear();
const years = Array.from({
  length: 100
}, () => "".concat(currentYear--));
const dateLocales = {
  ru: {
    monthNames: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],
    monthNamesShort: ['Янв', 'Фев', 'Март', 'Апр', 'Май', 'Июня', 'Июля', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек'],
    monthNamesDeclination: ['Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', 'Июля', 'Августа', 'Сентября', 'Октября', 'Ноября', 'Декабря'],
    dayNames: ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'],
    dayNamesShort: ['ВС', 'ПН', 'ВТ', 'СР', 'ЧТ', 'ПТ', 'СБ'],
    bookMonthNamesShort: ['Янв', 'Фев', 'Март', 'Апр', 'Май', 'Июнь', 'Июль', 'Авг', 'Сен', 'Окт', 'Ноя', 'Дек']
  }
};
const months = dateLocales.ru.monthNamesShort;
const getMonthName = function getMonthName(d) {
  let mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  if (!d) {
    return '';
  }

  const isValidMode = dateLocales.ru["monthNames".concat(mode)];
  return isValidMode ? isValidMode[d.getMonth()] : dateLocales.ru.monthNames[d.getMonth()];
};
/* eslint-disable complexity, no-param-reassign */

function parseISO8601String(x) {
  if (typeof x !== 'string') {
    throw new Error("parseISO8601String: not a string: ".concat(x));
  }

  if (x.length < 11) {
    x += 'T12:00';
  }

  const timebits = /^([0-9]{4})-([0-9]{2})-([0-9]{2})[ T]([0-9]{2}):([0-9]{2})(?::([0-9]*)(\.[0-9]*)?)?Z?(?:([+-])([0-9]{2})([0-9]{2}))?/;
  const m = timebits.exec("".concat(x));

  if (!m) {
    return null;
  } // utcdate is milliseconds since the epoch


  const utcdate = Date.UTC(parseInt(m[1]), parseInt(m[2]) - 1, // months are zero-offset (!)
  parseInt(m[3]), parseInt(m[4]), parseInt(m[5]), // hh:mm
  m[6] && parseInt(m[6]) || 0, // optional seconds
  m[7] && parseFloat(m[7]) || 0); // optional timezone offset

  if (m[9] && m[10]) {
    let offsetMinutes = parseInt(m[9]) * 60 + parseInt(m[10]);
    return new Date(utcdate + (m[8] === '+' ? -60000 : +60000) * offsetMinutes);
  }

  return new Date(utcdate);
}
/**
 * Universal all-weather converter to Date.
 *
 * @param {*} x any value to be converted to date
 * @returns Date instance or null
 */

const toDate = x => {
  const type = typeof x;

  if (x == null) {
    return null;
  }

  if (type === 'number') {
    return new Date(x);
  }

  if (type === 'object') {
    // Date-like
    if (x.getTime) {
      return x;
    } // firestore.Timestamp


    if (x.toDate) {
      return x.toDate();
    } // firestore timestamp for web


    if (x.seconds && x.nanoseconds != null) {
      return new Date(x.seconds * 1000 + x.nanoseconds);
    }
  }

  return parseISO8601String(x);
}; // return date in format dd.mm.yyyy

const formatDate = x => {
  if (!x) {
    return '';
  }

  const date = toDate(x);
  const day = date.getDate();
  const dayWithZero = day < 10 ? "0".concat(day) : day;
  const month = date.getMonth() + 1;
  const monthWithZero = month < 10 ? "0".concat(month) : month;
  const year = date.getFullYear();
  return "".concat(dayWithZero, ".").concat(monthWithZero, ".").concat(year);
}; // return date in format yyyy-mm-dd

const formatFullDate = x => {
  if (!x) {
    return '';
  }

  const date = toDate(x);
  return date.toISOString().slice(0, 10);
};
const formatDateLong = (x, withTime, tz, withTimezone) => {
  if (!x) {
    return '';
  }

  const date = toDate(x);
  const visitYear = date.getFullYear();
  const day = date.getDate();
  const monthName = getMonthName(date, 'Short');
  const str = "".concat(day, " ").concat(monthName, " ").concat(visitYear);
  return withTime ? ["".concat(str), formatTime(date, tz, withTimezone)].join(' в ') : str;
};
const representDate = x => {
  if (!x) {
    return '';
  }

  const now = Date.now();
  const date = toDate(x);
  const ms = date.getTime();

  if (ms > now) {
    return formatDate(date);
  }

  if (ms + 60000 > now) {
    return 'na momante';
  }

  if (ms + 12 * 3600000 > now) {
    return 'na dobu';
  }

  if (ms + 36 * 3600000 > now) {
    return 'uqory';
  }

  return formatDate(date);
};
const formatDateShort = x => {
  if (!x) {
    return '';
  }

  const date = toDate(x);
  return todayOrTomorrow(date) || "".concat(date.getDate(), " ").concat(getMonthName(date, 'Declination'));
};
const formatTime = (x, tz, withTimezone) => {
  if (!x) {
    return '';
  }

  const date = adjustTimeZone(toDate(x), tz);
  const minutes = date.getMinutes();
  return "".concat(date.getHours(), ":").concat(pad(minutes), " ").concat(withTimezone ? formatTimezone(tz) : '').trim();
};
const MinskTimeZoneOffsetMinutes = 3 * 60;
const getTimeZoneDiffMinutes = tz => tz ? Number(tz) + new Date().getTimezoneOffset() : null;
const formatTimezone = tzOffset => {
  const toNumber = Number(tzOffset);
  return toNumber ? "(GMT ".concat(toNumber >= 0 ? "+".concat(pad(toNumber / 60), ":").concat(pad(toNumber % 60)) : "-".concat(pad(-toNumber / 60), ":").concat(pad(-toNumber % 60)), ")") : null;
};
const adjustTimeZone = (d, tz) => {
  const diff = tz + d.getTimezoneOffset();

  if (diff) {
    return new Date(d.getTime() + diff * 60 * 1000);
  }

  return d;
}; // yyyy-mm-dd day with zero, toISOString works wrong in some cases

const getIsoFormattedDate = adjastedDate => {
  const day = adjastedDate.getDate() > 9 ? adjastedDate.getDate() : "0".concat(adjastedDate.getDate());
  const month = adjastedDate.getMonth() + 1 > 9 ? adjastedDate.getMonth() + 1 : "0".concat(adjastedDate.getMonth() + 1);
  return "".concat(adjastedDate.getFullYear(), "-").concat(month, "-").concat(day);
};
const daysInMonth = (month, year) => months.includes(month) && year ? Array.from({
  length: new Date(Number(year), months.indexOf(month) + 1, 0).getDate()
}, (v, k) => "".concat(k + 1)) : null;
const parseToDdMmYyyy = date => {
  if (!date || typeof date === 'number') {
    return '';
  }

  return date.split('-').reverse().join('-');
};
// CONCATENATED MODULE: ./lib/furnitura/fn.js
const undef = Object.undefined;
let COUNTER = 1;
const nope = () => {};
const fnId = x => x;
const fnNull = x => null;
const fnTrue = () => true;
const fnFalse = () => false;
const nextId = function nextId() {
  let p = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
  return p + COUNTER++;
};

const _curry = (fn, args0, lengthLimit) => {
  const fx = args => args.length >= lengthLimit ? fn(...args) : _curry(fn, args, lengthLimit - args.length);

  return function () {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return fx([...args0, ...args]);
  };
};

const curry = function curry(f) {
  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
    args[_key2 - 1] = arguments[_key2];
  }

  return _curry(f, args, f.length);
};
const isFunction = f => !!(f && f.constructor && f.call && f.apply);
const log = function log() {
  var _ref;

  console.log(...arguments);
  return _ref = arguments.length - 1, _ref < 0 || arguments.length <= _ref ? undefined : arguments[_ref];
};
function fnVoid() {}
function fnThis() {
  return this;
}
function fnThisProp(key) {
  return this[key];
}
function fnThrow(error) {
  let ErrorType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Error;
  throw new ErrorType(error);
}
const compose = function compose() {
  for (var _len3 = arguments.length, ff = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    ff[_key3] = arguments[_key3];
  }

  return x0 => ff.reduceRight((x, f) => f(x), x0);
};
const swap = f => (a, b) => f(b, a);
const isSomething = a => a !== undef && a !== null;
const someOrNull = a => a === undef || a === null ? null : a;
const sum = (a, b) => a + b;
const and = (a, b) => a && b;
const or = (a, b) => a || b;
const assert = (b, error, errorType) => b || fnThrow(error, errorType);
// CONCATENATED MODULE: ./lib/furnitura/index.js
/* unused concated harmony import formatString */
/* concated harmony reexport capitalize */__webpack_require__.d(__webpack_exports__, "b", function() { return capitalize; });
/* unused concated harmony import tail */
/* unused concated harmony import head */
/* concated harmony reexport humanize */__webpack_require__.d(__webpack_exports__, "e", function() { return humanize; });
/* unused concated harmony import isEmpty */
/* unused concated harmony import allEmpty */
/* unused concated harmony import someEmpty */
/* concated harmony reexport dig */__webpack_require__.d(__webpack_exports__, "c", function() { return dig; });
/* unused concated harmony import histogram */
/* concated harmony reexport sortBy */__webpack_require__.d(__webpack_exports__, "i", function() { return sortBy; });
/* concated harmony reexport arrayToHash */__webpack_require__.d(__webpack_exports__, "a", function() { return arrayToHash; });
/* concated harmony reexport urlParse */__webpack_require__.d(__webpack_exports__, "j", function() { return urlParse; });
/* concated harmony reexport urlStringify */__webpack_require__.d(__webpack_exports__, "k", function() { return urlStringify; });
/* concated harmony reexport parseXML */__webpack_require__.d(__webpack_exports__, "g", function() { return parseXML; });
/* unused concated harmony import calculateDistance */
/* unused concated harmony import years */
/* unused concated harmony import dateLocales */
/* unused concated harmony import months */
/* unused concated harmony import getMonthName */
/* unused concated harmony import parseISO8601String */
/* unused concated harmony import toDate */
/* unused concated harmony import formatDate */
/* unused concated harmony import formatFullDate */
/* unused concated harmony import formatDateLong */
/* concated harmony reexport representDate */__webpack_require__.d(__webpack_exports__, "h", function() { return representDate; });
/* unused concated harmony import formatDateShort */
/* unused concated harmony import formatTime */
/* unused concated harmony import MinskTimeZoneOffsetMinutes */
/* unused concated harmony import getTimeZoneDiffMinutes */
/* unused concated harmony import formatTimezone */
/* unused concated harmony import adjustTimeZone */
/* unused concated harmony import getIsoFormattedDate */
/* unused concated harmony import daysInMonth */
/* unused concated harmony import parseToDdMmYyyy */
/* unused concated harmony import nope */
/* concated harmony reexport fnId */__webpack_require__.d(__webpack_exports__, "d", function() { return fnId; });
/* unused concated harmony import fnNull */
/* unused concated harmony import fnTrue */
/* unused concated harmony import fnFalse */
/* concated harmony reexport nextId */__webpack_require__.d(__webpack_exports__, "f", function() { return nextId; });
/* unused concated harmony import curry */
/* unused concated harmony import isFunction */
/* unused concated harmony import log */
/* unused concated harmony import fnVoid */
/* unused concated harmony import fnThis */
/* unused concated harmony import fnThisProp */
/* unused concated harmony import fnThrow */
/* unused concated harmony import compose */
/* unused concated harmony import swap */
/* unused concated harmony import isSomething */
/* unused concated harmony import someOrNull */
/* unused concated harmony import sum */
/* unused concated harmony import and */
/* unused concated harmony import or */
/* unused concated harmony import assert */









/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

var $iterators = __webpack_require__(92);
var getKeys = __webpack_require__(26);
var redefine = __webpack_require__(16);
var global = __webpack_require__(8);
var hide = __webpack_require__(12);
var Iterators = __webpack_require__(46);
var wks = __webpack_require__(4);
var ITERATOR = wks('iterator');
var TO_STRING_TAG = wks('toStringTag');
var ArrayValues = Iterators.Array;

var DOMIterables = {
  CSSRuleList: true, // TODO: Not spec compliant, should be false.
  CSSStyleDeclaration: false,
  CSSValueList: false,
  ClientRectList: false,
  DOMRectList: false,
  DOMStringList: false,
  DOMTokenList: true,
  DataTransferItemList: false,
  FileList: false,
  HTMLAllCollection: false,
  HTMLCollection: false,
  HTMLFormElement: false,
  HTMLSelectElement: false,
  MediaList: true, // TODO: Not spec compliant, should be false.
  MimeTypeArray: false,
  NamedNodeMap: false,
  NodeList: true,
  PaintRequestList: false,
  Plugin: false,
  PluginArray: false,
  SVGLengthList: false,
  SVGNumberList: false,
  SVGPathSegList: false,
  SVGPointList: false,
  SVGStringList: false,
  SVGTransformList: false,
  SourceBufferList: false,
  StyleSheetList: true, // TODO: Not spec compliant, should be false.
  TextTrackCueList: false,
  TextTrackList: false,
  TouchList: false
};

for (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {
  var NAME = collections[i];
  var explicit = DOMIterables[NAME];
  var Collection = global[NAME];
  var proto = Collection && Collection.prototype;
  var key;
  if (proto) {
    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);
    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);
    Iterators[NAME] = ArrayValues;
    if (explicit) for (key in $iterators) if (!proto[key]) redefine(proto, key, $iterators[key], true);
  }
}


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// ECMAScript 6 symbols shim
var global = __webpack_require__(8);
var has = __webpack_require__(15);
var DESCRIPTORS = __webpack_require__(9);
var $export = __webpack_require__(21);
var redefine = __webpack_require__(16);
var META = __webpack_require__(83).KEY;
var $fails = __webpack_require__(10);
var shared = __webpack_require__(24);
var setToStringTag = __webpack_require__(41);
var uid = __webpack_require__(19);
var wks = __webpack_require__(4);
var wksExt = __webpack_require__(55);
var wksDefine = __webpack_require__(56);
var enumKeys = __webpack_require__(84);
var isArray = __webpack_require__(88);
var anObject = __webpack_require__(5);
var isObject = __webpack_require__(13);
var toObject = __webpack_require__(31);
var toIObject = __webpack_require__(18);
var toPrimitive = __webpack_require__(39);
var createDesc = __webpack_require__(23);
var _create = __webpack_require__(59);
var gOPNExt = __webpack_require__(91);
var $GOPD = __webpack_require__(60);
var $GOPS = __webpack_require__(58);
var $DP = __webpack_require__(11);
var $keys = __webpack_require__(26);
var gOPD = $GOPD.f;
var dP = $DP.f;
var gOPN = gOPNExt.f;
var $Symbol = global.Symbol;
var $JSON = global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE = 'prototype';
var HIDDEN = wks('_hidden');
var TO_PRIMITIVE = wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = shared('symbol-registry');
var AllSymbols = shared('symbols');
var OPSymbols = shared('op-symbols');
var ObjectProto = Object[PROTOTYPE];
var USE_NATIVE = typeof $Symbol == 'function' && !!$GOPS.f;
var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = DESCRIPTORS && $fails(function () {
  return _create(dP({}, 'a', {
    get: function () { return dP(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD(ObjectProto, key);
  if (protoDesc) delete ObjectProto[key];
  dP(it, key, D);
  if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
} : dP;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
  anObject(it);
  key = toPrimitive(key, true);
  anObject(D);
  if (has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _create(D, { enumerable: createDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  anObject(it);
  var keys = enumKeys(P = toIObject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _create(it) : $defineProperties(_create(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = toPrimitive(key, true));
  if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = toIObject(it);
  key = toPrimitive(key, true);
  if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
  var D = gOPD(it, key);
  if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN(toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto;
  var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto) $set.call(OPSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, createDesc(1, value));
    };
    if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return this._k;
  });

  $GOPD.f = $getOwnPropertyDescriptor;
  $DP.f = $defineProperty;
  __webpack_require__(45).f = gOPNExt.f = $getOwnPropertyNames;
  __webpack_require__(44).f = $propertyIsEnumerable;
  $GOPS.f = $getOwnPropertySymbols;

  if (DESCRIPTORS && !__webpack_require__(25)) {
    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
  }

  wksExt.f = function (name) {
    return wrap(wks(name));
  };
}

$export($export.G + $export.W + $export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)wks(es6Symbols[j++]);

for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

$export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

$export($export.S + $export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = $fails(function () { $GOPS.f(1); });

$export($export.S + $export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return $GOPS.f(toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(12)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
setToStringTag(global.JSON, 'JSON', true);


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isRegExp = __webpack_require__(61);
var anObject = __webpack_require__(5);
var speciesConstructor = __webpack_require__(98);
var advanceStringIndex = __webpack_require__(47);
var toLength = __webpack_require__(29);
var callRegExpExec = __webpack_require__(32);
var regexpExec = __webpack_require__(48);
var fails = __webpack_require__(10);
var $min = Math.min;
var $push = [].push;
var $SPLIT = 'split';
var LENGTH = 'length';
var LAST_INDEX = 'lastIndex';
var MAX_UINT32 = 0xffffffff;

// babel-minify transpiles RegExp('x', 'y') -> /x/y and it causes SyntaxError
var SUPPORTS_Y = !fails(function () { RegExp(MAX_UINT32, 'y'); });

// @@split logic
__webpack_require__(34)('split', 2, function (defined, SPLIT, $split, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
    'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
    'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
    '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
    '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
    ''[$SPLIT](/.?/)[LENGTH]
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = String(this);
      if (separator === undefined && limit === 0) return [];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) return $split.call(string, separator, limit);
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      var splitLimit = limit === undefined ? MAX_UINT32 : limit >>> 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = regexpExec.call(separatorCopy, string)) {
        lastIndex = separatorCopy[LAST_INDEX];
        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index));
          if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
          lastLength = match[0][LENGTH];
          lastLastIndex = lastIndex;
          if (output[LENGTH] >= splitLimit) break;
        }
        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
      }
      if (lastLastIndex === string[LENGTH]) {
        if (lastLength || !separatorCopy.test('')) output.push('');
      } else output.push(string.slice(lastLastIndex));
      return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
    };
  // Chakra, V8
  } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : $split.call(this, separator, limit);
    };
  } else {
    internalSplit = $split;
  }

  return [
    // `String.prototype.split` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = defined(this);
      var splitter = separator == undefined ? undefined : separator[SPLIT];
      return splitter !== undefined
        ? splitter.call(separator, O, limit)
        : internalSplit.call(String(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (regexp, limit) {
      var res = maybeCallNative(internalSplit, regexp, this, limit, internalSplit !== $split);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (SUPPORTS_Y ? 'y' : 'g');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(SUPPORTS_Y ? rx : '^(?:' + rx.source + ')', flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = SUPPORTS_Y ? q : 0;
        var z = callRegExpExec(splitter, SUPPORTS_Y ? S : S.slice(q));
        var e;
        if (
          z === null ||
          (e = $min(toLength(splitter.lastIndex + (SUPPORTS_Y ? 0 : q)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          A.push(S.slice(p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            A.push(z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      A.push(S.slice(p));
      return A;
    }
  ];
});


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

var store = __webpack_require__(24)('wks');
var uid = __webpack_require__(19);
var Symbol = __webpack_require__(8).Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
};

$exports.store = store;


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(13);
module.exports = function (it) {
  if (!isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(5);
var toObject = __webpack_require__(31);
var toLength = __webpack_require__(29);
var toInteger = __webpack_require__(30);
var advanceStringIndex = __webpack_require__(47);
var regExpExec = __webpack_require__(32);
var max = Math.max;
var min = Math.min;
var floor = Math.floor;
var SUBSTITUTION_SYMBOLS = /\$([$&`']|\d\d?|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&`']|\d\d?)/g;

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// @@replace logic
__webpack_require__(34)('replace', 2, function (defined, REPLACE, $replace, maybeCallNative) {
  return [
    // `String.prototype.replace` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = defined(this);
      var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
      return fn !== undefined
        ? fn.call(searchValue, O, replaceValue)
        : $replace.call(String(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace
    function (regexp, replaceValue) {
      var res = maybeCallNative($replace, regexp, this, replaceValue);
      if (res.done) return res.value;

      var rx = anObject(regexp);
      var S = String(this);
      var functionalReplace = typeof replaceValue === 'function';
      if (!functionalReplace) replaceValue = String(replaceValue);
      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;
        results.push(result);
        if (!global) break;
        var matchStr = String(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }
      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];
        var matched = String(result[0]);
        var position = max(min(toInteger(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = [matched].concat(captures, position, S);
          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);
          var replacement = String(replaceValue.apply(undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + S.slice(nextSourcePosition);
    }
  ];

    // https://tc39.github.io/ecma262/#sec-getsubstitution
  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {
    var tailPos = position + matched.length;
    var m = captures.length;
    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
    if (namedCaptures !== undefined) {
      namedCaptures = toObject(namedCaptures);
      symbols = SUBSTITUTION_SYMBOLS;
    }
    return $replace.call(replacement, symbols, function (match, ch) {
      var capture;
      switch (ch.charAt(0)) {
        case '$': return '$';
        case '&': return matched;
        case '`': return str.slice(0, position);
        case "'": return str.slice(tailPos);
        case '<':
          capture = namedCaptures[ch.slice(1, -1)];
          break;
        default: // \d\d?
          var n = +ch;
          if (n === 0) return match;
          if (n > m) {
            var f = floor(n / 10);
            if (f === 0) return match;
            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);
            return match;
          }
          capture = captures[n - 1];
      }
      return capture === undefined ? '' : capture;
    });
  }
});


/***/ }),
/* 7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return AService; });
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__);



function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class AService {
  constructor(_ref) {
    let {
      api,
      ref,
      props
    } = _ref;
    Object.assign(this, _objectSpread({}, props, {
      api,
      ref
    }));

    this.notify = function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      return api.emitter.notify(ref, ...args);
    };

    this.emit = function () {
      return api.emitter.emit(...arguments);
    };

    this.subscribe = function () {
      return api.emitter.subscribe(...arguments);
    };

    this.log = function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      return console.log(ref + ': ', ...args);
    };

    this.error = error => console.error(ref + ': ', error);
  }

}

/***/ }),
/* 8 */
/***/ (function(module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
module.exports = !__webpack_require__(10)(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 10 */
/***/ (function(module, exports) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var anObject = __webpack_require__(5);
var IE8_DOM_DEFINE = __webpack_require__(52);
var toPrimitive = __webpack_require__(39);
var dP = Object.defineProperty;

exports.f = __webpack_require__(9) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(11);
var createDesc = __webpack_require__(23);
module.exports = __webpack_require__(9) ? function (object, key, value) {
  return dP.f(object, key, createDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};


/***/ }),
/* 14 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return grodnify; });
/* unused harmony export mirror */
/* unused harmony export camelize */
/* unused harmony export format */
/* unused harmony export snakeCase */
/* unused harmony export nope */
/* unused harmony export dig */
/* unused harmony export humanize */
/* unused harmony export proper */
/* unused harmony export filterByTags */
/* unused harmony export filterFn */
/* unused harmony export showCounts */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return reducers; });
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(6);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(3);
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var furnitura__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(0);
/* harmony import */ var pramova_mova__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(20);






const grodnify = s => s + ',Гродно,Беларусь';
const mirror = x => (x || '').split('').reduce((r, c) => c + r, '');
const camelize = function camelize(s) {
  let sep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '_';
  return s && s.length && s.split(sep).map((t, i) => i ? Object(furnitura__WEBPACK_IMPORTED_MODULE_3__[/* capitalize */ "b"])(t) : t).join('') || "";
};
const format = function format(s) {
  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    args[_key - 1] = arguments[_key];
  }

  return s && s.length && s.replace(/\{(\d+)\}/g, (_, d) => args[+d] || '') || '';
};
const snakeCase = x => (x || '').replace(/([a-z])([A-Z])/g, '$1_$2');
const nope = x => x;
const dig = (obj, key) => key.split('.').reduce((r, k) => !r ? null : r[k], obj);
const humanize = key => ('' + key).split('_').map(furnitura__WEBPACK_IMPORTED_MODULE_3__[/* capitalize */ "b"]).join(' ');
const proper = s => Object(furnitura__WEBPACK_IMPORTED_MODULE_3__[/* capitalize */ "b"])(camelize(s));
const filterByTags = function filterByTags(data) {
  let rtags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return data.filter(e => {
    const tags = e.tags || [];

    for (let tag of rtags) {
      if (!tags.includes(tag)) {
        return false;
      }
    }

    return true;
  });
};
const filterFn = filter => item => item.status !== 'deleted' && Object.keys(filter || {}).reduce((r, k) => {
  const [field, op = 'eq'] = k.split('__');
  const value = filter[k];
  return r && (!value || (op === 'eq' ? item[field] === value : item[field].includes(value)));
}, true);
const showCounts = function showCounts(counts) {
  let postfix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
  let prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';

  if (!counts) {
    return 'loading...';
  }

  const {
    total,
    actual
  } = counts;

  if (!total) {
    return 'Nic nema';
  }

  if (!actual) {
    return 'Ne znojdzena';
  }

  if (actual === total) {
    return total + ' ' + postfix;
  }

  return prefix + " " + actual + ' / ' + total + ' ' + postfix;
};
const reducers = {
  upper: s => ('' + s).toUpperCase(),
  hostOf: s => Object(furnitura__WEBPACK_IMPORTED_MODULE_3__[/* urlParse */ "j"])(s).target || s,
  date: s => Object(furnitura__WEBPACK_IMPORTED_MODULE_3__[/* representDate */ "h"])(s),
  capitalize: furnitura__WEBPACK_IMPORTED_MODULE_3__[/* capitalize */ "b"],
  serializeParams: x => !x ? '' : Object.keys(x).map(k => "".concat(k, "=").concat(x[k])).join('&'),
  initials: x => !x ? '' : x.split(' ').slice(0, 2).map(s => s.slice(0, 1).toUpperCase()).join(''),
  not: x => !x,
  translit: pramova_mova__WEBPACK_IMPORTED_MODULE_4__[/* translit */ "a"],
  rest: x => x ? x.slice(1) : [],
  limit: x => x ? x.slice(0, 50) : [],
  ifAbove: function ifAbove(x) {
    let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    return +x > +limit ? x : '';
  },
  counts: showCounts,

  subject(_s) {
    const s = _s || '';
    return s.slice(0, 50) + (s.length > 50 ? '...' : '');
  },

  ago(s) {
    const val = s || '';
    return val.fromNow().replace('ago', 'tamu').replace('hours', 'qasow').replace('hour', 'qas').replace('days', 'dzon').replace('day', 'dzen');
  },

  preview(s) {
    return s;
  },

  preview2(s) {
    const val = '' + (s || '');
    return val.replace(/<br\s?\/?>/g, '~').replace(/<.*?>/g, ' ').trim().split('~');
  }

};

/***/ }),
/* 15 */
/***/ (function(module, exports) {

var hasOwnProperty = {}.hasOwnProperty;
module.exports = function (it, key) {
  return hasOwnProperty.call(it, key);
};


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var hide = __webpack_require__(12);
var has = __webpack_require__(15);
var SRC = __webpack_require__(19)('src');
var $toString = __webpack_require__(82);
var TO_STRING = 'toString';
var TPL = ('' + $toString).split(TO_STRING);

__webpack_require__(22).inspectSource = function (it) {
  return $toString.call(it);
};

(module.exports = function (O, key, val, safe) {
  var isFunction = typeof val == 'function';
  if (isFunction) has(val, 'name') || hide(val, 'name', key);
  if (O[key] === val) return;
  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
  if (O === global) {
    O[key] = val;
  } else if (!safe) {
    delete O[key];
    hide(O, key, val);
  } else if (O[key]) {
    O[key] = val;
  } else {
    hide(O, key, val);
  }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, TO_STRING, function toString() {
  return typeof this == 'function' && this[SRC] || $toString.call(this);
});


/***/ }),
/* 17 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
var IObject = __webpack_require__(85);
var defined = __webpack_require__(28);
module.exports = function (it) {
  return IObject(defined(it));
};


/***/ }),
/* 19 */
/***/ (function(module, exports) {

var id = 0;
var px = Math.random();
module.exports = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};


/***/ }),
/* 20 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__(1);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.replace.js
var es6_regexp_replace = __webpack_require__(6);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.constructor.js
var es6_regexp_constructor = __webpack_require__(51);

// CONCATENATED MODULE: ./lib/pramova/mova/const.js

const NORMALIZE_LETTERS = [// vyprawlenne sq
[/shq/gi, function (s) {
  return s[0] + s[2];
}], [/dzh/gi, function (s) {
  return s[0] + 'h';
}], // zvarotnae 'sa'
[/cca\b/g, function (s) {
  return 't sa';
}], [/(shy|ci|m|j)sja\b/g, function (s, s1) {
  return s1 + ' sa';
}], [/[auyoielq][wjiya]sja\b/g, function (s) {
  return s[0] + s[1] + ' sa';
}], // 'j'
[/(dz)j/gi, function (s, s1) {
  return s1;
}], [/jj/gi, function (s) {
  return "'" + s[0];
}], [/lj[nklmspgt]/gi, function (s) {
  return s[0] + s[2];
}], [/\b[nb]ja/gi, function (s, s1) {
  return s[0] + 'e';
}], [/[uaoi]cj\b/g, function (s) {
  return s[0] + 't';
}], [/[zcs]j\b/gi, function (s) {
  return s[0];
}], [/aja\b/gi, function (s) {
  return 'ea';
}], [/[cln]j[cln]/g, function (s, g1, g2) {
  return s[0] + (s[0] === s[2] ? '' : s[1]) + s[2];
}], [/[yi]j[a]/gi, function (s) {
  return s[0] + s[2];
}], [/[ayiu]e[oue]/gi, function (s) {
  return s[0] + s[2];
}], [/[psgklfzcvbnm]j[a]/gi, function (s) {
  return s[0] + 'i' + s[2];
}], [/[psgklfzcvbnm]e[e]/gi, function (s) {
  return s[0] + '' + s[2];
}]];
const NORMALIZE_WORDS = [[/\bjosc\b/gi, function (s, s1) {
  return 'e';
}], [/\bkab\b/gi, function (s, s1) {
  return 'tob';
}], [/\bjasqe\b/gi, function (s, s1) {
  return 'sqe';
}], [/\bjak(\w*)\b/gi, function (s, s1) {
  return s1 ? 'k' + s1 : 'kaj';
}], [/\b(c)iaper\b/gi, 'doper'], [/\bamalj\b/gi, 'badaj'], [/\b(seonnia)(\w*)\b/gi, function (s, s1, s2) {
  return 'dobu' + s2;
}], [/\b(grod)n?(\w*)\b/gi, function (s, s1, s2) {
  return 'Olgard' + (s2 === 'a' ? '' : s2);
}], [/\b(garadzen)(\w*)\b/gi, function (s, s1, s2) {
  return 'Olgard' + (s2 === 'a' ? '' : s2);
}], [/\b(belarus)(\w*)\b/gi, function (s, s1, s2) {
  return 'Baltorus' + s2;
}], [/\b(save[tc])s?k?(\w*)\b/gi, function (s, s1, s2) {
  return 'Slavian' + s2;
}], [/\bj?ewr(o|a)(\w*)\b/gi, function (s, s1, s2) {
  return 'Euro' + s2;
}], [/\respublik(\w*)\b/gi, function (s, s1, s2) {
  return 'Impery' + s1;
}], [/\bv?oblasc?n?(\w*)\b/gi, function (s, s1, s2) {
  return 'zon' + s1;
}], [/\brajon?n?(\w*)\b/gi, function (s, s1, s2) {
  return 'pavet' + s1;
}], [/\blit(ow|v)(\w+)\b/gi, function (s, s1, s2) {
  return 'Letuvis' + s2;
}], [/\bpols(q|k)(\w+)\b/gi, function (s, s1, s2) {
  return 'Panstv' + s2;
}], [/\b(lenin)(\w*)\b/gi, function (s, s1, s2) {
  return 'Babaj' + s2;
}], [/\b(kastryqn)(\w*)\b/gi, function (s, s1, s2) {
  return 'Kryshn' + s2;
}], [/\b(prezident)(\w*)\b/gi, function (s, s1, s2) {
  return 'Igemon' + s2;
}], [/\b(lukashenk)(\w*)\b/gi, function (s, s1, s2) {
  return 'I';
}], [/\b((?:abl|gar|raj)vykankam)(\w*)\b/gi, function (s, s1, s2) {
  return 'Kurultaj' + s2;
}], [/\b(naj)([qrtpsdfghklxcvbnm]\w+)\b/gi, function (s, s1, s2) {
  return s1 + ' ' + s2;
}], [/\bw/gi, function (s) {
  return s === 'w' ? 'u' : 'U';
}] // 'ja'
// [/[iy]ja/gi, function (s) { return s[0] + 'e';}]
// [/[cklmvsnzbp]ja/gi, function (s, g1) { return s[0] + 'i' + s[2];}]
];
const sPrystawki = "abjas|nepry|paras|pryna|sprad|nepa|pada|pavy|pera|aba|abo|naj|nea|nes|new|pad|paw|pow|pra|pro|pry|ras|spa|wva|ab|ad|da|na|ne|ni|pa|po|sa|su|vo|vy|ws|za|a|s|u|w|z";
const ngram1 = "b|bl|br|c|cm|cs|cv|d|dr|dv|dz|dzh|dzm|dzv|f|fl|g|gl|gm|gn|gr|gv|ja|k|kl|kn|kp|kr|krz|ks|kv|l|lg|m|mg|mgl|mgn|ml|mn|mr|n|p|pl|pq|pr|ps|psh|pt|pxn|q|qm|qv|r|rv|rz|rzh|s|sc|sh|shk|shl|shm|shn|shp|shq|shr|sht|shv|sk|skl|skr|skv|sl|sm|smr|sn|sp|spr|sq|sr|st|str|sv|t|tk|tkn|tl|tr|tv|tx|v|v|w|x|xl|xm|xr|xt|xv|z|zd|zdr|zdz|zh|zhd|zhm|zhn|zhv|zl|zm|zn|zr|zv";
const ngram2 = "b|br|c|cm|cs|d|dk|dl|dr|dsk|dt|dv|dx|dz|dzc|dzh|dzk|dzm|dzv|f|ft|g|gc|gd|gl|gn|gr|gs|k|kc|kk|kl|kn|kr|ks|kt|kv|l|lb|ld|ldz|lg|lk|ll|lm|lp|lt|lz|m|mb|mk|ml|mn|mp|mr|ms|msc|mz|n|nc|ncs|nd|ndr|ndz|nk|nkt|nn|nq|ns|nsh|nsk|nt|ntr|nzh|p|pc|pl|pn|psh|psk|pst|pt|q|qm|qn|qq|r|rb|rc|rcs|rd|rdz|rg|rgn|rk|rkv|rl|rm|rn|rp|rpl|rq|rs|rsh|rsk|rsq|rst|rt|rtk|rtv|rv|rx|rzd|rzh|s|sc|scm|scs|sh|shc|shk|shl|shm|shn|sht|sk|skr|sl|sm|sn|sp|sq|st|str|t|tc|tk|tkn|tl|tn|tq|tr|v|w|x|xc|xk|xl|xm|xn|xq|xr|xt|z|zb|zd|zdq|zdr|zdz|zg|zgr|zh|zhd|zhn|zhq|zhz|zk|zl|zn|zsh";
const sKorani = "((".concat(ngram1, ")(a|ai|aj|e|ej|i|ja|ju|o|oj|u|uj|y)(").concat(ngram2, ")?)(og|ozh|[iayou]q|[ao][td])?j?[kcqln]?");
const sKanqatki = "(avawsh|ikowsk|adann|adliv|adumn|alenn|alist|aljon|aluqn|anstv|aqenn|aqkov|aqysq|arank|arodc|arodk|arodn|asnul|atann|atliv|atvor|avann|avenn|averx|avink|avjak|avodn|awlen|awlin|azdaq|azliv|ennic|ennik|enstv|instv|iwnik|jajuq|jecjk|meshn|nuwsh|onaqk|ovejk|udziv|uvann|uxnul|yvann|yxnul|abok|acjk|ajuq|alit|aljn|alos|anic|anin|anit|anjk|anov|anul|apud|aqyn|arad|arob|arsk|atux|avan|avat|avic|avit|awsh|azhn|ejsh|eljk|enjk|ensk|eshk|ewsh|ewsk|ezhn|icjk|iljn|ishk|iwsh|jank|jort|jutk|ocjk|okag|olen|oljn|onan|ontk|ovan|oviq|owsk|oxan|ozhn|shag|shan|ujuq|uman|ushk|ushn|uwsh|vjak|vjan|yqyn|yrav|ytus|ywsh|acc|adk|adn|adz|agn|ajc|ajk|ajn|ank|ann|aqk|aqv|ark|asc|ask|asl|asn|ast|atk|atn|awk|awl|axl|azh|bat|bov|edz|egl|ejk|elc|enc|enn|eqk|erk|esn|esq|ess|etn|ewc|ewk|ezg|gac|gan|idl|inc|ink|iqn|isl|isq|ist|itn|jas|jav|jon|mex|obk|obn|odn|odz|ojn|oll|omi|onc|onk|onn|oqk|oqv|ork|orn|otk|otn|owc|owk|own|owv|stk|stv|uar|ukn|ush|usk|utk|uxn|van|ydn|ync|ynk|ysh|ysq|yst|ytk|ab|ad|ag|ak|al|am|an|aq|ar|as|at|av|az|ec|ed|el|en|eq|er|et|ev|ew|ex|ic|id|ik|in|it|iv|ix|iz|ob|oc|od|og|ok|ol|on|op|oq|os|ot|ov|ow|sh|sk|st|ug|uk|ul|um|un|uq|us|ut|ux|yg|yk|yn|yq|yr|yt|yv|yx|b|v)?j?(a|e|i|o|u|y|ae|aj|am|aw|ax|ei|ej|em|ii|im|ix|ma|mi|oe|oi|oj|om|ue|uj|ym|yx|uw|aem|aja|aju|ami|amu|ee|eju|ija|imi|oju|oma|omi|omu|uju|yju|yja|ymi|ymu|yma|ajami|[auye]em|[iaeuy]li|[iaeuy]la|[iaeuy]lo|[aie]sh|[auye]esh|[ao]ga|gi|ogi)?";
const ReKoranj = new RegExp('^' + sKorani + sKanqatki + '$', '');
const RePrefixKoranj = new RegExp('^' + '(' + sPrystawki + ')' + sKorani + sKanqatki + '$', '');
const ReCj = new RegExp('(cj|ci|sja|sj|cje)$'); // kanqatki: var ReKoranj = new RegExp('^[a-z]{4,10}([aeuioj][aeuiojm]{1,4})$','g')
// sufiksy1: var ReKoranj = new RegExp('^('+prefixes.first.join('|')+')'+'?(('+ngram.first.join('|')+')'+'('+ngram.vowel.join('|')+')'+'('+ngram.second.join('|')+'))([^zhtrp][a-z]*)?([aeuiojm]{1,3})$','g')
// CONCATENATED MODULE: ./lib/pramova/mova/utils.js

const mreplace = (arr, x) => arr.reduce((s, _ref) => {
  let [re, sub] = _ref;
  return s.replace(re, sub);
}, x);
// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__(3);

// CONCATENATED MODULE: ./lib/pramova/mova/cyrlat.js

const CYRLAT = {
  а: 'a',
  е: 'e',
  э: 'e',
  о: 'o',
  ы: 'y',
  i: 'i',
  і: 'i',
  и: 'i',
  й: 'j',
  ь: 'j',
  ю: 'eu',
  я: 'ja',
  ё: 'eo',
  ъ: "'",
  ж: 'gh',
  ш: 'sh',
  щ: 'sq',
  б: 'b',
  в: 'v',
  г: 'g',
  д: 'd',
  з: 'z',
  к: 'k',
  л: 'l',
  м: 'm',
  н: 'n',
  п: 'p',
  р: 'r',
  с: 's',
  т: 't',
  у: 'u',
  ў: 'w',
  ф: 'f',
  х: 'x',
  ц: 'c',
  ч: 'q',
  А: 'A',
  Б: 'B',
  В: 'V',
  Г: 'G',
  Д: 'D',
  Е: 'Je',
  Ё: 'Jo',
  Ж: 'Zh',
  З: 'Z',
  И: 'I',
  Й: 'J',
  К: 'K',
  Л: 'L',
  М: 'M',
  Н: 'N',
  О: 'O',
  П: 'P',
  Р: 'R',
  С: 'S',
  Т: 'T',
  У: 'U',
  Ў: 'W',
  Ф: 'F',
  Х: 'X',
  Ц: 'C',
  Ч: 'Q',
  Ш: 'Sh',
  Щ: 'Sq',
  Э: 'E',
  Ы: 'Y',
  Ь: 'j',
  Ю: 'Ju',
  Я: 'Ja'
};
const cyrlat = s => ('' + s).split('').map(x => CYRLAT[x] || x).join('');
// CONCATENATED MODULE: ./lib/pramova/mova/index.js
/* unused harmony export parse */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return translit; });
/* unused harmony export analyze */






function parse(input) {
  let output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  const roots = output.roots || (output.roots = {});
  const words = output.words || (output.words = {});

  const addItem = function addItem(root, word, count) {
    const wordItem = words[word] || (words[word] = {
      count: 0,
      roots: []
    });
    wordItem.count += count;
    wordItem.roots.push(root);
    const rootItem = roots[root] || (roots[root] = {
      count: 0,
      words: []
    });
    rootItem.count += count;
    rootItem.words.push(word);
    return true;
  };

  (input || []).map(function (item, i) {
    var found = false;
    var str = item.origin;
    str.replace(ReCj, function (s, p) {
      str = str.slice(0, -p.length);
    });
    str.replace(ReKoranj, function (s, rx) {
      found = addItem(rx, item.origin, item.count);
    });
    str.replace(RePrefixKoranj, function (s, p, rx) {
      found = addItem(rx, item.origin, item.count);
    });

    if (!found) {
      addItem(str, item.origin, 0);
    }
  });
  return output;
}
function translit(s) {
  return mreplace(NORMALIZE_WORDS, mreplace(NORMALIZE_LETTERS, cyrlat(s)));
}
function analyze(text) {
  const input = {};
  const output = {
    origin: text
  };

  const addWord = function addWord(w) {
    const ch = w.toLowerCase();
    var item = input[ch] || (input[ch] = {
      origin: ch,
      count: 0,
      samples: []
    });
    item.count += 1;
    return w;
  };

  output.normalized = text.replace(/[a-z]+/gi, addWord).replace(/[а-яiіў]+/gi, s => addWord(translit(s)));
  parse(Object.keys(input).map(key => input[key]), output);
  return output;
}

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var core = __webpack_require__(22);
var hide = __webpack_require__(12);
var redefine = __webpack_require__(16);
var ctx = __webpack_require__(54);
var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
  var key, own, out, exp;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    // export native or passed
    out = (own ? target : source)[key];
    // bind timers to global for call from export context
    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
    // extend global
    if (target) redefine(target, key, out, type & $export.U);
    // export
    if (exports[key] != out) hide(exports, key, exp);
    if (IS_PROTO && expProto[key] != out) expProto[key] = out;
  }
};
global.core = core;
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
module.exports = $export;


/***/ }),
/* 22 */
/***/ (function(module, exports) {

var core = module.exports = { version: '2.6.9' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


/***/ }),
/* 23 */
/***/ (function(module, exports) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

var core = __webpack_require__(22);
var global = __webpack_require__(8);
var SHARED = '__core-js_shared__';
var store = global[SHARED] || (global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: core.version,
  mode: __webpack_require__(25) ? 'pure' : 'global',
  copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
});


/***/ }),
/* 25 */
/***/ (function(module, exports) {

module.exports = false;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
var $keys = __webpack_require__(57);
var enumBugKeys = __webpack_require__(43);

module.exports = Object.keys || function keys(O) {
  return $keys(O, enumBugKeys);
};


/***/ }),
/* 27 */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};


/***/ }),
/* 28 */
/***/ (function(module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.15 ToLength
var toInteger = __webpack_require__(30);
var min = Math.min;
module.exports = function (it) {
  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};


/***/ }),
/* 30 */
/***/ (function(module, exports) {

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
module.exports = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
var defined = __webpack_require__(28);
module.exports = function (it) {
  return Object(defined(it));
};


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var classof = __webpack_require__(100);
var builtinExec = RegExp.prototype.exec;

 // `RegExpExec` abstract operation
// https://tc39.github.io/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (typeof exec === 'function') {
    var result = exec.call(R, S);
    if (typeof result !== 'object') {
      throw new TypeError('RegExp exec method returned something other than an Object or null');
    }
    return result;
  }
  if (classof(R) !== 'RegExp') {
    throw new TypeError('RegExp#exec called on incompatible receiver');
  }
  return builtinExec.call(R, S);
};


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// 21.2.5.3 get RegExp.prototype.flags
var anObject = __webpack_require__(5);
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__(101);
var redefine = __webpack_require__(16);
var hide = __webpack_require__(12);
var fails = __webpack_require__(10);
var defined = __webpack_require__(28);
var wks = __webpack_require__(4);
var regexpExec = __webpack_require__(48);

var SPECIES = wks('species');

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  // #replace needs built-in support for named groups.
  // #match works fine because it just return the exec results, even if it has
  // a "grops" property.
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  return ''.replace(re, '$<a>') !== '7';
});

var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = (function () {
  // Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length === 2 && result[0] === 'a' && result[1] === 'b';
})();

module.exports = function (KEY, length, exec) {
  var SYMBOL = wks(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL ? !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;
    re.exec = function () { execCalled = true; return null; };
    if (KEY === 'split') {
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
    }
    re[SYMBOL]('');
    return !execCalled;
  }) : undefined;

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    (KEY === 'replace' && !REPLACE_SUPPORTS_NAMED_GROUPS) ||
    (KEY === 'split' && !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC)
  ) {
    var nativeRegExpMethod = /./[SYMBOL];
    var fns = exec(
      defined,
      SYMBOL,
      ''[KEY],
      function maybeCallNative(nativeMethod, regexp, str, arg2, forceStringMethod) {
        if (regexp.exec === regexpExec) {
          if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
            // The native String method already delegates to @@method (this
            // polyfilled function), leasing to infinite recursion.
            // We avoid it by directly calling the native @@method method.
            return { done: true, value: nativeRegExpMethod.call(regexp, str, arg2) };
          }
          return { done: true, value: nativeMethod.call(str, regexp, arg2) };
        }
        return { done: false };
      }
    );
    var strfn = fns[0];
    var rxfn = fns[1];

    redefine(String.prototype, KEY, strfn);
    hide(RegExp.prototype, SYMBOL, length == 2
      // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
      // 21.2.5.11 RegExp.prototype[@@split](string, limit)
      ? function (string, arg) { return rxfn.call(string, this, arg); }
      // 21.2.5.6 RegExp.prototype[@@match](string)
      // 21.2.5.9 RegExp.prototype[@@search](string)
      : function (string) { return rxfn.call(string, this); }
    );
  }
};


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var $export = __webpack_require__(21);
var aFunction = __webpack_require__(40);
var toObject = __webpack_require__(31);
var fails = __webpack_require__(10);
var $sort = [].sort;
var test = [1, 2, 3];

$export($export.P + $export.F * (fails(function () {
  // IE8-
  test.sort(undefined);
}) || !fails(function () {
  // V8 bug
  test.sort(null);
  // Old WebKit
}) || !__webpack_require__(102)($sort)), 'Array', {
  // 22.1.3.25 Array.prototype.sort(comparefn)
  sort: function sort(comparefn) {
    return comparefn === undefined
      ? $sort.call(toObject(this))
      : $sort.call(toObject(this), aFunction(comparefn));
  }
});


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

__webpack_require__(103);
var anObject = __webpack_require__(5);
var $flags = __webpack_require__(33);
var DESCRIPTORS = __webpack_require__(9);
var TO_STRING = 'toString';
var $toString = /./[TO_STRING];

var define = function (fn) {
  __webpack_require__(16)(RegExp.prototype, TO_STRING, fn, true);
};

// 21.2.5.14 RegExp.prototype.toString()
if (__webpack_require__(10)(function () { return $toString.call({ source: 'a', flags: 'b' }) != '/a/b'; })) {
  define(function toString() {
    var R = anObject(this);
    return '/'.concat(R.source, '/',
      'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
  });
// FF44- RegExp#toString has a wrong name
} else if ($toString.name != TO_STRING) {
  define(function toString() {
    return $toString.call(this);
  });
}


/***/ }),
/* 37 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* unused harmony export fromJS */
/* unused harmony export fromTemplates */
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return loadTemplates; });
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(6);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var furnitura__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(0);



const fromJS = o => Object.keys(o).map(k => typeof o[k] === 'function' ? o[k] : {
  NAME: k,
  TEMPLATE: o[k]
});
const fromTemplates = function fromTemplates() {
  for (var _len = arguments.length, list = new Array(_len), _key = 0; _key < _len; _key++) {
    list[_key] = arguments[_key];
  }

  return list.map(key => document.getElementById(Object(furnitura__WEBPACK_IMPORTED_MODULE_2__[/* capitalize */ "b"])(key) + 'Template')).map(top => [...top.import.body.children].map(e => ({
    NAME: e.getAttribute('id'),
    TEMPLATE: e.innerHTML
  }))).reduce((r, e) => r.concat(e), []);
};
const loadTemplates = function loadTemplates() {
  const R = [];

  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }

  args.forEach(s => s.replace(/<template\sid="(.+)"\>([\s\S]*?)<\/template>/gm, (_, id, templ) => R.push({
    NAME: id,
    TEMPLATE: templ
  })));
  return R;
};

/***/ }),
/* 38 */
/***/ (function(module, exports) {

module.exports = function(originalModule) {
	if (!originalModule.webpackPolyfill) {
		var module = Object.create(originalModule);
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		Object.defineProperty(module, "exports", {
			enumerable: true
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
var isObject = __webpack_require__(13);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
module.exports = function (it, S) {
  if (!isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),
/* 40 */
/***/ (function(module, exports) {

module.exports = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};


/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

var def = __webpack_require__(11).f;
var has = __webpack_require__(15);
var TAG = __webpack_require__(4)('toStringTag');

module.exports = function (it, tag, stat) {
  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};


/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

var shared = __webpack_require__(24)('keys');
var uid = __webpack_require__(19);
module.exports = function (key) {
  return shared[key] || (shared[key] = uid(key));
};


/***/ }),
/* 43 */
/***/ (function(module, exports) {

// IE 8- don't enum bug keys
module.exports = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');


/***/ }),
/* 44 */
/***/ (function(module, exports) {

exports.f = {}.propertyIsEnumerable;


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
var $keys = __webpack_require__(57);
var hiddenKeys = __webpack_require__(43).concat('length', 'prototype');

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return $keys(O, hiddenKeys);
};


/***/ }),
/* 46 */
/***/ (function(module, exports) {

module.exports = {};


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var at = __webpack_require__(99)(true);

 // `AdvanceStringIndex` abstract operation
// https://tc39.github.io/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? at(S, index).length : 1);
};


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var regexpFlags = __webpack_require__(33);

var nativeExec = RegExp.prototype.exec;
// This always refers to the native implementation, because the
// String#replace polyfill uses ./fix-regexp-well-known-symbol-logic.js,
// which loads this file before patching the method.
var nativeReplace = String.prototype.replace;

var patchedExec = nativeExec;

var LAST_INDEX = 'lastIndex';

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/,
      re2 = /b*/g;
  nativeExec.call(re1, 'a');
  nativeExec.call(re2, 'a');
  return re1[LAST_INDEX] !== 0 || re2[LAST_INDEX] !== 0;
})();

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED;

if (PATCH) {
  patchedExec = function exec(str) {
    var re = this;
    var lastIndex, reCopy, match, i;

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + re.source + '$(?!\\s)', regexpFlags.call(re));
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re[LAST_INDEX];

    match = nativeExec.call(re, str);

    if (UPDATES_LAST_INDEX_WRONG && match) {
      re[LAST_INDEX] = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      // eslint-disable-next-line no-loop-func
      nativeReplace.call(match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(5);
var toLength = __webpack_require__(29);
var advanceStringIndex = __webpack_require__(47);
var regExpExec = __webpack_require__(32);

// @@match logic
__webpack_require__(34)('match', 1, function (defined, MATCH, $match, maybeCallNative) {
  return [
    // `String.prototype.match` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.match
    function match(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[MATCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
    },
    // `RegExp.prototype[@@match]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@match
    function (regexp) {
      var res = maybeCallNative($match, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      if (!rx.global) return regExpExec(rx, S);
      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
      var A = [];
      var n = 0;
      var result;
      while ((result = regExpExec(rx, S)) !== null) {
        var matchStr = String(result[0]);
        A[n] = matchStr;
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        n++;
      }
      return n === 0 ? null : A;
    }
  ];
});


/***/ }),
/* 50 */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(this, {}))

/***/ }),
/* 51 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var inheritIfRequired = __webpack_require__(107);
var dP = __webpack_require__(11).f;
var gOPN = __webpack_require__(45).f;
var isRegExp = __webpack_require__(61);
var $flags = __webpack_require__(33);
var $RegExp = global.RegExp;
var Base = $RegExp;
var proto = $RegExp.prototype;
var re1 = /a/g;
var re2 = /a/g;
// "new" creates a new object, old webkit buggy here
var CORRECT_NEW = new $RegExp(re1) !== re1;

if (__webpack_require__(9) && (!CORRECT_NEW || __webpack_require__(10)(function () {
  re2[__webpack_require__(4)('match')] = false;
  // RegExp constructor can alter flags and IsRegExp works correct with @@match
  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
}))) {
  $RegExp = function RegExp(p, f) {
    var tiRE = this instanceof $RegExp;
    var piRE = isRegExp(p);
    var fiU = f === undefined;
    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
      : inheritIfRequired(CORRECT_NEW
        ? new Base(piRE && !fiU ? p.source : p, f)
        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
      , tiRE ? this : proto, $RegExp);
  };
  var proxy = function (key) {
    key in $RegExp || dP($RegExp, key, {
      configurable: true,
      get: function () { return Base[key]; },
      set: function (it) { Base[key] = it; }
    });
  };
  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
  proto.constructor = $RegExp;
  $RegExp.prototype = proto;
  __webpack_require__(16)(global, 'RegExp', $RegExp);
}

__webpack_require__(109)('RegExp');


/***/ }),
/* 52 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = !__webpack_require__(9) && !__webpack_require__(10)(function () {
  return Object.defineProperty(__webpack_require__(53)('div'), 'a', { get: function () { return 7; } }).a != 7;
});


/***/ }),
/* 53 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(13);
var document = __webpack_require__(8).document;
// typeof document.createElement is 'object' in old IE
var is = isObject(document) && isObject(document.createElement);
module.exports = function (it) {
  return is ? document.createElement(it) : {};
};


/***/ }),
/* 54 */
/***/ (function(module, exports, __webpack_require__) {

// optional / simple context binding
var aFunction = __webpack_require__(40);
module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

exports.f = __webpack_require__(4);


/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

var global = __webpack_require__(8);
var core = __webpack_require__(22);
var LIBRARY = __webpack_require__(25);
var wksExt = __webpack_require__(55);
var defineProperty = __webpack_require__(11).f;
module.exports = function (name) {
  var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, { value: wksExt.f(name) });
};


/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

var has = __webpack_require__(15);
var toIObject = __webpack_require__(18);
var arrayIndexOf = __webpack_require__(86)(false);
var IE_PROTO = __webpack_require__(42)('IE_PROTO');

module.exports = function (object, names) {
  var O = toIObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};


/***/ }),
/* 58 */
/***/ (function(module, exports) {

exports.f = Object.getOwnPropertySymbols;


/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
var anObject = __webpack_require__(5);
var dPs = __webpack_require__(89);
var enumBugKeys = __webpack_require__(43);
var IE_PROTO = __webpack_require__(42)('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = __webpack_require__(53)('iframe');
  var i = enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  __webpack_require__(90).appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
  return createDict();
};

module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE] = anObject(O);
    result = new Empty();
    Empty[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = createDict();
  return Properties === undefined ? result : dPs(result, Properties);
};


/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

var pIE = __webpack_require__(44);
var createDesc = __webpack_require__(23);
var toIObject = __webpack_require__(18);
var toPrimitive = __webpack_require__(39);
var has = __webpack_require__(15);
var IE8_DOM_DEFINE = __webpack_require__(52);
var gOPD = Object.getOwnPropertyDescriptor;

exports.f = __webpack_require__(9) ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = toIObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
};


/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.8 IsRegExp(argument)
var isObject = __webpack_require__(13);
var cof = __webpack_require__(27);
var MATCH = __webpack_require__(4)('match');
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
};


/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var anObject = __webpack_require__(5);
var sameValue = __webpack_require__(104);
var regExpExec = __webpack_require__(32);

// @@search logic
__webpack_require__(34)('search', 1, function (defined, SEARCH, $search, maybeCallNative) {
  return [
    // `String.prototype.search` method
    // https://tc39.github.io/ecma262/#sec-string.prototype.search
    function search(regexp) {
      var O = defined(this);
      var fn = regexp == undefined ? undefined : regexp[SEARCH];
      return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
    },
    // `RegExp.prototype[@@search]` method
    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@search
    function (regexp) {
      var res = maybeCallNative($search, regexp, this);
      if (res.done) return res.value;
      var rx = anObject(regexp);
      var S = String(this);
      var previousLastIndex = rx.lastIndex;
      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
      var result = regExpExec(rx, S);
      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
      return result === null ? -1 : result.index;
    }
  ];
});


/***/ }),
/* 63 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return Firebase; });
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _vendor_firebase_firebase_app_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(105);
/* harmony import */ var _vendor_firebase_firebase_firestore_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(106);
/* harmony import */ var _vendor_firebase_firebase_auth_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(112);
/* harmony import */ var _AService_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7);






const unpackDocs = s => s.docs.reduce((r, e) => {
  const d = e.data();
  d.id = e.id;
  r.push(d);
  return r;
}, []);

class Firebase extends _AService_js__WEBPACK_IMPORTED_MODULE_4__[/* AService */ "a"] {
  constructor(options) {
    super(options);
    const firebase = window.firebase;
    firebase.initializeApp(this.config);
    this.firestore = firebase.firestore();
    this.firestore.enablePersistence({
      synchronizeTabs: true
    }).catch(function (err) {
      if (err.code === 'failed-precondition') {// Multiple tabs open, persistence can only be enabled
        // in one tab at a a time.
        // ...
      } else if (err.code === 'unimplemented') {// The current browser does not support all of the
        // features required to enable persistence
        // ...
      }
    });
    this.auth = firebase.auth();
    this.auth.languageCode = 'by';
    this.providers = {
      Google: firebase.auth.GoogleAuthProvider
    };
  }

  done() {
    const firebase = window.firebase;
    firebase.app().delete();
  } // auth


  signInAnonymously() {
    this.auth.signInAnonymously().catch(function (error) {
      var errorMessage = error.message;
      console.log('signInAnonymously err=' + errorMessage);
    });
  }

  listenUser(cb) {
    this.auth.onAuthStateChanged(cb);
  }

  getCurrentUser() {
    return this.auth.currentUser;
  }

  linkProvider(cb) {
    const provider = new this.providers.Google();
    provider.addScope('https://www.googleapis.com/auth/contacts.readonly');
    this.auth.signInWithPopup(provider).then(function (result) {
      // This gives you a Google Access Token. You can use it to access the Google API.
      // var token = result.credential.accessToken
      // The signed-in user info.
      var googleUser = result.user;
      var credential = this.auth.GoogleAuthProvider.credential(googleUser.getAuthResponse().id_token);
      this.getCurrentUser().linkAndRetrieveDataWithCredential(credential).then(function (usercred) {
        var user = usercred.user;
        console.log('Anonymous account successfully upgraded', user);
        cb();
      }, function (error) {
        console.log('Error upgrading anonymous account', error);
      }); // ...
    }).catch(function (error) {
      // Handle Errors here.
      // var errorCode = error.code
      var errorMessage = error.message; // The email of the user's account used.
      // var email = error.email
      // The firebase.auth.AuthCredential type that was used.
      // var credential = error.credential

      console.log('signInAnonymously err=' + errorMessage); // ...
    });
  }

  logout(cb) {
    cb();
  }

  getCollection(coll, since) {
    return (c => since ? c.where('modified_at', '>', since) : c)(this.firestore.collection(coll)).get().then(unpackDocs);
  } // db


  listenCollection(coll) {
    let ts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    let cb = arguments.length > 2 ? arguments[2] : undefined;
    return (c => ts ? c.where('modified_at', '>', ts) : c)(this.firestore.collection(coll)).onSnapshot(function (querySnapshot) {
      var r = [];
      querySnapshot.forEach(function (e) {
        const d = e.data();
        d.id = e.id;
        r.push(d);
      });
      cb(null, {
        [coll]: r
      });
    });
  }

  nextId(coll) {
    return this.firestore.collection(coll).doc().id;
  }

  update(delta) {
    const now = Date.now().valueOf(); // Get a new write batch

    var batch = this.firestore.batch();
    Object.keys(delta).forEach(coll => {
      const c = this.firestore.collection(coll);
      delta[coll].forEach(d => {
        d.modified_at = now;
        var ref = c.doc('' + d.id);
        batch.set(ref, d, {
          merge: true
        });
      });
    });
    return batch.commit();
  }

}
const hot =  false ? undefined : module.hot;

if (hot) {
  // hot.addStatusHandler(function (d) {})
  hot.accept();
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(38)(module)))

/***/ }),
/* 64 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

__webpack_require__(56)('asyncIterator');


/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, '__esModule', { value: true });

var tslib_1 = __webpack_require__(67);
var util = __webpack_require__(110);
var logger$1 = __webpack_require__(111);

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var _a;
var ERRORS = (_a = {},
    _a["no-app" /* NO_APP */] = "No Firebase App '{$name}' has been created - " +
        'call Firebase App.initializeApp()',
    _a["bad-app-name" /* BAD_APP_NAME */] = "Illegal App name: '{$name}",
    _a["duplicate-app" /* DUPLICATE_APP */] = "Firebase App named '{$name}' already exists",
    _a["app-deleted" /* APP_DELETED */] = "Firebase App named '{$name}' already deleted",
    _a["duplicate-service" /* DUPLICATE_SERVICE */] = "Firebase service named '{$name}' already registered",
    _a["invalid-app-argument" /* INVALID_APP_ARGUMENT */] = 'firebase.{$name}() takes either no argument or a ' +
        'Firebase App instance.',
    _a);
var ERROR_FACTORY = new util.ErrorFactory('app', 'Firebase', ERRORS);

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var DEFAULT_ENTRY_NAME = '[DEFAULT]';

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// An array to capture listeners before the true auth functions
// exist
var tokenListeners = [];
/**
 * Global context object for a collection of services using
 * a shared authentication state.
 */
var FirebaseAppImpl = /** @class */ (function () {
    function FirebaseAppImpl(options, config, firebase_) {
        this.firebase_ = firebase_;
        this.isDeleted_ = false;
        this.services_ = {};
        this.name_ = config.name;
        this.automaticDataCollectionEnabled_ =
            config.automaticDataCollectionEnabled || false;
        this.options_ = util.deepCopy(options);
        this.INTERNAL = {
            getUid: function () { return null; },
            getToken: function () { return Promise.resolve(null); },
            addAuthTokenListener: function (callback) {
                tokenListeners.push(callback);
                // Make sure callback is called, asynchronously, in the absence of the auth module
                setTimeout(function () { return callback(null); }, 0);
            },
            removeAuthTokenListener: function (callback) {
                tokenListeners = tokenListeners.filter(function (listener) { return listener !== callback; });
            }
        };
    }
    Object.defineProperty(FirebaseAppImpl.prototype, "automaticDataCollectionEnabled", {
        get: function () {
            this.checkDestroyed_();
            return this.automaticDataCollectionEnabled_;
        },
        set: function (val) {
            this.checkDestroyed_();
            this.automaticDataCollectionEnabled_ = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FirebaseAppImpl.prototype, "name", {
        get: function () {
            this.checkDestroyed_();
            return this.name_;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FirebaseAppImpl.prototype, "options", {
        get: function () {
            this.checkDestroyed_();
            return this.options_;
        },
        enumerable: true,
        configurable: true
    });
    FirebaseAppImpl.prototype.delete = function () {
        var _this = this;
        return new Promise(function (resolve) {
            _this.checkDestroyed_();
            resolve();
        })
            .then(function () {
            _this.firebase_.INTERNAL.removeApp(_this.name_);
            var services = [];
            for (var _i = 0, _a = Object.keys(_this.services_); _i < _a.length; _i++) {
                var serviceKey = _a[_i];
                for (var _b = 0, _c = Object.keys(_this.services_[serviceKey]); _b < _c.length; _b++) {
                    var instanceKey = _c[_b];
                    services.push(_this.services_[serviceKey][instanceKey]);
                }
            }
            return Promise.all(services
                .filter(function (service) { return 'INTERNAL' in service; })
                .map(function (service) { return service.INTERNAL.delete(); }));
        })
            .then(function () {
            _this.isDeleted_ = true;
            _this.services_ = {};
        });
    };
    /**
     * Return a service instance associated with this app (creating it
     * on demand), identified by the passed instanceIdentifier.
     *
     * NOTE: Currently storage is the only one that is leveraging this
     * functionality. They invoke it by calling:
     *
     * ```javascript
     * firebase.app().storage('STORAGE BUCKET ID')
     * ```
     *
     * The service name is passed to this already
     * @internal
     */
    FirebaseAppImpl.prototype._getService = function (name, instanceIdentifier) {
        if (instanceIdentifier === void 0) { instanceIdentifier = DEFAULT_ENTRY_NAME; }
        this.checkDestroyed_();
        if (!this.services_[name]) {
            this.services_[name] = {};
        }
        if (!this.services_[name][instanceIdentifier]) {
            /**
             * If a custom instance has been defined (i.e. not '[DEFAULT]')
             * then we will pass that instance on, otherwise we pass `null`
             */
            var instanceSpecifier = instanceIdentifier !== DEFAULT_ENTRY_NAME
                ? instanceIdentifier
                : undefined;
            var service = this.firebase_.INTERNAL.factories[name](this, this.extendApp.bind(this), instanceSpecifier);
            this.services_[name][instanceIdentifier] = service;
        }
        return this.services_[name][instanceIdentifier];
    };
    /**
     * Callback function used to extend an App instance at the time
     * of service instance creation.
     */
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    FirebaseAppImpl.prototype.extendApp = function (props) {
        var _this = this;
        // Copy the object onto the FirebaseAppImpl prototype
        util.deepExtend(this, props);
        /**
         * If the app has overwritten the addAuthTokenListener stub, forward
         * the active token listeners on to the true fxn.
         *
         * TODO: This function is required due to our current module
         * structure. Once we are able to rely strictly upon a single module
         * implementation, this code should be refactored and Auth should
         * provide these stubs and the upgrade logic
         */
        if (props.INTERNAL && props.INTERNAL.addAuthTokenListener) {
            tokenListeners.forEach(function (listener) {
                _this.INTERNAL.addAuthTokenListener(listener);
            });
            tokenListeners = [];
        }
    };
    /**
     * This function will throw an Error if the App has already been deleted -
     * use before performing API actions on the App.
     */
    FirebaseAppImpl.prototype.checkDestroyed_ = function () {
        if (this.isDeleted_) {
            throw ERROR_FACTORY.create("app-deleted" /* APP_DELETED */, { name: this.name_ });
        }
    };
    return FirebaseAppImpl;
}());
// Prevent dead-code elimination of these methods w/o invalid property
// copying.
(FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||
    FirebaseAppImpl.prototype.delete ||
    console.log('dc');

var version = "6.2.4";

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Because auth can't share code with other components, we attach the utility functions
 * in an internal namespace to share code.
 * This function return a firebase namespace object without
 * any utility functions, so it can be shared between the regular firebaseNamespace and
 * the lite version.
 */
function createFirebaseNamespaceCore(firebaseAppImpl) {
    var apps = {};
    var factories = {};
    var appHooks = {};
    // A namespace is a plain JavaScript Object.
    var namespace = {
        // Hack to prevent Babel from modifying the object returned
        // as the firebase namespace.
        // @ts-ignore
        __esModule: true,
        initializeApp: initializeApp,
        // @ts-ignore
        app: app,
        // @ts-ignore
        apps: null,
        SDK_VERSION: version,
        INTERNAL: {
            registerService: registerService,
            removeApp: removeApp,
            factories: factories,
            useAsService: useAsService
        }
    };
    // Inject a circular default export to allow Babel users who were previously
    // using:
    //
    //   import firebase from 'firebase';
    //   which becomes: var firebase = require('firebase').default;
    //
    // instead of
    //
    //   import * as firebase from 'firebase';
    //   which becomes: var firebase = require('firebase');
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    namespace['default'] = namespace;
    // firebase.apps is a read-only getter.
    Object.defineProperty(namespace, 'apps', {
        get: getApps
    });
    /**
     * Called by App.delete() - but before any services associated with the App
     * are deleted.
     */
    function removeApp(name) {
        var app = apps[name];
        callAppHooks(app, 'delete');
        delete apps[name];
    }
    /**
     * Get the App object for a given name (or DEFAULT).
     */
    function app(name) {
        name = name || DEFAULT_ENTRY_NAME;
        if (!util.contains(apps, name)) {
            throw ERROR_FACTORY.create("no-app" /* NO_APP */, { name: name });
        }
        return apps[name];
    }
    // @ts-ignore
    app['App'] = firebaseAppImpl;
    function initializeApp(options, rawConfig) {
        if (rawConfig === void 0) { rawConfig = {}; }
        if (typeof rawConfig !== 'object' || rawConfig === null) {
            var name_1 = rawConfig;
            rawConfig = { name: name_1 };
        }
        var config = rawConfig;
        if (config.name === undefined) {
            config.name = DEFAULT_ENTRY_NAME;
        }
        var name = config.name;
        if (typeof name !== 'string' || !name) {
            throw ERROR_FACTORY.create("bad-app-name" /* BAD_APP_NAME */, { name: String(name) });
        }
        if (util.contains(apps, name)) {
            throw ERROR_FACTORY.create("duplicate-app" /* DUPLICATE_APP */, { name: name });
        }
        var app = new firebaseAppImpl(options, config, namespace);
        apps[name] = app;
        callAppHooks(app, 'create');
        return app;
    }
    /*
     * Return an array of all the non-deleted FirebaseApps.
     */
    function getApps() {
        // Make a copy so caller cannot mutate the apps list.
        return Object.keys(apps).map(function (name) { return apps[name]; });
    }
    /*
     * Register a Firebase Service.
     *
     * firebase.INTERNAL.registerService()
     *
     * TODO: Implement serviceProperties.
     */
    function registerService(name, createService, serviceProperties, appHook, allowMultipleInstances) {
        if (allowMultipleInstances === void 0) { allowMultipleInstances = false; }
        // Cannot re-register a service that already exists
        if (factories[name]) {
            throw ERROR_FACTORY.create("duplicate-service" /* DUPLICATE_SERVICE */, { name: name });
        }
        // Capture the service factory for later service instantiation
        factories[name] = createService;
        // Capture the appHook, if passed
        if (appHook) {
            appHooks[name] = appHook;
            // Run the **new** app hook on all existing apps
            getApps().forEach(function (app) {
                appHook('create', app);
            });
        }
        // The Service namespace is an accessor function ...
        function serviceNamespace(appArg) {
            if (appArg === void 0) { appArg = app(); }
            // @ts-ignore
            if (typeof appArg[name] !== 'function') {
                // Invalid argument.
                // This happens in the following case: firebase.storage('gs:/')
                throw ERROR_FACTORY.create("invalid-app-argument" /* INVALID_APP_ARGUMENT */, {
                    name: name
                });
            }
            // Forward service instance lookup to the FirebaseApp.
            // @ts-ignore
            return appArg[name]();
        }
        // ... and a container for service-level properties.
        if (serviceProperties !== undefined) {
            util.deepExtend(serviceNamespace, serviceProperties);
        }
        // Monkey-patch the serviceNamespace onto the firebase namespace
        // @ts-ignore
        namespace[name] = serviceNamespace;
        // Patch the FirebaseAppImpl prototype
        // @ts-ignore
        firebaseAppImpl.prototype[name] = function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var serviceFxn = this._getService.bind(this, name);
            return serviceFxn.apply(this, allowMultipleInstances ? args : []);
        };
        return serviceNamespace;
    }
    function callAppHooks(app, eventName) {
        for (var _i = 0, _a = Object.keys(factories); _i < _a.length; _i++) {
            var serviceName = _a[_i];
            // Ignore virtual services
            var factoryName = useAsService(app, serviceName);
            if (factoryName === null) {
                return;
            }
            if (appHooks[factoryName]) {
                appHooks[factoryName](eventName, app);
            }
        }
    }
    // Map the requested service to a registered service name
    // (used to map auth to serverAuth service when needed).
    function useAsService(app, name) {
        if (name === 'serverAuth') {
            return null;
        }
        var useService = name;
        return useService;
    }
    return namespace;
}

/**
 * @license
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Return a firebase namespace object.
 *
 * In production, this will be called exactly once and the result
 * assigned to the 'firebase' global.  It may be called multiple times
 * in unit tests.
 */
function createFirebaseNamespace() {
    var namespace = createFirebaseNamespaceCore(FirebaseAppImpl);
    namespace.INTERNAL = tslib_1.__assign({}, namespace.INTERNAL, { createFirebaseNamespace: createFirebaseNamespace,
        extendNamespace: extendNamespace,
        createSubscribe: util.createSubscribe,
        ErrorFactory: util.ErrorFactory,
        deepExtend: util.deepExtend });
    /**
     * Patch the top-level firebase namespace with additional properties.
     *
     * firebase.INTERNAL.extendNamespace()
     */
    function extendNamespace(props) {
        util.deepExtend(namespace, props);
    }
    return namespace;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var logger = new logger$1.Logger('@firebase/app');
// Firebase Lite detection
// eslint-disable-next-line @typescript-eslint/no-explicit-any
if (util.isBrowser() && self.firebase !== undefined) {
    logger.warn("\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  ");
    // eslint-disable-next-line
    var sdkVersion = self.firebase.SDK_VERSION;
    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {
        logger.warn("\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    ");
    }
}
var firebaseNamespace = createFirebaseNamespace();
var initializeApp = firebaseNamespace.initializeApp;
firebaseNamespace.initializeApp = function () {
    // Environment check before initializing app
    // Do the check in initializeApp, so people have a chance to disable it by setting logLevel
    // in @firebase/logger
    if (util.isNode()) {
        logger.warn("\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\n      run in a Node environment.  If running in a Node environment, make sure you\n      are using the bundle specified by the \"main\" field in package.json.\n      \n      If you are using Webpack, you can specify \"main\" as the first item in\n      \"resolve.mainFields\":\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\n      \n      If using Rollup, use the rollup-plugin-node-resolve plugin and set \"module\"\n      to false and \"main\" to true:\n      https://github.com/rollup/rollup-plugin-node-resolve\n      ");
    }
    return initializeApp.apply(undefined, arguments);
};
var firebase = firebaseNamespace;

exports.default = firebase;
exports.firebase = firebase;
//# sourceMappingURL=index.cjs.js.map


/***/ }),
/* 67 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__extends", function() { return __extends; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__assign", function() { return __assign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__rest", function() { return __rest; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__decorate", function() { return __decorate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__param", function() { return __param; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__metadata", function() { return __metadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__awaiter", function() { return __awaiter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__generator", function() { return __generator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__exportStar", function() { return __exportStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__values", function() { return __values; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__read", function() { return __read; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return __spread; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__await", function() { return __await; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncGenerator", function() { return __asyncGenerator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncDelegator", function() { return __asyncDelegator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__asyncValues", function() { return __asyncValues; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__makeTemplateObject", function() { return __makeTemplateObject; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importStar", function() { return __importStar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__importDefault", function() { return __importDefault; });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
/* global Reflect, Promise */

var extendStatics = function(d, b) {
    extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return extendStatics(d, b);
};

function __extends(d, b) {
    extendStatics(d, b);
    function __() { this.constructor = d; }
    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
}

var __assign = function() {
    __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    }
    return __assign.apply(this, arguments);
}

function __rest(s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
}

function __decorate(decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
}

function __param(paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
}

function __metadata(metadataKey, metadataValue) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}

function __awaiter(thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __exportStar(m, exports) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}

function __values(o) {
    var m = typeof Symbol === "function" && o[Symbol.iterator], i = 0;
    if (m) return m.call(o);
    return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

function __await(v) {
    return this instanceof __await ? (this.v = v, this) : new __await(v);
}

function __asyncGenerator(thisArg, _arguments, generator) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var g = generator.apply(thisArg, _arguments || []), i, q = [];
    return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
    function fulfill(value) { resume("next", value); }
    function reject(value) { resume("throw", value); }
    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
}

function __asyncDelegator(o) {
    var i, p;
    return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
}

function __asyncValues(o) {
    if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
    var m = o[Symbol.asyncIterator], i;
    return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
}

function __makeTemplateObject(cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};

function __importStar(mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result.default = mod;
    return result;
}

function __importDefault(mod) {
    return (mod && mod.__esModule) ? mod : { default: mod };
}


/***/ }),
/* 68 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ("<body id=\"app\">\n    <template id=\"TopNews\">\n        <ui:fragment>\n            <ResService ui:ref=\"res\" />\n            <Firebase ui:ref=\"firebase\" config=\":firebaseConfig\" />\n            <LocalStorage ui:ref=\"local\" />\n            <DatabaseService ui:ref=\"db\" schema=\":dbSchema\" />\n            <SWRunner />\n            <GARunner account=\"UA-3066107-2\" />\n            <NewsPage />\n        </ui:fragment>\n\n    </template>\n    <template id=\"Top\">\n        <ui:fragment>\n            <ResService ui:ref=\"res\" />\n            <Firebase ui:ref=\"firebase\" config=\":firebaseConfig\" />\n            <NavigationService ui:ref=\"nav\" />\n            <LocalStorage ui:ref=\"local\" />\n            <DatabaseService ui:ref=\"db\" schema=\":dbSchema\" />\n            <UserService ui:ref=\"user\" />\n            <Sidebar>\n                <Sidebar:aside>\n                    <Panel style=\"height: 100vh;\">\n                        <Panel:title>\n                            <h3>:appName</h3>\n                        </Panel:title>\n                        <Panel:footer>\n                            <div>:settings</div>\n                        </Panel:footer>\n                        <NavTree data=\"<- nav://sitemap\" />\n                    </Panel>\n                </Sidebar:aside>\n                <ui:fragment>\n                    <Navbar logo=\":appLogo\">\n                        <Navbar:right>\n                            <UserBar />\n                        </Navbar:right>\n                    </Navbar>\n                    <Container>\n                        <PageRouter ui:props=\"<- nav://state\" />\n                    </Container>\n                </ui:fragment>\n            </Sidebar>\n        </ui:fragment>\n    </template>\n</body>");

/***/ }),
/* 69 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*
 * Dexie.js - a minimalistic wrapper for IndexedDB
 * ===============================================
 *
 * By David Fahlander, david.fahlander@gmail.com
 *
 * Version {version}, {date}
 *
 * http://dexie.org
 *
 * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/
 */
 
var keys = Object.keys;
var isArray = Array.isArray;
var _global = typeof self !== 'undefined' ? self :
    typeof window !== 'undefined' ? window :
        global;
function extend(obj, extension) {
    if (typeof extension !== 'object')
        return obj;
    keys(extension).forEach(function (key) {
        obj[key] = extension[key];
    });
    return obj;
}
var getProto = Object.getPrototypeOf;
var _hasOwn = {}.hasOwnProperty;
function hasOwn(obj, prop) {
    return _hasOwn.call(obj, prop);
}
function props(proto, extension) {
    if (typeof extension === 'function')
        extension = extension(getProto(proto));
    keys(extension).forEach(function (key) {
        setProp(proto, key, extension[key]);
    });
}
var defineProperty = Object.defineProperty;
function setProp(obj, prop, functionOrGetSet, options) {
    defineProperty(obj, prop, extend(functionOrGetSet && hasOwn(functionOrGetSet, "get") && typeof functionOrGetSet.get === 'function' ?
        { get: functionOrGetSet.get, set: functionOrGetSet.set, configurable: true } :
        { value: functionOrGetSet, configurable: true, writable: true }, options));
}
function derive(Child) {
    return {
        from: function (Parent) {
            Child.prototype = Object.create(Parent.prototype);
            setProp(Child.prototype, "constructor", Child);
            return {
                extend: props.bind(null, Child.prototype)
            };
        }
    };
}
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
function getPropertyDescriptor(obj, prop) {
    var pd = getOwnPropertyDescriptor(obj, prop), proto;
    return pd || (proto = getProto(obj)) && getPropertyDescriptor(proto, prop);
}
var _slice = [].slice;
function slice(args, start, end) {
    return _slice.call(args, start, end);
}
function override(origFunc, overridedFactory) {
    return overridedFactory(origFunc);
}
function assert(b) {
    if (!b)
        throw new Error("Assertion Failed");
}
function asap(fn) {
    if (_global.setImmediate)
        setImmediate(fn);
    else
        setTimeout(fn, 0);
}

/** Generate an object (hash map) based on given array.
 * @param extractor Function taking an array item and its index and returning an array of 2 items ([key, value]) to
 *        instert on the resulting object for each item in the array. If this function returns a falsy value, the
 *        current item wont affect the resulting object.
 */
function arrayToObject(array, extractor) {
    return array.reduce(function (result, item, i) {
        var nameAndValue = extractor(item, i);
        if (nameAndValue)
            result[nameAndValue[0]] = nameAndValue[1];
        return result;
    }, {});
}
function trycatcher(fn, reject) {
    return function () {
        try {
            fn.apply(this, arguments);
        }
        catch (e) {
            reject(e);
        }
    };
}
function tryCatch(fn, onerror, args) {
    try {
        fn.apply(null, args);
    }
    catch (ex) {
        onerror && onerror(ex);
    }
}
function getByKeyPath(obj, keyPath) {
    // http://www.w3.org/TR/IndexedDB/#steps-for-extracting-a-key-from-a-value-using-a-key-path
    if (hasOwn(obj, keyPath))
        return obj[keyPath]; // This line is moved from last to first for optimization purpose.
    if (!keyPath)
        return obj;
    if (typeof keyPath !== 'string') {
        var rv = [];
        for (var i = 0, l = keyPath.length; i < l; ++i) {
            var val = getByKeyPath(obj, keyPath[i]);
            rv.push(val);
        }
        return rv;
    }
    var period = keyPath.indexOf('.');
    if (period !== -1) {
        var innerObj = obj[keyPath.substr(0, period)];
        return innerObj === undefined ? undefined : getByKeyPath(innerObj, keyPath.substr(period + 1));
    }
    return undefined;
}
function setByKeyPath(obj, keyPath, value) {
    if (!obj || keyPath === undefined)
        return;
    if ('isFrozen' in Object && Object.isFrozen(obj))
        return;
    if (typeof keyPath !== 'string' && 'length' in keyPath) {
        assert(typeof value !== 'string' && 'length' in value);
        for (var i = 0, l = keyPath.length; i < l; ++i) {
            setByKeyPath(obj, keyPath[i], value[i]);
        }
    }
    else {
        var period = keyPath.indexOf('.');
        if (period !== -1) {
            var currentKeyPath = keyPath.substr(0, period);
            var remainingKeyPath = keyPath.substr(period + 1);
            if (remainingKeyPath === "")
                if (value === undefined)
                    delete obj[currentKeyPath];
                else
                    obj[currentKeyPath] = value;
            else {
                var innerObj = obj[currentKeyPath];
                if (!innerObj)
                    innerObj = (obj[currentKeyPath] = {});
                setByKeyPath(innerObj, remainingKeyPath, value);
            }
        }
        else {
            if (value === undefined)
                delete obj[keyPath];
            else
                obj[keyPath] = value;
        }
    }
}
function delByKeyPath(obj, keyPath) {
    if (typeof keyPath === 'string')
        setByKeyPath(obj, keyPath, undefined);
    else if ('length' in keyPath)
        [].map.call(keyPath, function (kp) {
            setByKeyPath(obj, kp, undefined);
        });
}
function shallowClone(obj) {
    var rv = {};
    for (var m in obj) {
        if (hasOwn(obj, m))
            rv[m] = obj[m];
    }
    return rv;
}
var concat = [].concat;
function flatten(a) {
    return concat.apply([], a);
}
//https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Structured_clone_algorithm
var intrinsicTypes = "Boolean,String,Date,RegExp,Blob,File,FileList,ArrayBuffer,DataView,Uint8ClampedArray,ImageData,Map,Set"
    .split(',').concat(flatten([8, 16, 32, 64].map(function (num) { return ["Int", "Uint", "Float"].map(function (t) { return t + num + "Array"; }); }))).filter(function (t) { return _global[t]; }).map(function (t) { return _global[t]; });
function deepClone(any) {
    if (!any || typeof any !== 'object')
        return any;
    var rv;
    if (isArray(any)) {
        rv = [];
        for (var i = 0, l = any.length; i < l; ++i) {
            rv.push(deepClone(any[i]));
        }
    }
    else if (intrinsicTypes.indexOf(any.constructor) >= 0) {
        rv = any;
    }
    else {
        rv = any.constructor ? Object.create(any.constructor.prototype) : {};
        for (var prop in any) {
            if (hasOwn(any, prop)) {
                rv[prop] = deepClone(any[prop]);
            }
        }
    }
    return rv;
}
function getObjectDiff(a, b, rv, prfx) {
    // Compares objects a and b and produces a diff object.
    rv = rv || {};
    prfx = prfx || '';
    keys(a).forEach(function (prop) {
        if (!hasOwn(b, prop))
            rv[prfx + prop] = undefined; // Property removed
        else {
            var ap = a[prop], bp = b[prop];
            if (typeof ap === 'object' && typeof bp === 'object' &&
                ap && bp &&
                // Now compare constructors are same (not equal because wont work in Safari)
                ('' + ap.constructor) === ('' + bp.constructor))
                // Same type of object but its properties may have changed
                getObjectDiff(ap, bp, rv, prfx + prop + ".");
            else if (ap !== bp)
                rv[prfx + prop] = b[prop]; // Primitive value changed
        }
    });
    keys(b).forEach(function (prop) {
        if (!hasOwn(a, prop)) {
            rv[prfx + prop] = b[prop]; // Property added
        }
    });
    return rv;
}
// If first argument is iterable or array-like, return it as an array
var iteratorSymbol = typeof Symbol !== 'undefined' && Symbol.iterator;
var getIteratorOf = iteratorSymbol ? function (x) {
    var i;
    return x != null && (i = x[iteratorSymbol]) && i.apply(x);
} : function () { return null; };
var NO_CHAR_ARRAY = {};
// Takes one or several arguments and returns an array based on the following criteras:
// * If several arguments provided, return arguments converted to an array in a way that
//   still allows javascript engine to optimize the code.
// * If single argument is an array, return a clone of it.
// * If this-pointer equals NO_CHAR_ARRAY, don't accept strings as valid iterables as a special
//   case to the two bullets below.
// * If single argument is an iterable, convert it to an array and return the resulting array.
// * If single argument is array-like (has length of type number), convert it to an array.
function getArrayOf(arrayLike) {
    var i, a, x, it;
    if (arguments.length === 1) {
        if (isArray(arrayLike))
            return arrayLike.slice();
        if (this === NO_CHAR_ARRAY && typeof arrayLike === 'string')
            return [arrayLike];
        if ((it = getIteratorOf(arrayLike))) {
            a = [];
            while ((x = it.next()), !x.done)
                a.push(x.value);
            return a;
        }
        if (arrayLike == null)
            return [arrayLike];
        i = arrayLike.length;
        if (typeof i === 'number') {
            a = new Array(i);
            while (i--)
                a[i] = arrayLike[i];
            return a;
        }
        return [arrayLike];
    }
    i = arguments.length;
    a = new Array(i);
    while (i--)
        a[i] = arguments[i];
    return a;
}

// By default, debug will be true only if platform is a web platform and its page is served from localhost.
// When debug = true, error's stacks will contain asyncronic long stacks.
var debug = typeof location !== 'undefined' &&
    // By default, use debug mode if served from localhost.
    /^(http|https):\/\/(localhost|127\.0\.0\.1)/.test(location.href);
function setDebug(value, filter) {
    debug = value;
    libraryFilter = filter;
}
var libraryFilter = function () { return true; };
var NEEDS_THROW_FOR_STACK = !new Error("").stack;
function getErrorWithStack() {
    "use strict";
    if (NEEDS_THROW_FOR_STACK)
        try {
            // Doing something naughty in strict mode here to trigger a specific error
            // that can be explicitely ignored in debugger's exception settings.
            // If we'd just throw new Error() here, IE's debugger's exception settings
            // will just consider it as "exception thrown by javascript code" which is
            // something you wouldn't want it to ignore.
            getErrorWithStack.arguments;
            throw new Error(); // Fallback if above line don't throw.
        }
        catch (e) {
            return e;
        }
    return new Error();
}
function prettyStack(exception, numIgnoredFrames) {
    var stack = exception.stack;
    if (!stack)
        return "";
    numIgnoredFrames = (numIgnoredFrames || 0);
    if (stack.indexOf(exception.name) === 0)
        numIgnoredFrames += (exception.name + exception.message).split('\n').length;
    return stack.split('\n')
        .slice(numIgnoredFrames)
        .filter(libraryFilter)
        .map(function (frame) { return "\n" + frame; })
        .join('');
}
function deprecated(what, fn) {
    return function () {
        console.warn(what + " is deprecated. See https://github.com/dfahlander/Dexie.js/wiki/Deprecations. " + prettyStack(getErrorWithStack(), 1));
        return fn.apply(this, arguments);
    };
}

var dexieErrorNames = [
    'Modify',
    'Bulk',
    'OpenFailed',
    'VersionChange',
    'Schema',
    'Upgrade',
    'InvalidTable',
    'MissingAPI',
    'NoSuchDatabase',
    'InvalidArgument',
    'SubTransaction',
    'Unsupported',
    'Internal',
    'DatabaseClosed',
    'PrematureCommit',
    'ForeignAwait'
];
var idbDomErrorNames = [
    'Unknown',
    'Constraint',
    'Data',
    'TransactionInactive',
    'ReadOnly',
    'Version',
    'NotFound',
    'InvalidState',
    'InvalidAccess',
    'Abort',
    'Timeout',
    'QuotaExceeded',
    'Syntax',
    'DataClone'
];
var errorList = dexieErrorNames.concat(idbDomErrorNames);
var defaultTexts = {
    VersionChanged: "Database version changed by other database connection",
    DatabaseClosed: "Database has been closed",
    Abort: "Transaction aborted",
    TransactionInactive: "Transaction has already completed or failed"
};
//
// DexieError - base class of all out exceptions.
//
function DexieError(name, msg) {
    // Reason we don't use ES6 classes is because:
    // 1. It bloats transpiled code and increases size of minified code.
    // 2. It doesn't give us much in this case.
    // 3. It would require sub classes to call super(), which
    //    is not needed when deriving from Error.
    this._e = getErrorWithStack();
    this.name = name;
    this.message = msg;
}
derive(DexieError).from(Error).extend({
    stack: {
        get: function () {
            return this._stack ||
                (this._stack = this.name + ": " + this.message + prettyStack(this._e, 2));
        }
    },
    toString: function () { return this.name + ": " + this.message; }
});
function getMultiErrorMessage(msg, failures) {
    return msg + ". Errors: " + failures
        .map(function (f) { return f.toString(); })
        .filter(function (v, i, s) { return s.indexOf(v) === i; }) // Only unique error strings
        .join('\n');
}
//
// ModifyError - thrown in Collection.modify()
// Specific constructor because it contains members failures and failedKeys.
//
function ModifyError(msg, failures, successCount, failedKeys) {
    this._e = getErrorWithStack();
    this.failures = failures;
    this.failedKeys = failedKeys;
    this.successCount = successCount;
}
derive(ModifyError).from(DexieError);
function BulkError(msg, failures) {
    this._e = getErrorWithStack();
    this.name = "BulkError";
    this.failures = failures;
    this.message = getMultiErrorMessage(msg, failures);
}
derive(BulkError).from(DexieError);
//
//
// Dynamically generate error names and exception classes based
// on the names in errorList.
//
//
// Map of {ErrorName -> ErrorName + "Error"}
var errnames = errorList.reduce(function (obj, name) { return (obj[name] = name + "Error", obj); }, {});
// Need an alias for DexieError because we're gonna create subclasses with the same name.
var BaseException = DexieError;
// Map of {ErrorName -> exception constructor}
var exceptions = errorList.reduce(function (obj, name) {
    // Let the name be "DexieError" because this name may
    // be shown in call stack and when debugging. DexieError is
    // the most true name because it derives from DexieError,
    // and we cannot change Function.name programatically without
    // dynamically create a Function object, which would be considered
    // 'eval-evil'.
    var fullName = name + "Error";
    function DexieError(msgOrInner, inner) {
        this._e = getErrorWithStack();
        this.name = fullName;
        if (!msgOrInner) {
            this.message = defaultTexts[name] || fullName;
            this.inner = null;
        }
        else if (typeof msgOrInner === 'string') {
            this.message = msgOrInner;
            this.inner = inner || null;
        }
        else if (typeof msgOrInner === 'object') {
            this.message = msgOrInner.name + " " + msgOrInner.message;
            this.inner = msgOrInner;
        }
    }
    derive(DexieError).from(BaseException);
    obj[name] = DexieError;
    return obj;
}, {});
// Use ECMASCRIPT standard exceptions where applicable:
exceptions.Syntax = SyntaxError;
exceptions.Type = TypeError;
exceptions.Range = RangeError;
var exceptionMap = idbDomErrorNames.reduce(function (obj, name) {
    obj[name + "Error"] = exceptions[name];
    return obj;
}, {});
function mapError(domError, message) {
    if (!domError || domError instanceof DexieError || domError instanceof TypeError || domError instanceof SyntaxError || !domError.name || !exceptionMap[domError.name])
        return domError;
    var rv = new exceptionMap[domError.name](message || domError.message, domError);
    if ("stack" in domError) {
        // Derive stack from inner exception if it has a stack
        setProp(rv, "stack", { get: function () {
                return this.inner.stack;
            } });
    }
    return rv;
}
var fullNameExceptions = errorList.reduce(function (obj, name) {
    if (["Syntax", "Type", "Range"].indexOf(name) === -1)
        obj[name + "Error"] = exceptions[name];
    return obj;
}, {});
fullNameExceptions.ModifyError = ModifyError;
fullNameExceptions.DexieError = DexieError;
fullNameExceptions.BulkError = BulkError;

function nop() { }
function mirror(val) { return val; }
function pureFunctionChain(f1, f2) {
    // Enables chained events that takes ONE argument and returns it to the next function in chain.
    // This pattern is used in the hook("reading") event.
    if (f1 == null || f1 === mirror)
        return f2;
    return function (val) {
        return f2(f1(val));
    };
}
function callBoth(on1, on2) {
    return function () {
        on1.apply(this, arguments);
        on2.apply(this, arguments);
    };
}
function hookCreatingChain(f1, f2) {
    // Enables chained events that takes several arguments and may modify first argument by making a modification and then returning the same instance.
    // This pattern is used in the hook("creating") event.
    if (f1 === nop)
        return f2;
    return function () {
        var res = f1.apply(this, arguments);
        if (res !== undefined)
            arguments[0] = res;
        var onsuccess = this.onsuccess, // In case event listener has set this.onsuccess
        onerror = this.onerror; // In case event listener has set this.onerror
        this.onsuccess = null;
        this.onerror = null;
        var res2 = f2.apply(this, arguments);
        if (onsuccess)
            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;
        if (onerror)
            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;
        return res2 !== undefined ? res2 : res;
    };
}
function hookDeletingChain(f1, f2) {
    if (f1 === nop)
        return f2;
    return function () {
        f1.apply(this, arguments);
        var onsuccess = this.onsuccess, // In case event listener has set this.onsuccess
        onerror = this.onerror; // In case event listener has set this.onerror
        this.onsuccess = this.onerror = null;
        f2.apply(this, arguments);
        if (onsuccess)
            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;
        if (onerror)
            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;
    };
}
function hookUpdatingChain(f1, f2) {
    if (f1 === nop)
        return f2;
    return function (modifications) {
        var res = f1.apply(this, arguments);
        extend(modifications, res); // If f1 returns new modifications, extend caller's modifications with the result before calling next in chain.
        var onsuccess = this.onsuccess, // In case event listener has set this.onsuccess
        onerror = this.onerror; // In case event listener has set this.onerror
        this.onsuccess = null;
        this.onerror = null;
        var res2 = f2.apply(this, arguments);
        if (onsuccess)
            this.onsuccess = this.onsuccess ? callBoth(onsuccess, this.onsuccess) : onsuccess;
        if (onerror)
            this.onerror = this.onerror ? callBoth(onerror, this.onerror) : onerror;
        return res === undefined ?
            (res2 === undefined ? undefined : res2) :
            (extend(res, res2));
    };
}
function reverseStoppableEventChain(f1, f2) {
    if (f1 === nop)
        return f2;
    return function () {
        if (f2.apply(this, arguments) === false)
            return false;
        return f1.apply(this, arguments);
    };
}

function promisableChain(f1, f2) {
    if (f1 === nop)
        return f2;
    return function () {
        var res = f1.apply(this, arguments);
        if (res && typeof res.then === 'function') {
            var thiz = this, i = arguments.length, args = new Array(i);
            while (i--)
                args[i] = arguments[i];
            return res.then(function () {
                return f2.apply(thiz, args);
            });
        }
        return f2.apply(this, arguments);
    };
}

/*
 * Copyright (c) 2014-2017 David Fahlander
 * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/LICENSE-2.0
 */
//
// Promise and Zone (PSD) for Dexie library
//
// I started out writing this Promise class by copying promise-light (https://github.com/taylorhakes/promise-light) by
// https://github.com/taylorhakes - an A+ and ECMASCRIPT 6 compliant Promise implementation.
//
// In previous versions this was fixed by not calling setTimeout when knowing that the resolve() or reject() came from another
// tick. In Dexie v1.4.0, I've rewritten the Promise class entirely. Just some fragments of promise-light is left. I use
// another strategy now that simplifies everything a lot: to always execute callbacks in a new micro-task, but have an own micro-task
// engine that is indexedDB compliant across all browsers.
// Promise class has also been optimized a lot with inspiration from bluebird - to avoid closures as much as possible.
// Also with inspiration from bluebird, asyncronic stacks in debug mode.
//
// Specific non-standard features of this Promise class:
// * Custom zone support (a.k.a. PSD) with ability to keep zones also when using native promises as well as
//   native async / await.
// * Promise.follow() method built upon the custom zone engine, that allows user to track all promises created from current stack frame
//   and below + all promises that those promises creates or awaits.
// * Detect any unhandled promise in a PSD-scope (PSD.onunhandled). 
//
// David Fahlander, https://github.com/dfahlander
//
// Just a pointer that only this module knows about.
// Used in Promise constructor to emulate a private constructor.
var INTERNAL = {};
// Async stacks (long stacks) must not grow infinitely.
var LONG_STACKS_CLIP_LIMIT = 100;
var MAX_LONG_STACKS = 20;
var ZONE_ECHO_LIMIT = 7;
var nativePromiseInstanceAndProto = (function () {
    try {
        // Be able to patch native async functions
        return new Function("let F=async ()=>{},p=F();return [p,Object.getPrototypeOf(p),Promise.resolve(),F.constructor];")();
    }
    catch (e) {
        var P = _global.Promise;
        return P ?
            [P.resolve(), P.prototype, P.resolve()] :
            [];
    }
})();
var resolvedNativePromise = nativePromiseInstanceAndProto[0];
var nativePromiseProto = nativePromiseInstanceAndProto[1];
var resolvedGlobalPromise = nativePromiseInstanceAndProto[2];
var nativePromiseThen = nativePromiseProto && nativePromiseProto.then;
var NativePromise = resolvedNativePromise && resolvedNativePromise.constructor;
var AsyncFunction = nativePromiseInstanceAndProto[3];
var patchGlobalPromise = !!resolvedGlobalPromise;
var stack_being_generated = false;
/* The default function used only for the very first promise in a promise chain.
   As soon as then promise is resolved or rejected, all next tasks will be executed in micro ticks
   emulated in this module. For indexedDB compatibility, this means that every method needs to
   execute at least one promise before doing an indexedDB operation. Dexie will always call
   db.ready().then() for every operation to make sure the indexedDB event is started in an
   indexedDB-compatible emulated micro task loop.
*/
var schedulePhysicalTick = resolvedGlobalPromise ?
    function () { resolvedGlobalPromise.then(physicalTick); }
    :
        _global.setImmediate ?
            // setImmediate supported. Those modern platforms also supports Function.bind().
            setImmediate.bind(null, physicalTick) :
            _global.MutationObserver ?
                // MutationObserver supported
                function () {
                    var hiddenDiv = document.createElement("div");
                    (new MutationObserver(function () {
                        physicalTick();
                        hiddenDiv = null;
                    })).observe(hiddenDiv, { attributes: true });
                    hiddenDiv.setAttribute('i', '1');
                } :
                // No support for setImmediate or MutationObserver. No worry, setTimeout is only called
                // once time. Every tick that follows will be our emulated micro tick.
                // Could have uses setTimeout.bind(null, 0, physicalTick) if it wasnt for that FF13 and below has a bug 
                function () { setTimeout(physicalTick, 0); };
// Configurable through Promise.scheduler.
// Don't export because it would be unsafe to let unknown
// code call it unless they do try..catch within their callback.
// This function can be retrieved through getter of Promise.scheduler though,
// but users must not do Promise.scheduler = myFuncThatThrowsException
var asap$1 = function (callback, args) {
    microtickQueue.push([callback, args]);
    if (needsNewPhysicalTick) {
        schedulePhysicalTick();
        needsNewPhysicalTick = false;
    }
};
var isOutsideMicroTick = true;
var needsNewPhysicalTick = true;
var unhandledErrors = [];
var rejectingErrors = [];
var currentFulfiller = null;
var rejectionMapper = mirror; // Remove in next major when removing error mapping of DOMErrors and DOMExceptions
var globalPSD = {
    id: 'global',
    global: true,
    ref: 0,
    unhandleds: [],
    onunhandled: globalError,
    pgp: false,
    env: {},
    finalize: function () {
        this.unhandleds.forEach(function (uh) {
            try {
                globalError(uh[0], uh[1]);
            }
            catch (e) { }
        });
    }
};
var PSD = globalPSD;
var microtickQueue = []; // Callbacks to call in this or next physical tick.
var numScheduledCalls = 0; // Number of listener-calls left to do in this physical tick.
var tickFinalizers = []; // Finalizers to call when there are no more async calls scheduled within current physical tick.
function Promise(fn) {
    if (typeof this !== 'object')
        throw new TypeError('Promises must be constructed via new');
    this._listeners = [];
    this.onuncatched = nop; // Deprecate in next major. Not needed. Better to use global error handler.
    // A library may set `promise._lib = true;` after promise is created to make resolve() or reject()
    // execute the microtask engine implicitely within the call to resolve() or reject().
    // To remain A+ compliant, a library must only set `_lib=true` if it can guarantee that the stack
    // only contains library code when calling resolve() or reject().
    // RULE OF THUMB: ONLY set _lib = true for promises explicitely resolving/rejecting directly from
    // global scope (event handler, timer etc)!
    this._lib = false;
    // Current async scope
    var psd = (this._PSD = PSD);
    if (debug) {
        this._stackHolder = getErrorWithStack();
        this._prev = null;
        this._numPrev = 0; // Number of previous promises (for long stacks)
    }
    if (typeof fn !== 'function') {
        if (fn !== INTERNAL)
            throw new TypeError('Not a function');
        // Private constructor (INTERNAL, state, value).
        // Used internally by Promise.resolve() and Promise.reject().
        this._state = arguments[1];
        this._value = arguments[2];
        if (this._state === false)
            handleRejection(this, this._value); // Map error, set stack and addPossiblyUnhandledError().
        return;
    }
    this._state = null; // null (=pending), false (=rejected) or true (=resolved)
    this._value = null; // error or result
    ++psd.ref; // Refcounting current scope
    executePromiseTask(this, fn);
}
// Prepare a property descriptor to put onto Promise.prototype.then
var thenProp = {
    get: function () {
        var psd = PSD, microTaskId = totalEchoes;
        function then(onFulfilled, onRejected) {
            var _this = this;
            var possibleAwait = !psd.global && (psd !== PSD || microTaskId !== totalEchoes);
            if (possibleAwait)
                decrementExpectedAwaits();
            var rv = new Promise(function (resolve, reject) {
                propagateToListener(_this, new Listener(nativeAwaitCompatibleWrap(onFulfilled, psd, possibleAwait), nativeAwaitCompatibleWrap(onRejected, psd, possibleAwait), resolve, reject, psd));
            });
            debug && linkToPreviousPromise(rv, this);
            return rv;
        }
        then.prototype = INTERNAL; // For idempotense, see setter below.
        return then;
    },
    // Be idempotent and allow another framework (such as zone.js or another instance of a Dexie.Promise module) to replace Promise.prototype.then
    // and when that framework wants to restore the original property, we must identify that and restore the original property descriptor.
    set: function (value) {
        setProp(this, 'then', value && value.prototype === INTERNAL ?
            thenProp : // Restore to original property descriptor.
            {
                get: function () {
                    return value; // Getter returning provided value (behaves like value is just changed)
                },
                set: thenProp.set // Keep a setter that is prepared to restore original.
            });
    }
};
props(Promise.prototype, {
    then: thenProp,
    _then: function (onFulfilled, onRejected) {
        // A little tinier version of then() that don't have to create a resulting promise.
        propagateToListener(this, new Listener(null, null, onFulfilled, onRejected, PSD));
    },
    catch: function (onRejected) {
        if (arguments.length === 1)
            return this.then(null, onRejected);
        // First argument is the Error type to catch
        var type = arguments[0], handler = arguments[1];
        return typeof type === 'function' ? this.then(null, function (err) {
            // Catching errors by its constructor type (similar to java / c++ / c#)
            // Sample: promise.catch(TypeError, function (e) { ... });
            return err instanceof type ? handler(err) : PromiseReject(err);
        })
            : this.then(null, function (err) {
                // Catching errors by the error.name property. Makes sense for indexedDB where error type
                // is always DOMError but where e.name tells the actual error type.
                // Sample: promise.catch('ConstraintError', function (e) { ... });
                return err && err.name === type ? handler(err) : PromiseReject(err);
            });
    },
    finally: function (onFinally) {
        return this.then(function (value) {
            onFinally();
            return value;
        }, function (err) {
            onFinally();
            return PromiseReject(err);
        });
    },
    stack: {
        get: function () {
            if (this._stack)
                return this._stack;
            try {
                stack_being_generated = true;
                var stacks = getStack(this, [], MAX_LONG_STACKS);
                var stack = stacks.join("\nFrom previous: ");
                if (this._state !== null)
                    this._stack = stack; // Stack may be updated on reject.
                return stack;
            }
            finally {
                stack_being_generated = false;
            }
        }
    },
    timeout: function (ms, msg) {
        var _this = this;
        return ms < Infinity ?
            new Promise(function (resolve, reject) {
                var handle = setTimeout(function () { return reject(new exceptions.Timeout(msg)); }, ms);
                _this.then(resolve, reject).finally(clearTimeout.bind(null, handle));
            }) : this;
    }
});
if (typeof Symbol !== 'undefined' && Symbol.toStringTag)
    setProp(Promise.prototype, Symbol.toStringTag, 'Promise');
// Now that Promise.prototype is defined, we have all it takes to set globalPSD.env.
// Environment globals snapshotted on leaving global zone
globalPSD.env = snapShot();
function Listener(onFulfilled, onRejected, resolve, reject, zone) {
    this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
    this.onRejected = typeof onRejected === 'function' ? onRejected : null;
    this.resolve = resolve;
    this.reject = reject;
    this.psd = zone;
}
// Promise Static Properties
props(Promise, {
    all: function () {
        var values = getArrayOf.apply(null, arguments) // Supports iterables, implicit arguments and array-like.
            .map(onPossibleParallellAsync); // Handle parallell async/awaits 
        return new Promise(function (resolve, reject) {
            if (values.length === 0)
                resolve([]);
            var remaining = values.length;
            values.forEach(function (a, i) { return Promise.resolve(a).then(function (x) {
                values[i] = x;
                if (!--remaining)
                    resolve(values);
            }, reject); });
        });
    },
    resolve: function (value) {
        if (value instanceof Promise)
            return value;
        if (value && typeof value.then === 'function')
            return new Promise(function (resolve, reject) {
                value.then(resolve, reject);
            });
        var rv = new Promise(INTERNAL, true, value);
        linkToPreviousPromise(rv, currentFulfiller);
        return rv;
    },
    reject: PromiseReject,
    race: function () {
        var values = getArrayOf.apply(null, arguments).map(onPossibleParallellAsync);
        return new Promise(function (resolve, reject) {
            values.map(function (value) { return Promise.resolve(value).then(resolve, reject); });
        });
    },
    PSD: {
        get: function () { return PSD; },
        set: function (value) { return PSD = value; }
    },
    //totalEchoes: {get: ()=>totalEchoes},
    //task: {get: ()=>task},
    newPSD: newScope,
    usePSD: usePSD,
    scheduler: {
        get: function () { return asap$1; },
        set: function (value) { asap$1 = value; }
    },
    rejectionMapper: {
        get: function () { return rejectionMapper; },
        set: function (value) { rejectionMapper = value; } // Map reject failures
    },
    follow: function (fn, zoneProps) {
        return new Promise(function (resolve, reject) {
            return newScope(function (resolve, reject) {
                var psd = PSD;
                psd.unhandleds = []; // For unhandled standard- or 3rd party Promises. Checked at psd.finalize()
                psd.onunhandled = reject; // Triggered directly on unhandled promises of this library.
                psd.finalize = callBoth(function () {
                    var _this = this;
                    // Unhandled standard or 3rd part promises are put in PSD.unhandleds and
                    // examined upon scope completion while unhandled rejections in this Promise
                    // will trigger directly through psd.onunhandled
                    run_at_end_of_this_or_next_physical_tick(function () {
                        _this.unhandleds.length === 0 ? resolve() : reject(_this.unhandleds[0]);
                    });
                }, psd.finalize);
                fn();
            }, zoneProps, resolve, reject);
        });
    }
});
/**
* Take a potentially misbehaving resolver function and make sure
* onFulfilled and onRejected are only called once.
*
* Makes no guarantees about asynchrony.
*/
function executePromiseTask(promise, fn) {
    // Promise Resolution Procedure:
    // https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
    try {
        fn(function (value) {
            if (promise._state !== null)
                return; // Already settled
            if (value === promise)
                throw new TypeError('A promise cannot be resolved with itself.');
            var shouldExecuteTick = promise._lib && beginMicroTickScope();
            if (value && typeof value.then === 'function') {
                executePromiseTask(promise, function (resolve, reject) {
                    value instanceof Promise ?
                        value._then(resolve, reject) :
                        value.then(resolve, reject);
                });
            }
            else {
                promise._state = true;
                promise._value = value;
                propagateAllListeners(promise);
            }
            if (shouldExecuteTick)
                endMicroTickScope();
        }, handleRejection.bind(null, promise)); // If Function.bind is not supported. Exception is handled in catch below
    }
    catch (ex) {
        handleRejection(promise, ex);
    }
}
function handleRejection(promise, reason) {
    rejectingErrors.push(reason);
    if (promise._state !== null)
        return;
    var shouldExecuteTick = promise._lib && beginMicroTickScope();
    reason = rejectionMapper(reason);
    promise._state = false;
    promise._value = reason;
    debug && reason !== null && typeof reason === 'object' && !reason._promise && tryCatch(function () {
        var origProp = getPropertyDescriptor(reason, "stack");
        reason._promise = promise;
        setProp(reason, "stack", {
            get: function () {
                return stack_being_generated ?
                    origProp && (origProp.get ?
                        origProp.get.apply(reason) :
                        origProp.value) :
                    promise.stack;
            }
        });
    });
    // Add the failure to a list of possibly uncaught errors
    addPossiblyUnhandledError(promise);
    propagateAllListeners(promise);
    if (shouldExecuteTick)
        endMicroTickScope();
}
function propagateAllListeners(promise) {
    //debug && linkToPreviousPromise(promise);
    var listeners = promise._listeners;
    promise._listeners = [];
    for (var i = 0, len = listeners.length; i < len; ++i) {
        propagateToListener(promise, listeners[i]);
    }
    var psd = promise._PSD;
    --psd.ref || psd.finalize(); // if psd.ref reaches zero, call psd.finalize();
    if (numScheduledCalls === 0) {
        // If numScheduledCalls is 0, it means that our stack is not in a callback of a scheduled call,
        // and that no deferreds where listening to this rejection or success.
        // Since there is a risk that our stack can contain application code that may
        // do stuff after this code is finished that may generate new calls, we cannot
        // call finalizers here.
        ++numScheduledCalls;
        asap$1(function () {
            if (--numScheduledCalls === 0)
                finalizePhysicalTick(); // Will detect unhandled errors
        }, []);
    }
}
function propagateToListener(promise, listener) {
    if (promise._state === null) {
        promise._listeners.push(listener);
        return;
    }
    var cb = promise._state ? listener.onFulfilled : listener.onRejected;
    if (cb === null) {
        // This Listener doesnt have a listener for the event being triggered (onFulfilled or onReject) so lets forward the event to any eventual listeners on the Promise instance returned by then() or catch()
        return (promise._state ? listener.resolve : listener.reject)(promise._value);
    }
    ++listener.psd.ref;
    ++numScheduledCalls;
    asap$1(callListener, [cb, promise, listener]);
}
function callListener(cb, promise, listener) {
    try {
        // Set static variable currentFulfiller to the promise that is being fullfilled,
        // so that we connect the chain of promises (for long stacks support)
        currentFulfiller = promise;
        // Call callback and resolve our listener with it's return value.
        var ret, value = promise._value;
        if (promise._state) {
            // cb is onResolved
            ret = cb(value);
        }
        else {
            // cb is onRejected
            if (rejectingErrors.length)
                rejectingErrors = [];
            ret = cb(value);
            if (rejectingErrors.indexOf(value) === -1)
                markErrorAsHandled(promise); // Callback didnt do Promise.reject(err) nor reject(err) onto another promise.
        }
        listener.resolve(ret);
    }
    catch (e) {
        // Exception thrown in callback. Reject our listener.
        listener.reject(e);
    }
    finally {
        // Restore env and currentFulfiller.
        currentFulfiller = null;
        if (--numScheduledCalls === 0)
            finalizePhysicalTick();
        --listener.psd.ref || listener.psd.finalize();
    }
}
function getStack(promise, stacks, limit) {
    if (stacks.length === limit)
        return stacks;
    var stack = "";
    if (promise._state === false) {
        var failure = promise._value, errorName, message;
        if (failure != null) {
            errorName = failure.name || "Error";
            message = failure.message || failure;
            stack = prettyStack(failure, 0);
        }
        else {
            errorName = failure; // If error is undefined or null, show that.
            message = "";
        }
        stacks.push(errorName + (message ? ": " + message : "") + stack);
    }
    if (debug) {
        stack = prettyStack(promise._stackHolder, 2);
        if (stack && stacks.indexOf(stack) === -1)
            stacks.push(stack);
        if (promise._prev)
            getStack(promise._prev, stacks, limit);
    }
    return stacks;
}
function linkToPreviousPromise(promise, prev) {
    // Support long stacks by linking to previous completed promise.
    var numPrev = prev ? prev._numPrev + 1 : 0;
    if (numPrev < LONG_STACKS_CLIP_LIMIT) {
        promise._prev = prev;
        promise._numPrev = numPrev;
    }
}
/* The callback to schedule with setImmediate() or setTimeout().
   It runs a virtual microtick and executes any callback registered in microtickQueue.
 */
function physicalTick() {
    beginMicroTickScope() && endMicroTickScope();
}
function beginMicroTickScope() {
    var wasRootExec = isOutsideMicroTick;
    isOutsideMicroTick = false;
    needsNewPhysicalTick = false;
    return wasRootExec;
}
/* Executes micro-ticks without doing try..catch.
   This can be possible because we only use this internally and
   the registered functions are exception-safe (they do try..catch
   internally before calling any external method). If registering
   functions in the microtickQueue that are not exception-safe, this
   would destroy the framework and make it instable. So we don't export
   our asap method.
*/
function endMicroTickScope() {
    var callbacks, i, l;
    do {
        while (microtickQueue.length > 0) {
            callbacks = microtickQueue;
            microtickQueue = [];
            l = callbacks.length;
            for (i = 0; i < l; ++i) {
                var item = callbacks[i];
                item[0].apply(null, item[1]);
            }
        }
    } while (microtickQueue.length > 0);
    isOutsideMicroTick = true;
    needsNewPhysicalTick = true;
}
function finalizePhysicalTick() {
    var unhandledErrs = unhandledErrors;
    unhandledErrors = [];
    unhandledErrs.forEach(function (p) {
        p._PSD.onunhandled.call(null, p._value, p);
    });
    var finalizers = tickFinalizers.slice(0); // Clone first because finalizer may remove itself from list.
    var i = finalizers.length;
    while (i)
        finalizers[--i]();
}
function run_at_end_of_this_or_next_physical_tick(fn) {
    function finalizer() {
        fn();
        tickFinalizers.splice(tickFinalizers.indexOf(finalizer), 1);
    }
    tickFinalizers.push(finalizer);
    ++numScheduledCalls;
    asap$1(function () {
        if (--numScheduledCalls === 0)
            finalizePhysicalTick();
    }, []);
}
function addPossiblyUnhandledError(promise) {
    // Only add to unhandledErrors if not already there. The first one to add to this list
    // will be upon the first rejection so that the root cause (first promise in the
    // rejection chain) is the one listed.
    if (!unhandledErrors.some(function (p) { return p._value === promise._value; }))
        unhandledErrors.push(promise);
}
function markErrorAsHandled(promise) {
    // Called when a reject handled is actually being called.
    // Search in unhandledErrors for any promise whos _value is this promise_value (list
    // contains only rejected promises, and only one item per error)
    var i = unhandledErrors.length;
    while (i)
        if (unhandledErrors[--i]._value === promise._value) {
            // Found a promise that failed with this same error object pointer,
            // Remove that since there is a listener that actually takes care of it.
            unhandledErrors.splice(i, 1);
            return;
        }
}
function PromiseReject(reason) {
    return new Promise(INTERNAL, false, reason);
}
function wrap(fn, errorCatcher) {
    var psd = PSD;
    return function () {
        var wasRootExec = beginMicroTickScope(), outerScope = PSD;
        try {
            switchToZone(psd, true);
            return fn.apply(this, arguments);
        }
        catch (e) {
            errorCatcher && errorCatcher(e);
        }
        finally {
            switchToZone(outerScope, false);
            if (wasRootExec)
                endMicroTickScope();
        }
    };
}
//
// variables used for native await support
//
var task = { awaits: 0, echoes: 0, id: 0 }; // The ongoing macro-task when using zone-echoing.
var taskCounter = 0; // ID counter for macro tasks.
var zoneStack = []; // Stack of left zones to restore asynchronically.
var zoneEchoes = 0; // zoneEchoes is a must in order to persist zones between native await expressions.
var totalEchoes = 0; // ID counter for micro-tasks. Used to detect possible native await in our Promise.prototype.then.
var zone_id_counter = 0;
function newScope(fn, props$$1, a1, a2) {
    var parent = PSD, psd = Object.create(parent);
    psd.parent = parent;
    psd.ref = 0;
    psd.global = false;
    psd.id = ++zone_id_counter;
    // Prepare for promise patching (done in usePSD):
    var globalEnv = globalPSD.env;
    psd.env = patchGlobalPromise ? {
        Promise: Promise,
        PromiseProp: { value: Promise, configurable: true, writable: true },
        all: Promise.all,
        race: Promise.race,
        resolve: Promise.resolve,
        reject: Promise.reject,
        nthen: getPatchedPromiseThen(globalEnv.nthen, psd),
        gthen: getPatchedPromiseThen(globalEnv.gthen, psd) // global then
    } : {};
    if (props$$1)
        extend(psd, props$$1);
    // unhandleds and onunhandled should not be specifically set here.
    // Leave them on parent prototype.
    // unhandleds.push(err) will push to parent's prototype
    // onunhandled() will call parents onunhandled (with this scope's this-pointer though!)
    ++parent.ref;
    psd.finalize = function () {
        --this.parent.ref || this.parent.finalize();
    };
    var rv = usePSD(psd, fn, a1, a2);
    if (psd.ref === 0)
        psd.finalize();
    return rv;
}
// Function to call if scopeFunc returns NativePromise
// Also for each NativePromise in the arguments to Promise.all()
function incrementExpectedAwaits() {
    if (!task.id)
        task.id = ++taskCounter;
    ++task.awaits;
    task.echoes += ZONE_ECHO_LIMIT;
    return task.id;
}
// Function to call when 'then' calls back on a native promise where onAwaitExpected() had been called.
// Also call this when a native await calls then method on a promise. In that case, don't supply
// sourceTaskId because we already know it refers to current task.
function decrementExpectedAwaits(sourceTaskId) {
    if (!task.awaits || (sourceTaskId && sourceTaskId !== task.id))
        return;
    if (--task.awaits === 0)
        task.id = 0;
    task.echoes = task.awaits * ZONE_ECHO_LIMIT; // Will reset echoes to 0 if awaits is 0.
}
// Call from Promise.all() and Promise.race()
function onPossibleParallellAsync(possiblePromise) {
    if (task.echoes && possiblePromise && possiblePromise.constructor === NativePromise) {
        incrementExpectedAwaits();
        return possiblePromise.then(function (x) {
            decrementExpectedAwaits();
            return x;
        }, function (e) {
            decrementExpectedAwaits();
            return rejection(e);
        });
    }
    return possiblePromise;
}
function zoneEnterEcho(targetZone) {
    ++totalEchoes;
    if (!task.echoes || --task.echoes === 0) {
        task.echoes = task.id = 0; // Cancel zone echoing.
    }
    zoneStack.push(PSD);
    switchToZone(targetZone, true);
}
function zoneLeaveEcho() {
    var zone = zoneStack[zoneStack.length - 1];
    zoneStack.pop();
    switchToZone(zone, false);
}
function switchToZone(targetZone, bEnteringZone) {
    var currentZone = PSD;
    if (bEnteringZone ? task.echoes && (!zoneEchoes++ || targetZone !== PSD) : zoneEchoes && (!--zoneEchoes || targetZone !== PSD)) {
        // Enter or leave zone asynchronically as well, so that tasks initiated during current tick
        // will be surrounded by the zone when they are invoked.
        enqueueNativeMicroTask(bEnteringZone ? zoneEnterEcho.bind(null, targetZone) : zoneLeaveEcho);
    }
    if (targetZone === PSD)
        return;
    PSD = targetZone; // The actual zone switch occurs at this line.
    // Snapshot on every leave from global zone.
    if (currentZone === globalPSD)
        globalPSD.env = snapShot();
    if (patchGlobalPromise) {
        // Let's patch the global and native Promises (may be same or may be different)
        var GlobalPromise = globalPSD.env.Promise;
        // Swich environments (may be PSD-zone or the global zone. Both apply.)
        var targetEnv = targetZone.env;
        // Change Promise.prototype.then for native and global Promise (they MAY differ on polyfilled environments, but both can be accessed)
        // Must be done on each zone change because the patched method contains targetZone in its closure.
        nativePromiseProto.then = targetEnv.nthen;
        GlobalPromise.prototype.then = targetEnv.gthen;
        if (currentZone.global || targetZone.global) {
            // Leaving or entering global zone. It's time to patch / restore global Promise.
            // Set this Promise to window.Promise so that transiled async functions will work on Firefox, Safari and IE, as well as with Zonejs and angular.
            Object.defineProperty(_global, 'Promise', targetEnv.PromiseProp);
            // Support Promise.all() etc to work indexedDB-safe also when people are including es6-promise as a module (they might
            // not be accessing global.Promise but a local reference to it)
            GlobalPromise.all = targetEnv.all;
            GlobalPromise.race = targetEnv.race;
            GlobalPromise.resolve = targetEnv.resolve;
            GlobalPromise.reject = targetEnv.reject;
        }
    }
}
function snapShot() {
    var GlobalPromise = _global.Promise;
    return patchGlobalPromise ? {
        Promise: GlobalPromise,
        PromiseProp: Object.getOwnPropertyDescriptor(_global, "Promise"),
        all: GlobalPromise.all,
        race: GlobalPromise.race,
        resolve: GlobalPromise.resolve,
        reject: GlobalPromise.reject,
        nthen: nativePromiseProto.then,
        gthen: GlobalPromise.prototype.then
    } : {};
}
function usePSD(psd, fn, a1, a2, a3) {
    var outerScope = PSD;
    try {
        switchToZone(psd, true);
        return fn(a1, a2, a3);
    }
    finally {
        switchToZone(outerScope, false);
    }
}
function enqueueNativeMicroTask(job) {
    //
    // Precondition: nativePromiseThen !== undefined
    //
    nativePromiseThen.call(resolvedNativePromise, job);
}
function nativeAwaitCompatibleWrap(fn, zone, possibleAwait) {
    return typeof fn !== 'function' ? fn : function () {
        var outerZone = PSD;
        if (possibleAwait)
            incrementExpectedAwaits();
        switchToZone(zone, true);
        try {
            return fn.apply(this, arguments);
        }
        finally {
            switchToZone(outerZone, false);
        }
    };
}
function getPatchedPromiseThen(origThen, zone) {
    return function (onResolved, onRejected) {
        return origThen.call(this, nativeAwaitCompatibleWrap(onResolved, zone, false), nativeAwaitCompatibleWrap(onRejected, zone, false));
    };
}
var UNHANDLEDREJECTION = "unhandledrejection";
function globalError(err, promise) {
    var rv;
    try {
        rv = promise.onuncatched(err);
    }
    catch (e) { }
    if (rv !== false)
        try {
            var event, eventData = { promise: promise, reason: err };
            if (_global.document && document.createEvent) {
                event = document.createEvent('Event');
                event.initEvent(UNHANDLEDREJECTION, true, true);
                extend(event, eventData);
            }
            else if (_global.CustomEvent) {
                event = new CustomEvent(UNHANDLEDREJECTION, { detail: eventData });
                extend(event, eventData);
            }
            if (event && _global.dispatchEvent) {
                dispatchEvent(event);
                if (!_global.PromiseRejectionEvent && _global.onunhandledrejection)
                    // No native support for PromiseRejectionEvent but user has set window.onunhandledrejection. Manually call it.
                    try {
                        _global.onunhandledrejection(event);
                    }
                    catch (_) { }
            }
            if (!event.defaultPrevented) {
                console.warn("Unhandled rejection: " + (err.stack || err));
            }
        }
        catch (e) { }
}
var rejection = Promise.reject;

function Events(ctx) {
    var evs = {};
    var rv = function (eventName, subscriber) {
        if (subscriber) {
            // Subscribe. If additional arguments than just the subscriber was provided, forward them as well.
            var i = arguments.length, args = new Array(i - 1);
            while (--i)
                args[i - 1] = arguments[i];
            evs[eventName].subscribe.apply(null, args);
            return ctx;
        }
        else if (typeof (eventName) === 'string') {
            // Return interface allowing to fire or unsubscribe from event
            return evs[eventName];
        }
    };
    rv.addEventType = add;
    for (var i = 1, l = arguments.length; i < l; ++i) {
        add(arguments[i]);
    }
    return rv;
    function add(eventName, chainFunction, defaultFunction) {
        if (typeof eventName === 'object')
            return addConfiguredEvents(eventName);
        if (!chainFunction)
            chainFunction = reverseStoppableEventChain;
        if (!defaultFunction)
            defaultFunction = nop;
        var context = {
            subscribers: [],
            fire: defaultFunction,
            subscribe: function (cb) {
                if (context.subscribers.indexOf(cb) === -1) {
                    context.subscribers.push(cb);
                    context.fire = chainFunction(context.fire, cb);
                }
            },
            unsubscribe: function (cb) {
                context.subscribers = context.subscribers.filter(function (fn) { return fn !== cb; });
                context.fire = context.subscribers.reduce(chainFunction, defaultFunction);
            }
        };
        evs[eventName] = rv[eventName] = context;
        return context;
    }
    function addConfiguredEvents(cfg) {
        // events(this, {reading: [functionChain, nop]});
        keys(cfg).forEach(function (eventName) {
            var args = cfg[eventName];
            if (isArray(args)) {
                add(eventName, cfg[eventName][0], cfg[eventName][1]);
            }
            else if (args === 'asap') {
                // Rather than approaching event subscription using a functional approach, we here do it in a for-loop where subscriber is executed in its own stack
                // enabling that any exception that occur wont disturb the initiator and also not nescessary be catched and forgotten.
                var context = add(eventName, mirror, function fire() {
                    // Optimazation-safe cloning of arguments into args.
                    var i = arguments.length, args = new Array(i);
                    while (i--)
                        args[i] = arguments[i];
                    // All each subscriber:
                    context.subscribers.forEach(function (fn) {
                        asap(function fireEvent() {
                            fn.apply(null, args);
                        });
                    });
                });
            }
            else
                throw new exceptions.InvalidArgument("Invalid event config");
        });
    }
}

/*
 * Dexie.js - a minimalistic wrapper for IndexedDB
 * ===============================================
 *
 * Copyright (c) 2014-2017 David Fahlander
 *
 * Version {version}, {date}
 *
 * http://dexie.org
 *
 * Apache License Version 2.0, January 2004, http://www.apache.org/licenses/LICENSE-2.0
 *
 */
var DEXIE_VERSION = '{version}';
var maxString = String.fromCharCode(65535);
var maxKey = (function () { try {
    IDBKeyRange.only([[]]);
    return [[]];
}
catch (e) {
    return maxString;
} })();
var minKey = -Infinity;
var INVALID_KEY_ARGUMENT = "Invalid key provided. Keys must be of type string, number, Date or Array<string | number | Date>.";
var STRING_EXPECTED = "String expected.";
var connections = [];
var isIEOrEdge = typeof navigator !== 'undefined' && /(MSIE|Trident|Edge)/.test(navigator.userAgent);
var hasIEDeleteObjectStoreBug = isIEOrEdge;
var hangsOnDeleteLargeKeyRange = isIEOrEdge;
var dexieStackFrameFilter = function (frame) { return !/(dexie\.js|dexie\.min\.js)/.test(frame); };
var dbNamesDB; // Global database for backing Dexie.getDatabaseNames() on browser without indexedDB.webkitGetDatabaseNames() 
// Init debug
setDebug(debug, dexieStackFrameFilter);
function Dexie(dbName, options) {
    /// <param name="options" type="Object" optional="true">Specify only if you wich to control which addons that should run on this instance</param>
    var deps = Dexie.dependencies;
    var opts = extend({
        // Default Options
        addons: Dexie.addons,
        autoOpen: true,
        indexedDB: deps.indexedDB,
        IDBKeyRange: deps.IDBKeyRange // Backend IDBKeyRange api. Default to browser env.
    }, options);
    var addons = opts.addons, autoOpen = opts.autoOpen, indexedDB = opts.indexedDB, IDBKeyRange = opts.IDBKeyRange;
    var globalSchema = this._dbSchema = {};
    var versions = [];
    var dbStoreNames = [];
    var allTables = {};
    ///<var type="IDBDatabase" />
    var idbdb = null; // Instance of IDBDatabase
    var dbOpenError = null;
    var isBeingOpened = false;
    var onReadyBeingFired = null;
    var openComplete = false;
    var READONLY = "readonly", READWRITE = "readwrite";
    var db = this;
    var dbReadyResolve, dbReadyPromise = new Promise(function (resolve) {
        dbReadyResolve = resolve;
    }), cancelOpen, openCanceller = new Promise(function (_, reject) {
        cancelOpen = reject;
    });
    var autoSchema = true;
    var hasNativeGetDatabaseNames = !!getNativeGetDatabaseNamesFn(indexedDB), hasGetAll;
    function init() {
        // Default subscribers to "versionchange" and "blocked".
        // Can be overridden by custom handlers. If custom handlers return false, these default
        // behaviours will be prevented.
        db.on("versionchange", function (ev) {
            // Default behavior for versionchange event is to close database connection.
            // Caller can override this behavior by doing db.on("versionchange", function(){ return false; });
            // Let's not block the other window from making it's delete() or open() call.
            // NOTE! This event is never fired in IE,Edge or Safari.
            if (ev.newVersion > 0)
                console.warn("Another connection wants to upgrade database '" + db.name + "'. Closing db now to resume the upgrade.");
            else
                console.warn("Another connection wants to delete database '" + db.name + "'. Closing db now to resume the delete request.");
            db.close();
            // In many web applications, it would be recommended to force window.reload()
            // when this event occurs. To do that, subscribe to the versionchange event
            // and call window.location.reload(true) if ev.newVersion > 0 (not a deletion)
            // The reason for this is that your current web app obviously has old schema code that needs
            // to be updated. Another window got a newer version of the app and needs to upgrade DB but
            // your window is blocking it unless we close it here.
        });
        db.on("blocked", function (ev) {
            if (!ev.newVersion || ev.newVersion < ev.oldVersion)
                console.warn("Dexie.delete('" + db.name + "') was blocked");
            else
                console.warn("Upgrade '" + db.name + "' blocked by other connection holding version " + ev.oldVersion / 10);
        });
    }
    //
    //
    //
    // ------------------------- Versioning Framework---------------------------
    //
    //
    //
    this.version = function (versionNumber) {
        /// <param name="versionNumber" type="Number"></param>
        /// <returns type="Version"></returns>
        if (idbdb || isBeingOpened)
            throw new exceptions.Schema("Cannot add version when database is open");
        this.verno = Math.max(this.verno, versionNumber);
        var versionInstance = versions.filter(function (v) { return v._cfg.version === versionNumber; })[0];
        if (versionInstance)
            return versionInstance;
        versionInstance = new Version(versionNumber);
        versions.push(versionInstance);
        versions.sort(lowerVersionFirst);
        // Disable autoschema mode, as at least one version is specified.
        autoSchema = false;
        return versionInstance;
    };
    function Version(versionNumber) {
        this._cfg = {
            version: versionNumber,
            storesSource: null,
            dbschema: {},
            tables: {},
            contentUpgrade: null
        };
        this.stores({}); // Derive earlier schemas by default.
    }
    extend(Version.prototype, {
        stores: function (stores) {
            /// <summary>
            ///   Defines the schema for a particular version
            /// </summary>
            /// <param name="stores" type="Object">
            /// Example: <br/>
            ///   {users: "id++,first,last,&amp;username,*email", <br/>
            ///   passwords: "id++,&amp;username"}<br/>
            /// <br/>
            /// Syntax: {Table: "[primaryKey][++],[&amp;][*]index1,[&amp;][*]index2,..."}<br/><br/>
            /// Special characters:<br/>
            ///  "&amp;"  means unique key, <br/>
            ///  "*"  means value is multiEntry, <br/>
            ///  "++" means auto-increment and only applicable for primary key <br/>
            /// </param>
            this._cfg.storesSource = this._cfg.storesSource ? extend(this._cfg.storesSource, stores) : stores;
            // Derive stores from earlier versions if they are not explicitely specified as null or a new syntax.
            var storesSpec = {};
            versions.forEach(function (version) {
                extend(storesSpec, version._cfg.storesSource);
            });
            var dbschema = (this._cfg.dbschema = {});
            this._parseStoresSpec(storesSpec, dbschema);
            // Update the latest schema to this version
            // Update API
            globalSchema = db._dbSchema = dbschema;
            removeTablesApi([allTables, db, Transaction.prototype]); // Keep Transaction.prototype even though it should be depr.
            setApiOnPlace([allTables, db, Transaction.prototype, this._cfg.tables], keys(dbschema), dbschema);
            dbStoreNames = keys(dbschema);
            return this;
        },
        upgrade: function (upgradeFunction) {
            this._cfg.contentUpgrade = upgradeFunction;
            return this;
        },
        _parseStoresSpec: function (stores, outSchema) {
            keys(stores).forEach(function (tableName) {
                if (stores[tableName] !== null) {
                    var instanceTemplate = {};
                    var indexes = parseIndexSyntax(stores[tableName]);
                    var primKey = indexes.shift();
                    if (primKey.multi)
                        throw new exceptions.Schema("Primary key cannot be multi-valued");
                    if (primKey.keyPath)
                        setByKeyPath(instanceTemplate, primKey.keyPath, primKey.auto ? 0 : primKey.keyPath);
                    indexes.forEach(function (idx) {
                        if (idx.auto)
                            throw new exceptions.Schema("Only primary key can be marked as autoIncrement (++)");
                        if (!idx.keyPath)
                            throw new exceptions.Schema("Index must have a name and cannot be an empty string");
                        setByKeyPath(instanceTemplate, idx.keyPath, idx.compound ? idx.keyPath.map(function () { return ""; }) : "");
                    });
                    outSchema[tableName] = new TableSchema(tableName, primKey, indexes, instanceTemplate);
                }
            });
        }
    });
    function runUpgraders(oldVersion, idbtrans, reject) {
        var trans = db._createTransaction(READWRITE, dbStoreNames, globalSchema);
        trans.create(idbtrans);
        trans._completion.catch(reject);
        var rejectTransaction = trans._reject.bind(trans);
        newScope(function () {
            PSD.trans = trans;
            if (oldVersion === 0) {
                // Create tables:
                keys(globalSchema).forEach(function (tableName) {
                    createTable(idbtrans, tableName, globalSchema[tableName].primKey, globalSchema[tableName].indexes);
                });
                Promise.follow(function () { return db.on.populate.fire(trans); }).catch(rejectTransaction);
            }
            else
                updateTablesAndIndexes(oldVersion, trans, idbtrans).catch(rejectTransaction);
        });
    }
    function updateTablesAndIndexes(oldVersion, trans, idbtrans) {
        // Upgrade version to version, step-by-step from oldest to newest version.
        // Each transaction object will contain the table set that was current in that version (but also not-yet-deleted tables from its previous version)
        var queue = [];
        var oldVersionStruct = versions.filter(function (version) { return version._cfg.version === oldVersion; })[0];
        if (!oldVersionStruct)
            throw new exceptions.Upgrade("Dexie specification of currently installed DB version is missing");
        globalSchema = db._dbSchema = oldVersionStruct._cfg.dbschema;
        var anyContentUpgraderHasRun = false;
        var versToRun = versions.filter(function (v) { return v._cfg.version > oldVersion; });
        versToRun.forEach(function (version) {
            /// <param name="version" type="Version"></param>
            queue.push(function () {
                var oldSchema = globalSchema;
                var newSchema = version._cfg.dbschema;
                adjustToExistingIndexNames(oldSchema, idbtrans);
                adjustToExistingIndexNames(newSchema, idbtrans);
                globalSchema = db._dbSchema = newSchema;
                var diff = getSchemaDiff(oldSchema, newSchema);
                // Add tables           
                diff.add.forEach(function (tuple) {
                    createTable(idbtrans, tuple[0], tuple[1].primKey, tuple[1].indexes);
                });
                // Change tables
                diff.change.forEach(function (change) {
                    if (change.recreate) {
                        throw new exceptions.Upgrade("Not yet support for changing primary key");
                    }
                    else {
                        var store = idbtrans.objectStore(change.name);
                        // Add indexes
                        change.add.forEach(function (idx) {
                            addIndex(store, idx);
                        });
                        // Update indexes
                        change.change.forEach(function (idx) {
                            store.deleteIndex(idx.name);
                            addIndex(store, idx);
                        });
                        // Delete indexes
                        change.del.forEach(function (idxName) {
                            store.deleteIndex(idxName);
                        });
                    }
                });
                if (version._cfg.contentUpgrade) {
                    anyContentUpgraderHasRun = true;
                    return Promise.follow(function () {
                        version._cfg.contentUpgrade(trans);
                    });
                }
            });
            queue.push(function (idbtrans) {
                if (!anyContentUpgraderHasRun || !hasIEDeleteObjectStoreBug) {
                    var newSchema = version._cfg.dbschema;
                    // Delete old tables
                    deleteRemovedTables(newSchema, idbtrans);
                }
            });
        });
        // Now, create a queue execution engine
        function runQueue() {
            return queue.length ? Promise.resolve(queue.shift()(trans.idbtrans)).then(runQueue) :
                Promise.resolve();
        }
        return runQueue().then(function () {
            createMissingTables(globalSchema, idbtrans); // At last, make sure to create any missing tables. (Needed by addons that add stores to DB without specifying version)
        });
    }
    function getSchemaDiff(oldSchema, newSchema) {
        var diff = {
            del: [],
            add: [],
            change: [] // Array of {name: tableName, recreate: newDefinition, del: delIndexNames, add: newIndexDefs, change: changedIndexDefs}
        };
        for (var table in oldSchema) {
            if (!newSchema[table])
                diff.del.push(table);
        }
        for (table in newSchema) {
            var oldDef = oldSchema[table], newDef = newSchema[table];
            if (!oldDef) {
                diff.add.push([table, newDef]);
            }
            else {
                var change = {
                    name: table,
                    def: newDef,
                    recreate: false,
                    del: [],
                    add: [],
                    change: []
                };
                if (oldDef.primKey.src !== newDef.primKey.src) {
                    // Primary key has changed. Remove and re-add table.
                    change.recreate = true;
                    diff.change.push(change);
                }
                else {
                    // Same primary key. Just find out what differs:
                    var oldIndexes = oldDef.idxByName;
                    var newIndexes = newDef.idxByName;
                    for (var idxName in oldIndexes) {
                        if (!newIndexes[idxName])
                            change.del.push(idxName);
                    }
                    for (idxName in newIndexes) {
                        var oldIdx = oldIndexes[idxName], newIdx = newIndexes[idxName];
                        if (!oldIdx)
                            change.add.push(newIdx);
                        else if (oldIdx.src !== newIdx.src)
                            change.change.push(newIdx);
                    }
                    if (change.del.length > 0 || change.add.length > 0 || change.change.length > 0) {
                        diff.change.push(change);
                    }
                }
            }
        }
        return diff;
    }
    function createTable(idbtrans, tableName, primKey, indexes) {
        /// <param name="idbtrans" type="IDBTransaction"></param>
        var store = idbtrans.db.createObjectStore(tableName, primKey.keyPath ? { keyPath: primKey.keyPath, autoIncrement: primKey.auto } : { autoIncrement: primKey.auto });
        indexes.forEach(function (idx) { addIndex(store, idx); });
        return store;
    }
    function createMissingTables(newSchema, idbtrans) {
        keys(newSchema).forEach(function (tableName) {
            if (!idbtrans.db.objectStoreNames.contains(tableName)) {
                createTable(idbtrans, tableName, newSchema[tableName].primKey, newSchema[tableName].indexes);
            }
        });
    }
    function deleteRemovedTables(newSchema, idbtrans) {
        for (var i = 0; i < idbtrans.db.objectStoreNames.length; ++i) {
            var storeName = idbtrans.db.objectStoreNames[i];
            if (newSchema[storeName] == null) {
                idbtrans.db.deleteObjectStore(storeName);
            }
        }
    }
    function addIndex(store, idx) {
        store.createIndex(idx.name, idx.keyPath, { unique: idx.unique, multiEntry: idx.multi });
    }
    //
    //
    //      Dexie Protected API
    //
    //
    this._allTables = allTables;
    this._createTransaction = function (mode, storeNames, dbschema, parentTransaction) {
        return new Transaction(mode, storeNames, dbschema, parentTransaction);
    };
    /* Generate a temporary transaction when db operations are done outside a transaction scope.
    */
    function tempTransaction(mode, storeNames, fn) {
        if (!openComplete && (!PSD.letThrough)) {
            if (!isBeingOpened) {
                if (!autoOpen)
                    return rejection(new exceptions.DatabaseClosed());
                db.open().catch(nop); // Open in background. If if fails, it will be catched by the final promise anyway.
            }
            return dbReadyPromise.then(function () { return tempTransaction(mode, storeNames, fn); });
        }
        else {
            var trans = db._createTransaction(mode, storeNames, globalSchema);
            try {
                trans.create();
            }
            catch (ex) {
                return rejection(ex);
            }
            return trans._promise(mode, function (resolve, reject) {
                return newScope(function () {
                    PSD.trans = trans;
                    return fn(resolve, reject, trans);
                });
            }).then(function (result) {
                // Instead of resolving value directly, wait with resolving it until transaction has completed.
                // Otherwise the data would not be in the DB if requesting it in the then() operation.
                // Specifically, to ensure that the following expression will work:
                //
                //   db.friends.put({name: "Arne"}).then(function () {
                //       db.friends.where("name").equals("Arne").count(function(count) {
                //           assert (count === 1);
                //       });
                //   });
                //
                return trans._completion.then(function () { return result; });
            }); /*.catch(err => { // Don't do this as of now. If would affect bulk- and modify methods in a way that could be more intuitive. But wait! Maybe change in next major.
                trans._reject(err);
                return rejection(err);
            });*/
        }
    }
    this._whenReady = function (fn) {
        return openComplete || PSD.letThrough ? fn() : new Promise(function (resolve, reject) {
            if (!isBeingOpened) {
                if (!autoOpen) {
                    reject(new exceptions.DatabaseClosed());
                    return;
                }
                db.open().catch(nop); // Open in background. If if fails, it will be catched by the final promise anyway.
            }
            dbReadyPromise.then(resolve, reject);
        }).then(fn);
    };
    //
    //
    //
    //
    //      Dexie API
    //
    //
    //
    this.verno = 0;
    this.open = function () {
        if (isBeingOpened || idbdb)
            return dbReadyPromise.then(function () { return dbOpenError ? rejection(dbOpenError) : db; });
        debug && (openCanceller._stackHolder = getErrorWithStack()); // Let stacks point to when open() was called rather than where new Dexie() was called.
        isBeingOpened = true;
        dbOpenError = null;
        openComplete = false;
        // Function pointers to call when the core opening process completes.
        var resolveDbReady = dbReadyResolve, 
        // upgradeTransaction to abort on failure.
        upgradeTransaction = null;
        return Promise.race([openCanceller, new Promise(function (resolve, reject) {
                // Multiply db.verno with 10 will be needed to workaround upgrading bug in IE:
                // IE fails when deleting objectStore after reading from it.
                // A future version of Dexie.js will stopover an intermediate version to workaround this.
                // At that point, we want to be backward compatible. Could have been multiplied with 2, but by using 10, it is easier to map the number to the real version number.
                // If no API, throw!
                if (!indexedDB)
                    throw new exceptions.MissingAPI("indexedDB API not found. If using IE10+, make sure to run your code on a server URL " +
                        "(not locally). If using old Safari versions, make sure to include indexedDB polyfill.");
                var req = autoSchema ? indexedDB.open(dbName) : indexedDB.open(dbName, Math.round(db.verno * 10));
                if (!req)
                    throw new exceptions.MissingAPI("IndexedDB API not available"); // May happen in Safari private mode, see https://github.com/dfahlander/Dexie.js/issues/134
                req.onerror = eventRejectHandler(reject);
                req.onblocked = wrap(fireOnBlocked);
                req.onupgradeneeded = wrap(function (e) {
                    upgradeTransaction = req.transaction;
                    if (autoSchema && !db._allowEmptyDB) {
                        // Caller did not specify a version or schema. Doing that is only acceptable for opening alread existing databases.
                        // If onupgradeneeded is called it means database did not exist. Reject the open() promise and make sure that we
                        // do not create a new database by accident here.
                        req.onerror = preventDefault; // Prohibit onabort error from firing before we're done!
                        upgradeTransaction.abort(); // Abort transaction (would hope that this would make DB disappear but it doesnt.)
                        // Close database and delete it.
                        req.result.close();
                        var delreq = indexedDB.deleteDatabase(dbName); // The upgrade transaction is atomic, and javascript is single threaded - meaning that there is no risk that we delete someone elses database here!
                        delreq.onsuccess = delreq.onerror = wrap(function () {
                            reject(new exceptions.NoSuchDatabase("Database " + dbName + " doesnt exist"));
                        });
                    }
                    else {
                        upgradeTransaction.onerror = eventRejectHandler(reject);
                        var oldVer = e.oldVersion > Math.pow(2, 62) ? 0 : e.oldVersion; // Safari 8 fix.
                        runUpgraders(oldVer / 10, upgradeTransaction, reject, req);
                    }
                }, reject);
                req.onsuccess = wrap(function () {
                    // Core opening procedure complete. Now let's just record some stuff.
                    upgradeTransaction = null;
                    idbdb = req.result;
                    connections.push(db); // Used for emulating versionchange event on IE/Edge/Safari.
                    if (autoSchema)
                        readGlobalSchema();
                    else if (idbdb.objectStoreNames.length > 0) {
                        try {
                            adjustToExistingIndexNames(globalSchema, idbdb.transaction(safariMultiStoreFix(idbdb.objectStoreNames), READONLY));
                        }
                        catch (e) {
                            // Safari may bail out if > 1 store names. However, this shouldnt be a showstopper. Issue #120.
                        }
                    }
                    idbdb.onversionchange = wrap(function (ev) {
                        db._vcFired = true; // detect implementations that not support versionchange (IE/Edge/Safari)
                        db.on("versionchange").fire(ev);
                    });
                    if (!hasNativeGetDatabaseNames && dbName !== '__dbnames') {
                        dbNamesDB.dbnames.put({ name: dbName }).catch(nop);
                    }
                    resolve();
                }, reject);
            })]).then(function () {
            // Before finally resolving the dbReadyPromise and this promise,
            // call and await all on('ready') subscribers:
            // Dexie.vip() makes subscribers able to use the database while being opened.
            // This is a must since these subscribers take part of the opening procedure.
            onReadyBeingFired = [];
            return Promise.resolve(Dexie.vip(db.on.ready.fire)).then(function fireRemainders() {
                if (onReadyBeingFired.length > 0) {
                    // In case additional subscribers to db.on('ready') were added during the time db.on.ready.fire was executed.
                    var remainders = onReadyBeingFired.reduce(promisableChain, nop);
                    onReadyBeingFired = [];
                    return Promise.resolve(Dexie.vip(remainders)).then(fireRemainders);
                }
            });
        }).finally(function () {
            onReadyBeingFired = null;
        }).then(function () {
            // Resolve the db.open() with the db instance.
            isBeingOpened = false;
            return db;
        }).catch(function (err) {
            try {
                // Did we fail within onupgradeneeded? Make sure to abort the upgrade transaction so it doesnt commit.
                upgradeTransaction && upgradeTransaction.abort();
            }
            catch (e) { }
            isBeingOpened = false; // Set before calling db.close() so that it doesnt reject openCanceller again (leads to unhandled rejection event).
            db.close(); // Closes and resets idbdb, removes connections, resets dbReadyPromise and openCanceller so that a later db.open() is fresh.
            // A call to db.close() may have made on-ready subscribers fail. Use dbOpenError if set, since err could be a follow-up error on that.
            dbOpenError = err; // Record the error. It will be used to reject further promises of db operations.
            return rejection(dbOpenError);
        }).finally(function () {
            openComplete = true;
            resolveDbReady(); // dbReadyPromise is resolved no matter if open() rejects or resolved. It's just to wake up waiters.
        });
    };
    this.close = function () {
        var idx = connections.indexOf(db);
        if (idx >= 0)
            connections.splice(idx, 1);
        if (idbdb) {
            try {
                idbdb.close();
            }
            catch (e) { }
            idbdb = null;
        }
        autoOpen = false;
        dbOpenError = new exceptions.DatabaseClosed();
        if (isBeingOpened)
            cancelOpen(dbOpenError);
        // Reset dbReadyPromise promise:
        dbReadyPromise = new Promise(function (resolve) {
            dbReadyResolve = resolve;
        });
        openCanceller = new Promise(function (_, reject) {
            cancelOpen = reject;
        });
    };
    this.delete = function () {
        var hasArguments = arguments.length > 0;
        return new Promise(function (resolve, reject) {
            if (hasArguments)
                throw new exceptions.InvalidArgument("Arguments not allowed in db.delete()");
            if (isBeingOpened) {
                dbReadyPromise.then(doDelete);
            }
            else {
                doDelete();
            }
            function doDelete() {
                db.close();
                var req = indexedDB.deleteDatabase(dbName);
                req.onsuccess = wrap(function () {
                    if (!hasNativeGetDatabaseNames) {
                        dbNamesDB.dbnames.delete(dbName).catch(nop);
                    }
                    resolve();
                });
                req.onerror = eventRejectHandler(reject);
                req.onblocked = fireOnBlocked;
            }
        });
    };
    this.backendDB = function () {
        return idbdb;
    };
    this.isOpen = function () {
        return idbdb !== null;
    };
    this.hasBeenClosed = function () {
        return dbOpenError && (dbOpenError instanceof exceptions.DatabaseClosed);
    };
    this.hasFailed = function () {
        return dbOpenError !== null;
    };
    this.dynamicallyOpened = function () {
        return autoSchema;
    };
    //
    // Properties
    //
    this.name = dbName;
    // db.tables - an array of all Table instances.
    props(this, {
        tables: {
            get: function () {
                /// <returns type="Array" elementType="Table" />
                return keys(allTables).map(function (name) { return allTables[name]; });
            }
        }
    });
    //
    // Events
    //
    this.on = Events(this, "populate", "blocked", "versionchange", { ready: [promisableChain, nop] });
    this.on.ready.subscribe = override(this.on.ready.subscribe, function (subscribe) {
        return function (subscriber, bSticky) {
            Dexie.vip(function () {
                if (openComplete) {
                    // Database already open. Call subscriber asap.
                    if (!dbOpenError)
                        Promise.resolve().then(subscriber);
                    // bSticky: Also subscribe to future open sucesses (after close / reopen) 
                    if (bSticky)
                        subscribe(subscriber);
                }
                else if (onReadyBeingFired) {
                    // db.on('ready') subscribers are currently being executed and have not yet resolved or rejected
                    onReadyBeingFired.push(subscriber);
                    if (bSticky)
                        subscribe(subscriber);
                }
                else {
                    // Database not yet open. Subscribe to it.
                    subscribe(subscriber);
                    // If bSticky is falsy, make sure to unsubscribe subscriber when fired once.
                    if (!bSticky)
                        subscribe(function unsubscribe() {
                            db.on.ready.unsubscribe(subscriber);
                            db.on.ready.unsubscribe(unsubscribe);
                        });
                }
            });
        };
    });
    this.transaction = function () {
        /// <summary>
        ///
        /// </summary>
        /// <param name="mode" type="String">"r" for readonly, or "rw" for readwrite</param>
        /// <param name="tableInstances">Table instance, Array of Table instances, String or String Array of object stores to include in the transaction</param>
        /// <param name="scopeFunc" type="Function">Function to execute with transaction</param>
        var args = extractTransactionArgs.apply(this, arguments);
        return this._transaction.apply(this, args);
    };
    function extractTransactionArgs(mode, _tableArgs_, scopeFunc) {
        // Let table arguments be all arguments between mode and last argument.
        var i = arguments.length;
        if (i < 2)
            throw new exceptions.InvalidArgument("Too few arguments");
        // Prevent optimzation killer (https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments)
        // and clone arguments except the first one into local var 'args'.
        var args = new Array(i - 1);
        while (--i)
            args[i - 1] = arguments[i];
        // Let scopeFunc be the last argument and pop it so that args now only contain the table arguments.
        scopeFunc = args.pop();
        var tables = flatten(args); // Support using array as middle argument, or a mix of arrays and non-arrays.
        return [mode, tables, scopeFunc];
    }
    this._transaction = function (mode, tables, scopeFunc) {
        var parentTransaction = PSD.trans;
        // Check if parent transactions is bound to this db instance, and if caller wants to reuse it
        if (!parentTransaction || parentTransaction.db !== db || mode.indexOf('!') !== -1)
            parentTransaction = null;
        var onlyIfCompatible = mode.indexOf('?') !== -1;
        mode = mode.replace('!', '').replace('?', ''); // Ok. Will change arguments[0] as well but we wont touch arguments henceforth.
        try {
            //
            // Get storeNames from arguments. Either through given table instances, or through given table names.
            //
            var storeNames = tables.map(function (table) {
                var storeName = table instanceof Table ? table.name : table;
                if (typeof storeName !== 'string')
                    throw new TypeError("Invalid table argument to Dexie.transaction(). Only Table or String are allowed");
                return storeName;
            });
            //
            // Resolve mode. Allow shortcuts "r" and "rw".
            //
            if (mode == "r" || mode == READONLY)
                mode = READONLY;
            else if (mode == "rw" || mode == READWRITE)
                mode = READWRITE;
            else
                throw new exceptions.InvalidArgument("Invalid transaction mode: " + mode);
            if (parentTransaction) {
                // Basic checks
                if (parentTransaction.mode === READONLY && mode === READWRITE) {
                    if (onlyIfCompatible) {
                        // Spawn new transaction instead.
                        parentTransaction = null;
                    }
                    else
                        throw new exceptions.SubTransaction("Cannot enter a sub-transaction with READWRITE mode when parent transaction is READONLY");
                }
                if (parentTransaction) {
                    storeNames.forEach(function (storeName) {
                        if (parentTransaction && parentTransaction.storeNames.indexOf(storeName) === -1) {
                            if (onlyIfCompatible) {
                                // Spawn new transaction instead.
                                parentTransaction = null;
                            }
                            else
                                throw new exceptions.SubTransaction("Table " + storeName +
                                    " not included in parent transaction.");
                        }
                    });
                }
                if (onlyIfCompatible && parentTransaction && !parentTransaction.active) {
                    // '?' mode should not keep using an inactive transaction.
                    parentTransaction = null;
                }
            }
        }
        catch (e) {
            return parentTransaction ?
                parentTransaction._promise(null, function (_, reject) { reject(e); }) :
                rejection(e);
        }
        // If this is a sub-transaction, lock the parent and then launch the sub-transaction.
        return (parentTransaction ?
            parentTransaction._promise(mode, enterTransactionScope, "lock") :
            PSD.trans ?
                // no parent transaction despite PSD.trans exists. Make sure also
                // that the zone we create is not a sub-zone of current, because
                // Promise.follow() should not wait for it if so.
                usePSD(PSD.transless, function () { return db._whenReady(enterTransactionScope); }) :
                db._whenReady(enterTransactionScope));
        function enterTransactionScope() {
            return Promise.resolve().then(function () {
                // Keep a pointer to last non-transactional PSD to use if someone calls Dexie.ignoreTransaction().
                var transless = PSD.transless || PSD;
                // Our transaction.
                //return new Promise((resolve, reject) => {
                var trans = db._createTransaction(mode, storeNames, globalSchema, parentTransaction);
                // Let the transaction instance be part of a Promise-specific data (PSD) value.
                var zoneProps = {
                    trans: trans,
                    transless: transless
                };
                if (parentTransaction) {
                    // Emulate transaction commit awareness for inner transaction (must 'commit' when the inner transaction has no more operations ongoing)
                    trans.idbtrans = parentTransaction.idbtrans;
                }
                else {
                    trans.create(); // Create the backend transaction so that complete() or error() will trigger even if no operation is made upon it.
                }
                // Support for native async await.
                if (scopeFunc.constructor === AsyncFunction) {
                    incrementExpectedAwaits();
                }
                var returnValue;
                var promiseFollowed = Promise.follow(function () {
                    // Finally, call the scope function with our table and transaction arguments.
                    returnValue = scopeFunc.call(trans, trans);
                    if (returnValue) {
                        if (returnValue.constructor === NativePromise) {
                            var decrementor = decrementExpectedAwaits.bind(null, null);
                            returnValue.then(decrementor, decrementor);
                        }
                        else if (typeof returnValue.next === 'function' && typeof returnValue.throw === 'function') {
                            // scopeFunc returned an iterator with throw-support. Handle yield as await.
                            returnValue = awaitIterator(returnValue);
                        }
                    }
                }, zoneProps);
                return (returnValue && typeof returnValue.then === 'function' ?
                    // Promise returned. User uses promise-style transactions.
                    Promise.resolve(returnValue).then(function (x) { return trans.active ?
                        x // Transaction still active. Continue.
                        : rejection(new exceptions.PrematureCommit("Transaction committed too early. See http://bit.ly/2kdckMn")); })
                    // No promise returned. Wait for all outstanding promises before continuing. 
                    : promiseFollowed.then(function () { return returnValue; })).then(function (x) {
                    // sub transactions don't react to idbtrans.oncomplete. We must trigger a completion:
                    if (parentTransaction)
                        trans._resolve();
                    // wait for trans._completion
                    // (if root transaction, this means 'complete' event. If sub-transaction, we've just fired it ourselves)
                    return trans._completion.then(function () { return x; });
                }).catch(function (e) {
                    trans._reject(e); // Yes, above then-handler were maybe not called because of an unhandled rejection in scopeFunc!
                    return rejection(e);
                });
            });
        }
    };
    this.table = function (tableName) {
        /// <returns type="Table"></returns>
        if (!hasOwn(allTables, tableName)) {
            throw new exceptions.InvalidTable("Table " + tableName + " does not exist");
        }
        return allTables[tableName];
    };
    //
    //
    //
    // Table Class
    //
    //
    //
    function Table(name, tableSchema, optionalTrans) {
        /// <param name="name" type="String"></param>
        this.name = name;
        this.schema = tableSchema;
        this._tx = optionalTrans;
        this.hook = allTables[name] ? allTables[name].hook : Events(null, {
            "creating": [hookCreatingChain, nop],
            "reading": [pureFunctionChain, mirror],
            "updating": [hookUpdatingChain, nop],
            "deleting": [hookDeletingChain, nop]
        });
    }
    function BulkErrorHandlerCatchAll(errorList, done, supportHooks) {
        return (supportHooks ? hookedEventRejectHandler : eventRejectHandler)(function (e) {
            errorList.push(e);
            done && done();
        });
    }
    function bulkDelete(idbstore, trans, keysOrTuples, hasDeleteHook, deletingHook) {
        // If hasDeleteHook, keysOrTuples must be an array of tuples: [[key1, value2],[key2,value2],...],
        // else keysOrTuples must be just an array of keys: [key1, key2, ...].
        return new Promise(function (resolve, reject) {
            var len = keysOrTuples.length, lastItem = len - 1;
            if (len === 0)
                return resolve();
            if (!hasDeleteHook) {
                for (var i = 0; i < len; ++i) {
                    var req = idbstore.delete(keysOrTuples[i]);
                    req.onerror = eventRejectHandler(reject);
                    if (i === lastItem)
                        req.onsuccess = wrap(function () { return resolve(); });
                }
            }
            else {
                var hookCtx, errorHandler = hookedEventRejectHandler(reject), successHandler = hookedEventSuccessHandler(null);
                tryCatch(function () {
                    for (var i = 0; i < len; ++i) {
                        hookCtx = { onsuccess: null, onerror: null };
                        var tuple = keysOrTuples[i];
                        deletingHook.call(hookCtx, tuple[0], tuple[1], trans);
                        var req = idbstore.delete(tuple[0]);
                        req._hookCtx = hookCtx;
                        req.onerror = errorHandler;
                        if (i === lastItem)
                            req.onsuccess = hookedEventSuccessHandler(resolve);
                        else
                            req.onsuccess = successHandler;
                    }
                }, function (err) {
                    hookCtx.onerror && hookCtx.onerror(err);
                    throw err;
                });
            }
        });
    }
    props(Table.prototype, {
        //
        // Table Protected Methods
        //
        _trans: function getTransaction(mode, fn, writeLocked) {
            var trans = this._tx || PSD.trans;
            return trans && trans.db === db ?
                trans === PSD.trans ?
                    trans._promise(mode, fn, writeLocked) :
                    newScope(function () { return trans._promise(mode, fn, writeLocked); }, { trans: trans, transless: PSD.transless || PSD }) :
                tempTransaction(mode, [this.name], fn);
        },
        _idbstore: function getIDBObjectStore(mode, fn, writeLocked) {
            var tableName = this.name;
            function supplyIdbStore(resolve, reject, trans) {
                if (trans.storeNames.indexOf(tableName) === -1)
                    throw new exceptions.NotFound("Table" + tableName + " not part of transaction");
                return fn(resolve, reject, trans.idbtrans.objectStore(tableName), trans);
            }
            return this._trans(mode, supplyIdbStore, writeLocked);
        },
        //
        // Table Public Methods
        //
        get: function (keyOrCrit, cb) {
            if (keyOrCrit && keyOrCrit.constructor === Object)
                return this.where(keyOrCrit).first(cb);
            var self = this;
            return this._idbstore(READONLY, function (resolve, reject, idbstore) {
                var req = idbstore.get(keyOrCrit);
                req.onerror = eventRejectHandler(reject);
                req.onsuccess = wrap(function () {
                    resolve(self.hook.reading.fire(req.result));
                }, reject);
            }).then(cb);
        },
        where: function (indexOrCrit) {
            if (typeof indexOrCrit === 'string')
                return new WhereClause(this, indexOrCrit);
            if (isArray(indexOrCrit))
                return new WhereClause(this, "[" + indexOrCrit.join('+') + "]");
            // indexOrCrit is an object map of {[keyPath]:value} 
            var keyPaths = keys(indexOrCrit);
            if (keyPaths.length === 1)
                // Only one critera. This was the easy case:
                return this
                    .where(keyPaths[0])
                    .equals(indexOrCrit[keyPaths[0]]);
            // Multiple criterias.
            // Let's try finding a compound index that matches all keyPaths in
            // arbritary order:
            var compoundIndex = this.schema.indexes.concat(this.schema.primKey).filter(function (ix) {
                return ix.compound &&
                    keyPaths.every(function (keyPath) { return ix.keyPath.indexOf(keyPath) >= 0; }) &&
                    ix.keyPath.every(function (keyPath) { return keyPaths.indexOf(keyPath) >= 0; });
            })[0];
            if (compoundIndex && maxKey !== maxString)
                // Cool! We found such compound index
                // and this browser supports compound indexes (maxKey !== maxString)!
                return this
                    .where(compoundIndex.name)
                    .equals(compoundIndex.keyPath.map(function (kp) { return indexOrCrit[kp]; }));
            if (!compoundIndex)
                console.warn("The query " + JSON.stringify(indexOrCrit) + " on " + this.name + " would benefit of a " +
                    ("compound index [" + keyPaths.join('+') + "]"));
            // Ok, now let's fallback to finding at least one matching index
            // and filter the rest.
            var idxByName = this.schema.idxByName;
            var simpleIndex = keyPaths.reduce(function (r, keyPath) { return [
                r[0] || idxByName[keyPath],
                r[0] || !idxByName[keyPath] ?
                    combine(r[1], function (x) { return '' + getByKeyPath(x, keyPath) ==
                        '' + indexOrCrit[keyPath]; })
                    : r[1]
            ]; }, [null, null]);
            var idx = simpleIndex[0];
            return idx ?
                this.where(idx.name).equals(indexOrCrit[idx.keyPath])
                    .filter(simpleIndex[1]) :
                compoundIndex ?
                    this.filter(simpleIndex[1]) : // Has compound but browser bad. Allow filter.
                    this.where(keyPaths).equals(''); // No index at all. Fail lazily.
        },
        count: function (cb) {
            return this.toCollection().count(cb);
        },
        offset: function (offset) {
            return this.toCollection().offset(offset);
        },
        limit: function (numRows) {
            return this.toCollection().limit(numRows);
        },
        reverse: function () {
            return this.toCollection().reverse();
        },
        filter: function (filterFunction) {
            return this.toCollection().and(filterFunction);
        },
        each: function (fn) {
            return this.toCollection().each(fn);
        },
        toArray: function (cb) {
            return this.toCollection().toArray(cb);
        },
        orderBy: function (index) {
            return new Collection(new WhereClause(this, isArray(index) ?
                "[" + index.join('+') + "]" :
                index));
        },
        toCollection: function () {
            return new Collection(new WhereClause(this));
        },
        mapToClass: function (constructor, structure) {
            /// <summary>
            ///     Map table to a javascript constructor function. Objects returned from the database will be instances of this class, making
            ///     it possible to the instanceOf operator as well as extending the class using constructor.prototype.method = function(){...}.
            /// </summary>
            /// <param name="constructor">Constructor function representing the class.</param>
            /// <param name="structure" optional="true">Helps IDE code completion by knowing the members that objects contain and not just the indexes. Also
            /// know what type each member has. Example: {name: String, emailAddresses: [String], password}</param>
            this.schema.mappedClass = constructor;
            var instanceTemplate = Object.create(constructor.prototype);
            if (structure) {
                // structure and instanceTemplate is for IDE code competion only while constructor.prototype is for actual inheritance.
                applyStructure(instanceTemplate, structure);
            }
            this.schema.instanceTemplate = instanceTemplate;
            // Now, subscribe to the when("reading") event to make all objects that come out from this table inherit from given class
            // no matter which method to use for reading (Table.get() or Table.where(...)... )
            var readHook = function (obj) {
                if (!obj)
                    return obj; // No valid object. (Value is null). Return as is.
                // Create a new object that derives from constructor:
                var res = Object.create(constructor.prototype);
                // Clone members:
                for (var m in obj)
                    if (hasOwn(obj, m))
                        try {
                            res[m] = obj[m];
                        }
                        catch (_) { }
                return res;
            };
            if (this.schema.readHook) {
                this.hook.reading.unsubscribe(this.schema.readHook);
            }
            this.schema.readHook = readHook;
            this.hook("reading", readHook);
            return constructor;
        },
        defineClass: function (structure) {
            /// <summary>
            ///     Define all members of the class that represents the table. This will help code completion of when objects are read from the database
            ///     as well as making it possible to extend the prototype of the returned constructor function.
            /// </summary>
            /// <param name="structure">Helps IDE code completion by knowing the members that objects contain and not just the indexes. Also
            /// know what type each member has. Example: {name: String, emailAddresses: [String], properties: {shoeSize: Number}}</param>
            return this.mapToClass(Dexie.defineClass(structure), structure);
        },
        bulkDelete: function (keys$$1) {
            if (this.hook.deleting.fire === nop) {
                return this._idbstore(READWRITE, function (resolve, reject, idbstore, trans) {
                    resolve(bulkDelete(idbstore, trans, keys$$1, false, nop));
                });
            }
            else {
                return this
                    .where(':id')
                    .anyOf(keys$$1)
                    .delete()
                    .then(function () { }); // Resolve with undefined.
            }
        },
        bulkPut: function (objects, keys$$1) {
            var _this = this;
            return this._idbstore(READWRITE, function (resolve, reject, idbstore) {
                if (!idbstore.keyPath && !_this.schema.primKey.auto && !keys$$1)
                    throw new exceptions.InvalidArgument("bulkPut() with non-inbound keys requires keys array in second argument");
                if (idbstore.keyPath && keys$$1)
                    throw new exceptions.InvalidArgument("bulkPut(): keys argument invalid on tables with inbound keys");
                if (keys$$1 && keys$$1.length !== objects.length)
                    throw new exceptions.InvalidArgument("Arguments objects and keys must have the same length");
                if (objects.length === 0)
                    return resolve(); // Caller provided empty list.
                var done = function (result) {
                    if (errorList.length === 0)
                        resolve(result);
                    else
                        reject(new BulkError(_this.name + ".bulkPut(): " + errorList.length + " of " + numObjs + " operations failed", errorList));
                };
                var req, errorList = [], errorHandler, numObjs = objects.length, table = _this;
                if (_this.hook.creating.fire === nop && _this.hook.updating.fire === nop) {
                    //
                    // Standard Bulk (no 'creating' or 'updating' hooks to care about)
                    //
                    errorHandler = BulkErrorHandlerCatchAll(errorList);
                    for (var i = 0, l = objects.length; i < l; ++i) {
                        req = keys$$1 ? idbstore.put(objects[i], keys$$1[i]) : idbstore.put(objects[i]);
                        req.onerror = errorHandler;
                    }
                    // Only need to catch success or error on the last operation
                    // according to the IDB spec.
                    req.onerror = BulkErrorHandlerCatchAll(errorList, done);
                    req.onsuccess = eventSuccessHandler(done);
                }
                else {
                    var effectiveKeys = keys$$1 || idbstore.keyPath && objects.map(function (o) { return getByKeyPath(o, idbstore.keyPath); });
                    // Generate map of {[key]: object}
                    var objectLookup = effectiveKeys && arrayToObject(effectiveKeys, function (key, i) { return key != null && [key, objects[i]]; });
                    var promise = !effectiveKeys ?
                        // Auto-incremented key-less objects only without any keys argument.
                        table.bulkAdd(objects) :
                        // Keys provided. Either as inbound in provided objects, or as a keys argument.
                        // Begin with updating those that exists in DB:
                        table.where(':id').anyOf(effectiveKeys.filter(function (key) { return key != null; })).modify(function () {
                            this.value = objectLookup[this.primKey];
                            objectLookup[this.primKey] = null; // Mark as "don't add this"
                        }).catch(ModifyError, function (e) {
                            errorList = e.failures; // No need to concat here. These are the first errors added.
                        }).then(function () {
                            // Now, let's examine which items didnt exist so we can add them:
                            var objsToAdd = [], keysToAdd = keys$$1 && [];
                            // Iterate backwards. Why? Because if same key was used twice, just add the last one.
                            for (var i = effectiveKeys.length - 1; i >= 0; --i) {
                                var key = effectiveKeys[i];
                                if (key == null || objectLookup[key]) {
                                    objsToAdd.push(objects[i]);
                                    keys$$1 && keysToAdd.push(key);
                                    if (key != null)
                                        objectLookup[key] = null; // Mark as "dont add again"
                                }
                            }
                            // The items are in reverse order so reverse them before adding.
                            // Could be important in order to get auto-incremented keys the way the caller
                            // would expect. Could have used unshift instead of push()/reverse(),
                            // but: http://jsperf.com/unshift-vs-reverse
                            objsToAdd.reverse();
                            keys$$1 && keysToAdd.reverse();
                            return table.bulkAdd(objsToAdd, keysToAdd);
                        }).then(function (lastAddedKey) {
                            // Resolve with key of the last object in given arguments to bulkPut():
                            var lastEffectiveKey = effectiveKeys[effectiveKeys.length - 1]; // Key was provided.
                            return lastEffectiveKey != null ? lastEffectiveKey : lastAddedKey;
                        });
                    promise.then(done).catch(BulkError, function (e) {
                        // Concat failure from ModifyError and reject using our 'done' method.
                        errorList = errorList.concat(e.failures);
                        done();
                    }).catch(reject);
                }
            }, "locked"); // If called from transaction scope, lock transaction til all steps are done.
        },
        bulkAdd: function (objects, keys$$1) {
            var self = this, creatingHook = this.hook.creating.fire;
            return this._idbstore(READWRITE, function (resolve, reject, idbstore, trans) {
                if (!idbstore.keyPath && !self.schema.primKey.auto && !keys$$1)
                    throw new exceptions.InvalidArgument("bulkAdd() with non-inbound keys requires keys array in second argument");
                if (idbstore.keyPath && keys$$1)
                    throw new exceptions.InvalidArgument("bulkAdd(): keys argument invalid on tables with inbound keys");
                if (keys$$1 && keys$$1.length !== objects.length)
                    throw new exceptions.InvalidArgument("Arguments objects and keys must have the same length");
                if (objects.length === 0)
                    return resolve(); // Caller provided empty list.
                function done(result) {
                    if (errorList.length === 0)
                        resolve(result);
                    else
                        reject(new BulkError(self.name + ".bulkAdd(): " + errorList.length + " of " + numObjs + " operations failed", errorList));
                }
                var req, errorList = [], errorHandler, successHandler, numObjs = objects.length;
                if (creatingHook !== nop) {
                    //
                    // There are subscribers to hook('creating')
                    // Must behave as documented.
                    //
                    var keyPath = idbstore.keyPath, hookCtx;
                    errorHandler = BulkErrorHandlerCatchAll(errorList, null, true);
                    successHandler = hookedEventSuccessHandler(null);
                    tryCatch(function () {
                        for (var i = 0, l = objects.length; i < l; ++i) {
                            hookCtx = { onerror: null, onsuccess: null };
                            var key = keys$$1 && keys$$1[i];
                            var obj = objects[i], effectiveKey = keys$$1 ? key : keyPath ? getByKeyPath(obj, keyPath) : undefined, keyToUse = creatingHook.call(hookCtx, effectiveKey, obj, trans);
                            if (effectiveKey == null && keyToUse != null) {
                                if (keyPath) {
                                    obj = deepClone(obj);
                                    setByKeyPath(obj, keyPath, keyToUse);
                                }
                                else {
                                    key = keyToUse;
                                }
                            }
                            req = key != null ? idbstore.add(obj, key) : idbstore.add(obj);
                            req._hookCtx = hookCtx;
                            if (i < l - 1) {
                                req.onerror = errorHandler;
                                if (hookCtx.onsuccess)
                                    req.onsuccess = successHandler;
                            }
                        }
                    }, function (err) {
                        hookCtx.onerror && hookCtx.onerror(err);
                        throw err;
                    });
                    req.onerror = BulkErrorHandlerCatchAll(errorList, done, true);
                    req.onsuccess = hookedEventSuccessHandler(done);
                }
                else {
                    //
                    // Standard Bulk (no 'creating' hook to care about)
                    //
                    errorHandler = BulkErrorHandlerCatchAll(errorList);
                    for (var i = 0, l = objects.length; i < l; ++i) {
                        req = keys$$1 ? idbstore.add(objects[i], keys$$1[i]) : idbstore.add(objects[i]);
                        req.onerror = errorHandler;
                    }
                    // Only need to catch success or error on the last operation
                    // according to the IDB spec.
                    req.onerror = BulkErrorHandlerCatchAll(errorList, done);
                    req.onsuccess = eventSuccessHandler(done);
                }
            });
        },
        add: function (obj, key) {
            /// <summary>
            ///   Add an object to the database. In case an object with same primary key already exists, the object will not be added.
            /// </summary>
            /// <param name="obj" type="Object">A javascript object to insert</param>
            /// <param name="key" optional="true">Primary key</param>
            var creatingHook = this.hook.creating.fire;
            return this._idbstore(READWRITE, function (resolve, reject, idbstore, trans) {
                var hookCtx = { onsuccess: null, onerror: null };
                if (creatingHook !== nop) {
                    var effectiveKey = (key != null) ? key : (idbstore.keyPath ? getByKeyPath(obj, idbstore.keyPath) : undefined);
                    var keyToUse = creatingHook.call(hookCtx, effectiveKey, obj, trans); // Allow subscribers to when("creating") to generate the key.
                    if (effectiveKey == null && keyToUse != null) {
                        if (idbstore.keyPath)
                            setByKeyPath(obj, idbstore.keyPath, keyToUse);
                        else
                            key = keyToUse;
                    }
                }
                try {
                    var req = key != null ? idbstore.add(obj, key) : idbstore.add(obj);
                    req._hookCtx = hookCtx;
                    req.onerror = hookedEventRejectHandler(reject);
                    req.onsuccess = hookedEventSuccessHandler(function (result) {
                        // TODO: Remove these two lines in next major release (2.0?)
                        // It's no good practice to have side effects on provided parameters
                        var keyPath = idbstore.keyPath;
                        if (keyPath)
                            setByKeyPath(obj, keyPath, result);
                        resolve(result);
                    });
                }
                catch (e) {
                    if (hookCtx.onerror)
                        hookCtx.onerror(e);
                    throw e;
                }
            });
        },
        put: function (obj, key) {
            var _this = this;
            /// <summary>
            ///   Add an object to the database but in case an object with same primary key alread exists, the existing one will get updated.
            /// </summary>
            /// <param name="obj" type="Object">A javascript object to insert or update</param>
            /// <param name="key" optional="true">Primary key</param>
            var creatingHook = this.hook.creating.fire, updatingHook = this.hook.updating.fire;
            if (creatingHook !== nop || updatingHook !== nop) {
                //
                // People listens to when("creating") or when("updating") events!
                // We must know whether the put operation results in an CREATE or UPDATE.
                //
                var keyPath = this.schema.primKey.keyPath;
                var effectiveKey = (key !== undefined) ? key : (keyPath && getByKeyPath(obj, keyPath));
                if (effectiveKey == null)
                    return this.add(obj);
                // Since key is optional, make sure we get it from obj if not provided
                // Primary key exist. Lock transaction and try modifying existing. If nothing modified, call add().
                // clone obj before this async call. If caller modifies obj the line after put(), the IDB spec requires that it should not affect operation.
                obj = deepClone(obj);
                return this._trans(READWRITE, function () {
                    return _this.where(":id").equals(effectiveKey).modify(function () {
                        // Replace extisting value with our object
                        // CRUD event firing handled in Collection.modify()
                        this.value = obj;
                    }).then(function (count) { return count === 0 ? _this.add(obj, key) : effectiveKey; });
                }, "locked"); // Lock needed because operation is splitted into modify() and add().
            }
            else {
                // Use the standard IDB put() method.
                return this._idbstore(READWRITE, function (resolve, reject, idbstore) {
                    var req = key !== undefined ? idbstore.put(obj, key) : idbstore.put(obj);
                    req.onerror = eventRejectHandler(reject);
                    req.onsuccess = wrap(function (ev) {
                        var keyPath = idbstore.keyPath;
                        if (keyPath)
                            setByKeyPath(obj, keyPath, ev.target.result);
                        resolve(req.result);
                    });
                });
            }
        },
        'delete': function (key) {
            /// <param name="key">Primary key of the object to delete</param>
            if (this.hook.deleting.subscribers.length) {
                // People listens to when("deleting") event. Must implement delete using Collection.delete() that will
                // call the CRUD event. Only Collection.delete() will know whether an object was actually deleted.
                return this.where(":id").equals(key).delete();
            }
            else {
                // No one listens. Use standard IDB delete() method.
                return this._idbstore(READWRITE, function (resolve, reject, idbstore) {
                    var req = idbstore.delete(key);
                    req.onerror = eventRejectHandler(reject);
                    req.onsuccess = wrap(function () {
                        resolve(req.result);
                    });
                });
            }
        },
        clear: function () {
            if (this.hook.deleting.subscribers.length) {
                // People listens to when("deleting") event. Must implement delete using Collection.delete() that will
                // call the CRUD event. Only Collection.delete() will knows which objects that are actually deleted.
                return this.toCollection().delete();
            }
            else {
                return this._idbstore(READWRITE, function (resolve, reject, idbstore) {
                    var req = idbstore.clear();
                    req.onerror = eventRejectHandler(reject);
                    req.onsuccess = wrap(function () {
                        resolve(req.result);
                    });
                });
            }
        },
        update: function (keyOrObject, modifications) {
            if (typeof modifications !== 'object' || isArray(modifications))
                throw new exceptions.InvalidArgument("Modifications must be an object.");
            if (typeof keyOrObject === 'object' && !isArray(keyOrObject)) {
                // object to modify. Also modify given object with the modifications:
                keys(modifications).forEach(function (keyPath) {
                    setByKeyPath(keyOrObject, keyPath, modifications[keyPath]);
                });
                var key = getByKeyPath(keyOrObject, this.schema.primKey.keyPath);
                if (key === undefined)
                    return rejection(new exceptions.InvalidArgument("Given object does not contain its primary key"));
                return this.where(":id").equals(key).modify(modifications);
            }
            else {
                // key to modify
                return this.where(":id").equals(keyOrObject).modify(modifications);
            }
        }
    });
    //
    //
    //
    // Transaction Class
    //
    //
    //
    function Transaction(mode, storeNames, dbschema, parent) {
        var _this = this;
        /// <summary>
        ///    Transaction class. Represents a database transaction. All operations on db goes through a Transaction.
        /// </summary>
        /// <param name="mode" type="String">Any of "readwrite" or "readonly"</param>
        /// <param name="storeNames" type="Array">Array of table names to operate on</param>
        this.db = db;
        this.mode = mode;
        this.storeNames = storeNames;
        this.idbtrans = null;
        this.on = Events(this, "complete", "error", "abort");
        this.parent = parent || null;
        this.active = true;
        this._reculock = 0;
        this._blockedFuncs = [];
        this._resolve = null;
        this._reject = null;
        this._waitingFor = null;
        this._waitingQueue = null;
        this._spinCount = 0; // Just for debugging waitFor()
        this._completion = new Promise(function (resolve, reject) {
            _this._resolve = resolve;
            _this._reject = reject;
        });
        this._completion.then(function () {
            _this.active = false;
            _this.on.complete.fire();
        }, function (e) {
            var wasActive = _this.active;
            _this.active = false;
            _this.on.error.fire(e);
            _this.parent ?
                _this.parent._reject(e) :
                wasActive && _this.idbtrans && _this.idbtrans.abort();
            return rejection(e); // Indicate we actually DO NOT catch this error.
        });
    }
    props(Transaction.prototype, {
        //
        // Transaction Protected Methods (not required by API users, but needed internally and eventually by dexie extensions)
        //
        _lock: function () {
            assert(!PSD.global); // Locking and unlocking reuires to be within a PSD scope.
            // Temporary set all requests into a pending queue if they are called before database is ready.
            ++this._reculock; // Recursive read/write lock pattern using PSD (Promise Specific Data) instead of TLS (Thread Local Storage)
            if (this._reculock === 1 && !PSD.global)
                PSD.lockOwnerFor = this;
            return this;
        },
        _unlock: function () {
            assert(!PSD.global); // Locking and unlocking reuires to be within a PSD scope.
            if (--this._reculock === 0) {
                if (!PSD.global)
                    PSD.lockOwnerFor = null;
                while (this._blockedFuncs.length > 0 && !this._locked()) {
                    var fnAndPSD = this._blockedFuncs.shift();
                    try {
                        usePSD(fnAndPSD[1], fnAndPSD[0]);
                    }
                    catch (e) { }
                }
            }
            return this;
        },
        _locked: function () {
            // Checks if any write-lock is applied on this transaction.
            // To simplify the Dexie API for extension implementations, we support recursive locks.
            // This is accomplished by using "Promise Specific Data" (PSD).
            // PSD data is bound to a Promise and any child Promise emitted through then() or resolve( new Promise() ).
            // PSD is local to code executing on top of the call stacks of any of any code executed by Promise():
            //         * callback given to the Promise() constructor  (function (resolve, reject){...})
            //         * callbacks given to then()/catch()/finally() methods (function (value){...})
            // If creating a new independant Promise instance from within a Promise call stack, the new Promise will derive the PSD from the call stack of the parent Promise.
            // Derivation is done so that the inner PSD __proto__ points to the outer PSD.
            // PSD.lockOwnerFor will point to current transaction object if the currently executing PSD scope owns the lock.
            return this._reculock && PSD.lockOwnerFor !== this;
        },
        create: function (idbtrans) {
            var _this = this;
            if (!this.mode)
                return this;
            assert(!this.idbtrans);
            if (!idbtrans && !idbdb) {
                switch (dbOpenError && dbOpenError.name) {
                    case "DatabaseClosedError":
                        // Errors where it is no difference whether it was caused by the user operation or an earlier call to db.open()
                        throw new exceptions.DatabaseClosed(dbOpenError);
                    case "MissingAPIError":
                        // Errors where it is no difference whether it was caused by the user operation or an earlier call to db.open()
                        throw new exceptions.MissingAPI(dbOpenError.message, dbOpenError);
                    default:
                        // Make it clear that the user operation was not what caused the error - the error had occurred earlier on db.open()!
                        throw new exceptions.OpenFailed(dbOpenError);
                }
            }
            if (!this.active)
                throw new exceptions.TransactionInactive();
            assert(this._completion._state === null);
            idbtrans = this.idbtrans = idbtrans || idbdb.transaction(safariMultiStoreFix(this.storeNames), this.mode);
            idbtrans.onerror = wrap(function (ev) {
                preventDefault(ev); // Prohibit default bubbling to window.error
                _this._reject(idbtrans.error);
            });
            idbtrans.onabort = wrap(function (ev) {
                preventDefault(ev);
                _this.active && _this._reject(new exceptions.Abort(idbtrans.error));
                _this.active = false;
                _this.on("abort").fire(ev);
            });
            idbtrans.oncomplete = wrap(function () {
                _this.active = false;
                _this._resolve();
            });
            return this;
        },
        _promise: function (mode, fn, bWriteLock) {
            var _this = this;
            if (mode === READWRITE && this.mode !== READWRITE)
                return rejection(new exceptions.ReadOnly("Transaction is readonly"));
            if (!this.active)
                return rejection(new exceptions.TransactionInactive());
            if (this._locked()) {
                return new Promise(function (resolve, reject) {
                    _this._blockedFuncs.push([function () {
                            _this._promise(mode, fn, bWriteLock).then(resolve, reject);
                        }, PSD]);
                });
            }
            else if (bWriteLock) {
                return newScope(function () {
                    var p = new Promise(function (resolve, reject) {
                        _this._lock();
                        var rv = fn(resolve, reject, _this);
                        if (rv && rv.then)
                            rv.then(resolve, reject);
                    });
                    p.finally(function () { return _this._unlock(); });
                    p._lib = true;
                    return p;
                });
            }
            else {
                var p = new Promise(function (resolve, reject) {
                    var rv = fn(resolve, reject, _this);
                    if (rv && rv.then)
                        rv.then(resolve, reject);
                });
                p._lib = true;
                return p;
            }
        },
        _root: function () {
            return this.parent ? this.parent._root() : this;
        },
        waitFor: function (promise) {
            // Always operate on the root transaction (in case this is a sub stransaction)
            var root = this._root();
            // For stability reasons, convert parameter to promise no matter what type is passed to waitFor().
            // (We must be able to call .then() on it.)
            promise = Promise.resolve(promise);
            if (root._waitingFor) {
                // Already called waitFor(). Wait for both to complete.
                root._waitingFor = root._waitingFor.then(function () { return promise; });
            }
            else {
                // We're not in waiting state. Start waiting state.
                root._waitingFor = promise;
                root._waitingQueue = [];
                // Start interacting with indexedDB until promise completes:
                var store = root.idbtrans.objectStore(root.storeNames[0]);
                (function spin() {
                    ++root._spinCount; // For debugging only
                    while (root._waitingQueue.length)
                        (root._waitingQueue.shift())();
                    if (root._waitingFor)
                        store.get(-Infinity).onsuccess = spin;
                }());
            }
            var currentWaitPromise = root._waitingFor;
            return new Promise(function (resolve, reject) {
                promise.then(function (res) { return root._waitingQueue.push(wrap(resolve.bind(null, res))); }, function (err) { return root._waitingQueue.push(wrap(reject.bind(null, err))); }).finally(function () {
                    if (root._waitingFor === currentWaitPromise) {
                        // No one added a wait after us. Safe to stop the spinning.
                        root._waitingFor = null;
                    }
                });
            });
        },
        //
        // Transaction Public Properties and Methods
        //
        abort: function () {
            this.active && this._reject(new exceptions.Abort());
            this.active = false;
        },
        tables: {
            get: deprecated("Transaction.tables", function () { return allTables; })
        },
        table: function (name) {
            var table = db.table(name); // Don't check that table is part of transaction. It must fail lazily!
            return new Table(name, table.schema, this);
        }
    });
    //
    //
    //
    // WhereClause
    //
    //
    //
    function WhereClause(table, index, orCollection) {
        /// <param name="table" type="Table"></param>
        /// <param name="index" type="String" optional="true"></param>
        /// <param name="orCollection" type="Collection" optional="true"></param>
        this._ctx = {
            table: table,
            index: index === ":id" ? null : index,
            or: orCollection
        };
    }
    props(WhereClause.prototype, function () {
        // WhereClause private methods
        function fail(collectionOrWhereClause, err, T) {
            var collection = collectionOrWhereClause instanceof WhereClause ?
                new Collection(collectionOrWhereClause) :
                collectionOrWhereClause;
            collection._ctx.error = T ? new T(err) : new TypeError(err);
            return collection;
        }
        function emptyCollection(whereClause) {
            return new Collection(whereClause, function () { return IDBKeyRange.only(""); }).limit(0);
        }
        function upperFactory(dir) {
            return dir === "next" ? function (s) { return s.toUpperCase(); } : function (s) { return s.toLowerCase(); };
        }
        function lowerFactory(dir) {
            return dir === "next" ? function (s) { return s.toLowerCase(); } : function (s) { return s.toUpperCase(); };
        }
        function nextCasing(key, lowerKey, upperNeedle, lowerNeedle, cmp, dir) {
            var length = Math.min(key.length, lowerNeedle.length);
            var llp = -1;
            for (var i = 0; i < length; ++i) {
                var lwrKeyChar = lowerKey[i];
                if (lwrKeyChar !== lowerNeedle[i]) {
                    if (cmp(key[i], upperNeedle[i]) < 0)
                        return key.substr(0, i) + upperNeedle[i] + upperNeedle.substr(i + 1);
                    if (cmp(key[i], lowerNeedle[i]) < 0)
                        return key.substr(0, i) + lowerNeedle[i] + upperNeedle.substr(i + 1);
                    if (llp >= 0)
                        return key.substr(0, llp) + lowerKey[llp] + upperNeedle.substr(llp + 1);
                    return null;
                }
                if (cmp(key[i], lwrKeyChar) < 0)
                    llp = i;
            }
            if (length < lowerNeedle.length && dir === "next")
                return key + upperNeedle.substr(key.length);
            if (length < key.length && dir === "prev")
                return key.substr(0, upperNeedle.length);
            return (llp < 0 ? null : key.substr(0, llp) + lowerNeedle[llp] + upperNeedle.substr(llp + 1));
        }
        function addIgnoreCaseAlgorithm(whereClause, match, needles, suffix) {
            /// <param name="needles" type="Array" elementType="String"></param>
            var upper, lower, compare, upperNeedles, lowerNeedles, direction, nextKeySuffix, needlesLen = needles.length;
            if (!needles.every(function (s) { return typeof s === 'string'; })) {
                return fail(whereClause, STRING_EXPECTED);
            }
            function initDirection(dir) {
                upper = upperFactory(dir);
                lower = lowerFactory(dir);
                compare = (dir === "next" ? simpleCompare : simpleCompareReverse);
                var needleBounds = needles.map(function (needle) {
                    return { lower: lower(needle), upper: upper(needle) };
                }).sort(function (a, b) {
                    return compare(a.lower, b.lower);
                });
                upperNeedles = needleBounds.map(function (nb) { return nb.upper; });
                lowerNeedles = needleBounds.map(function (nb) { return nb.lower; });
                direction = dir;
                nextKeySuffix = (dir === "next" ? "" : suffix);
            }
            initDirection("next");
            var c = new Collection(whereClause, function () {
                return IDBKeyRange.bound(upperNeedles[0], lowerNeedles[needlesLen - 1] + suffix);
            });
            c._ondirectionchange = function (direction) {
                // This event onlys occur before filter is called the first time.
                initDirection(direction);
            };
            var firstPossibleNeedle = 0;
            c._addAlgorithm(function (cursor, advance, resolve) {
                /// <param name="cursor" type="IDBCursor"></param>
                /// <param name="advance" type="Function"></param>
                /// <param name="resolve" type="Function"></param>
                var key = cursor.key;
                if (typeof key !== 'string')
                    return false;
                var lowerKey = lower(key);
                if (match(lowerKey, lowerNeedles, firstPossibleNeedle)) {
                    return true;
                }
                else {
                    var lowestPossibleCasing = null;
                    for (var i = firstPossibleNeedle; i < needlesLen; ++i) {
                        var casing = nextCasing(key, lowerKey, upperNeedles[i], lowerNeedles[i], compare, direction);
                        if (casing === null && lowestPossibleCasing === null)
                            firstPossibleNeedle = i + 1;
                        else if (lowestPossibleCasing === null || compare(lowestPossibleCasing, casing) > 0) {
                            lowestPossibleCasing = casing;
                        }
                    }
                    if (lowestPossibleCasing !== null) {
                        advance(function () { cursor.continue(lowestPossibleCasing + nextKeySuffix); });
                    }
                    else {
                        advance(resolve);
                    }
                    return false;
                }
            });
            return c;
        }
        //
        // WhereClause public methods
        //
        return {
            between: function (lower, upper, includeLower, includeUpper) {
                /// <summary>
                ///     Filter out records whose where-field lays between given lower and upper values. Applies to Strings, Numbers and Dates.
                /// </summary>
                /// <param name="lower"></param>
                /// <param name="upper"></param>
                /// <param name="includeLower" optional="true">Whether items that equals lower should be included. Default true.</param>
                /// <param name="includeUpper" optional="true">Whether items that equals upper should be included. Default false.</param>
                /// <returns type="Collection"></returns>
                includeLower = includeLower !== false; // Default to true
                includeUpper = includeUpper === true; // Default to false
                try {
                    if ((cmp(lower, upper) > 0) ||
                        (cmp(lower, upper) === 0 && (includeLower || includeUpper) && !(includeLower && includeUpper)))
                        return emptyCollection(this); // Workaround for idiotic W3C Specification that DataError must be thrown if lower > upper. The natural result would be to return an empty collection.
                    return new Collection(this, function () { return IDBKeyRange.bound(lower, upper, !includeLower, !includeUpper); });
                }
                catch (e) {
                    return fail(this, INVALID_KEY_ARGUMENT);
                }
            },
            equals: function (value) {
                return new Collection(this, function () { return IDBKeyRange.only(value); });
            },
            above: function (value) {
                return new Collection(this, function () { return IDBKeyRange.lowerBound(value, true); });
            },
            aboveOrEqual: function (value) {
                return new Collection(this, function () { return IDBKeyRange.lowerBound(value); });
            },
            below: function (value) {
                return new Collection(this, function () { return IDBKeyRange.upperBound(value, true); });
            },
            belowOrEqual: function (value) {
                return new Collection(this, function () { return IDBKeyRange.upperBound(value); });
            },
            startsWith: function (str) {
                /// <param name="str" type="String"></param>
                if (typeof str !== 'string')
                    return fail(this, STRING_EXPECTED);
                return this.between(str, str + maxString, true, true);
            },
            startsWithIgnoreCase: function (str) {
                /// <param name="str" type="String"></param>
                if (str === "")
                    return this.startsWith(str);
                return addIgnoreCaseAlgorithm(this, function (x, a) { return x.indexOf(a[0]) === 0; }, [str], maxString);
            },
            equalsIgnoreCase: function (str) {
                /// <param name="str" type="String"></param>
                return addIgnoreCaseAlgorithm(this, function (x, a) { return x === a[0]; }, [str], "");
            },
            anyOfIgnoreCase: function () {
                var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);
                if (set.length === 0)
                    return emptyCollection(this);
                return addIgnoreCaseAlgorithm(this, function (x, a) { return a.indexOf(x) !== -1; }, set, "");
            },
            startsWithAnyOfIgnoreCase: function () {
                var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);
                if (set.length === 0)
                    return emptyCollection(this);
                return addIgnoreCaseAlgorithm(this, function (x, a) {
                    return a.some(function (n) {
                        return x.indexOf(n) === 0;
                    });
                }, set, maxString);
            },
            anyOf: function () {
                var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);
                var compare = ascending;
                try {
                    set.sort(compare);
                }
                catch (e) {
                    return fail(this, INVALID_KEY_ARGUMENT);
                }
                if (set.length === 0)
                    return emptyCollection(this);
                var c = new Collection(this, function () { return IDBKeyRange.bound(set[0], set[set.length - 1]); });
                c._ondirectionchange = function (direction) {
                    compare = (direction === "next" ? ascending : descending);
                    set.sort(compare);
                };
                var i = 0;
                c._addAlgorithm(function (cursor, advance, resolve) {
                    var key = cursor.key;
                    while (compare(key, set[i]) > 0) {
                        // The cursor has passed beyond this key. Check next.
                        ++i;
                        if (i === set.length) {
                            // There is no next. Stop searching.
                            advance(resolve);
                            return false;
                        }
                    }
                    if (compare(key, set[i]) === 0) {
                        // The current cursor value should be included and we should continue a single step in case next item has the same key or possibly our next key in set.
                        return true;
                    }
                    else {
                        // cursor.key not yet at set[i]. Forward cursor to the next key to hunt for.
                        advance(function () { cursor.continue(set[i]); });
                        return false;
                    }
                });
                return c;
            },
            notEqual: function (value) {
                return this.inAnyRange([[minKey, value], [value, maxKey]], { includeLowers: false, includeUppers: false });
            },
            noneOf: function () {
                var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);
                if (set.length === 0)
                    return new Collection(this); // Return entire collection.
                try {
                    set.sort(ascending);
                }
                catch (e) {
                    return fail(this, INVALID_KEY_ARGUMENT);
                }
                // Transform ["a","b","c"] to a set of ranges for between/above/below: [[minKey,"a"], ["a","b"], ["b","c"], ["c",maxKey]]
                var ranges = set.reduce(function (res, val) { return res ? res.concat([[res[res.length - 1][1], val]]) : [[minKey, val]]; }, null);
                ranges.push([set[set.length - 1], maxKey]);
                return this.inAnyRange(ranges, { includeLowers: false, includeUppers: false });
            },
            /** Filter out values withing given set of ranges.
            * Example, give children and elders a rebate of 50%:
            *
            *   db.friends.where('age').inAnyRange([[0,18],[65,Infinity]]).modify({Rebate: 1/2});
            *
            * @param {(string|number|Date|Array)[][]} ranges
            * @param {{includeLowers: boolean, includeUppers: boolean}} options
            */
            inAnyRange: function (ranges, options) {
                if (ranges.length === 0)
                    return emptyCollection(this);
                if (!ranges.every(function (range) { return range[0] !== undefined && range[1] !== undefined && ascending(range[0], range[1]) <= 0; })) {
                    return fail(this, "First argument to inAnyRange() must be an Array of two-value Arrays [lower,upper] where upper must not be lower than lower", exceptions.InvalidArgument);
                }
                var includeLowers = !options || options.includeLowers !== false; // Default to true
                var includeUppers = options && options.includeUppers === true; // Default to false
                function addRange(ranges, newRange) {
                    for (var i = 0, l = ranges.length; i < l; ++i) {
                        var range = ranges[i];
                        if (cmp(newRange[0], range[1]) < 0 && cmp(newRange[1], range[0]) > 0) {
                            range[0] = min(range[0], newRange[0]);
                            range[1] = max(range[1], newRange[1]);
                            break;
                        }
                    }
                    if (i === l)
                        ranges.push(newRange);
                    return ranges;
                }
                var sortDirection = ascending;
                function rangeSorter(a, b) { return sortDirection(a[0], b[0]); }
                // Join overlapping ranges
                var set;
                try {
                    set = ranges.reduce(addRange, []);
                    set.sort(rangeSorter);
                }
                catch (ex) {
                    return fail(this, INVALID_KEY_ARGUMENT);
                }
                var i = 0;
                var keyIsBeyondCurrentEntry = includeUppers ?
                    function (key) { return ascending(key, set[i][1]) > 0; } :
                    function (key) { return ascending(key, set[i][1]) >= 0; };
                var keyIsBeforeCurrentEntry = includeLowers ?
                    function (key) { return descending(key, set[i][0]) > 0; } :
                    function (key) { return descending(key, set[i][0]) >= 0; };
                function keyWithinCurrentRange(key) {
                    return !keyIsBeyondCurrentEntry(key) && !keyIsBeforeCurrentEntry(key);
                }
                var checkKey = keyIsBeyondCurrentEntry;
                var c = new Collection(this, function () {
                    return IDBKeyRange.bound(set[0][0], set[set.length - 1][1], !includeLowers, !includeUppers);
                });
                c._ondirectionchange = function (direction) {
                    if (direction === "next") {
                        checkKey = keyIsBeyondCurrentEntry;
                        sortDirection = ascending;
                    }
                    else {
                        checkKey = keyIsBeforeCurrentEntry;
                        sortDirection = descending;
                    }
                    set.sort(rangeSorter);
                };
                c._addAlgorithm(function (cursor, advance, resolve) {
                    var key = cursor.key;
                    while (checkKey(key)) {
                        // The cursor has passed beyond this key. Check next.
                        ++i;
                        if (i === set.length) {
                            // There is no next. Stop searching.
                            advance(resolve);
                            return false;
                        }
                    }
                    if (keyWithinCurrentRange(key)) {
                        // The current cursor value should be included and we should continue a single step in case next item has the same key or possibly our next key in set.
                        return true;
                    }
                    else if (cmp(key, set[i][1]) === 0 || cmp(key, set[i][0]) === 0) {
                        // includeUpper or includeLower is false so keyWithinCurrentRange() returns false even though we are at range border.
                        // Continue to next key but don't include this one.
                        return false;
                    }
                    else {
                        // cursor.key not yet at set[i]. Forward cursor to the next key to hunt for.
                        advance(function () {
                            if (sortDirection === ascending)
                                cursor.continue(set[i][0]);
                            else
                                cursor.continue(set[i][1]);
                        });
                        return false;
                    }
                });
                return c;
            },
            startsWithAnyOf: function () {
                var set = getArrayOf.apply(NO_CHAR_ARRAY, arguments);
                if (!set.every(function (s) { return typeof s === 'string'; })) {
                    return fail(this, "startsWithAnyOf() only works with strings");
                }
                if (set.length === 0)
                    return emptyCollection(this);
                return this.inAnyRange(set.map(function (str) {
                    return [str, str + maxString];
                }));
            }
        };
    });
    //
    //
    //
    // Collection Class
    //
    //
    //
    function Collection(whereClause, keyRangeGenerator) {
        /// <summary>
        ///
        /// </summary>
        /// <param name="whereClause" type="WhereClause">Where clause instance</param>
        /// <param name="keyRangeGenerator" value="function(){ return IDBKeyRange.bound(0,1);}" optional="true"></param>
        var keyRange = null, error = null;
        if (keyRangeGenerator)
            try {
                keyRange = keyRangeGenerator();
            }
            catch (ex) {
                error = ex;
            }
        var whereCtx = whereClause._ctx, table = whereCtx.table;
        this._ctx = {
            table: table,
            index: whereCtx.index,
            isPrimKey: (!whereCtx.index || (table.schema.primKey.keyPath && whereCtx.index === table.schema.primKey.name)),
            range: keyRange,
            keysOnly: false,
            dir: "next",
            unique: "",
            algorithm: null,
            filter: null,
            replayFilter: null,
            justLimit: true,
            isMatch: null,
            offset: 0,
            limit: Infinity,
            error: error,
            or: whereCtx.or,
            valueMapper: table.hook.reading.fire
        };
    }
    function isPlainKeyRange(ctx, ignoreLimitFilter) {
        return !(ctx.filter || ctx.algorithm || ctx.or) &&
            (ignoreLimitFilter ? ctx.justLimit : !ctx.replayFilter);
    }
    props(Collection.prototype, function () {
        //
        // Collection Private Functions
        //
        function addFilter(ctx, fn) {
            ctx.filter = combine(ctx.filter, fn);
        }
        function addReplayFilter(ctx, factory, isLimitFilter) {
            var curr = ctx.replayFilter;
            ctx.replayFilter = curr ? function () { return combine(curr(), factory()); } : factory;
            ctx.justLimit = isLimitFilter && !curr;
        }
        function addMatchFilter(ctx, fn) {
            ctx.isMatch = combine(ctx.isMatch, fn);
        }
        /** @param ctx {
         *      isPrimKey: boolean,
         *      table: Table,
         *      index: string
         * }
         * @param store IDBObjectStore
         **/
        function getIndexOrStore(ctx, store) {
            if (ctx.isPrimKey)
                return store;
            var indexSpec = ctx.table.schema.idxByName[ctx.index];
            if (!indexSpec)
                throw new exceptions.Schema("KeyPath " + ctx.index + " on object store " + store.name + " is not indexed");
            return store.index(indexSpec.name);
        }
        /** @param ctx {
         *      isPrimKey: boolean,
         *      table: Table,
         *      index: string,
         *      keysOnly: boolean,
         *      range?: IDBKeyRange,
         *      dir: "next" | "prev"
         * }
         */
        function openCursor(ctx, store) {
            var idxOrStore = getIndexOrStore(ctx, store);
            return ctx.keysOnly && 'openKeyCursor' in idxOrStore ?
                idxOrStore.openKeyCursor(ctx.range || null, ctx.dir + ctx.unique) :
                idxOrStore.openCursor(ctx.range || null, ctx.dir + ctx.unique);
        }
        function iter(ctx, fn, resolve, reject, idbstore) {
            var filter = ctx.replayFilter ? combine(ctx.filter, ctx.replayFilter()) : ctx.filter;
            if (!ctx.or) {
                iterate(openCursor(ctx, idbstore), combine(ctx.algorithm, filter), fn, resolve, reject, !ctx.keysOnly && ctx.valueMapper);
            }
            else
                (function () {
                    var set = {};
                    var resolved = 0;
                    function resolveboth() {
                        if (++resolved === 2)
                            resolve(); // Seems like we just support or btwn max 2 expressions, but there are no limit because we do recursion.
                    }
                    function union(item, cursor, advance) {
                        if (!filter || filter(cursor, advance, resolveboth, reject)) {
                            var primaryKey = cursor.primaryKey;
                            var key = '' + primaryKey;
                            if (key === '[object ArrayBuffer]')
                                key = '' + new Uint8Array(primaryKey);
                            if (!hasOwn(set, key)) {
                                set[key] = true;
                                fn(item, cursor, advance);
                            }
                        }
                    }
                    ctx.or._iterate(union, resolveboth, reject, idbstore);
                    iterate(openCursor(ctx, idbstore), ctx.algorithm, union, resolveboth, reject, !ctx.keysOnly && ctx.valueMapper);
                })();
        }
        return {
            //
            // Collection Protected Functions
            //
            _read: function (fn, cb) {
                var ctx = this._ctx;
                return ctx.error ?
                    ctx.table._trans(null, rejection.bind(null, ctx.error)) :
                    ctx.table._idbstore(READONLY, fn).then(cb);
            },
            _write: function (fn) {
                var ctx = this._ctx;
                return ctx.error ?
                    ctx.table._trans(null, rejection.bind(null, ctx.error)) :
                    ctx.table._idbstore(READWRITE, fn, "locked"); // When doing write operations on collections, always lock the operation so that upcoming operations gets queued.
            },
            _addAlgorithm: function (fn) {
                var ctx = this._ctx;
                ctx.algorithm = combine(ctx.algorithm, fn);
            },
            _iterate: function (fn, resolve, reject, idbstore) {
                return iter(this._ctx, fn, resolve, reject, idbstore);
            },
            clone: function (props$$1) {
                var rv = Object.create(this.constructor.prototype), ctx = Object.create(this._ctx);
                if (props$$1)
                    extend(ctx, props$$1);
                rv._ctx = ctx;
                return rv;
            },
            raw: function () {
                this._ctx.valueMapper = null;
                return this;
            },
            //
            // Collection Public methods
            //
            each: function (fn) {
                var ctx = this._ctx;
                return this._read(function (resolve, reject, idbstore) {
                    iter(ctx, fn, resolve, reject, idbstore);
                });
            },
            count: function (cb) {
                var ctx = this._ctx;
                if (isPlainKeyRange(ctx, true)) {
                    // This is a plain key range. We can use the count() method if the index.
                    return this._read(function (resolve, reject, idbstore) {
                        var idx = getIndexOrStore(ctx, idbstore);
                        var req = (ctx.range ? idx.count(ctx.range) : idx.count());
                        req.onerror = eventRejectHandler(reject);
                        req.onsuccess = function (e) {
                            resolve(Math.min(e.target.result, ctx.limit));
                        };
                    }, cb);
                }
                else {
                    // Algorithms, filters or expressions are applied. Need to count manually.
                    var count = 0;
                    return this._read(function (resolve, reject, idbstore) {
                        iter(ctx, function () { ++count; return false; }, function () { resolve(count); }, reject, idbstore);
                    }, cb);
                }
            },
            sortBy: function (keyPath, cb) {
                /// <param name="keyPath" type="String"></param>
                var parts = keyPath.split('.').reverse(), lastPart = parts[0], lastIndex = parts.length - 1;
                function getval(obj, i) {
                    if (i)
                        return getval(obj[parts[i]], i - 1);
                    return obj[lastPart];
                }
                var order = this._ctx.dir === "next" ? 1 : -1;
                function sorter(a, b) {
                    var aVal = getval(a, lastIndex), bVal = getval(b, lastIndex);
                    return aVal < bVal ? -order : aVal > bVal ? order : 0;
                }
                return this.toArray(function (a) {
                    return a.sort(sorter);
                }).then(cb);
            },
            toArray: function (cb) {
                var ctx = this._ctx;
                return this._read(function (resolve, reject, idbstore) {
                    if (hasGetAll && ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {
                        // Special optimation if we could use IDBObjectStore.getAll() or
                        // IDBKeyRange.getAll():
                        var readingHook = ctx.table.hook.reading.fire;
                        var idxOrStore = getIndexOrStore(ctx, idbstore);
                        var req = ctx.limit < Infinity ?
                            idxOrStore.getAll(ctx.range, ctx.limit) :
                            idxOrStore.getAll(ctx.range);
                        req.onerror = eventRejectHandler(reject);
                        req.onsuccess = readingHook === mirror ?
                            eventSuccessHandler(resolve) :
                            eventSuccessHandler(function (res) {
                                try {
                                    resolve(res.map(readingHook));
                                }
                                catch (e) {
                                    reject(e);
                                }
                            });
                    }
                    else {
                        // Getting array through a cursor.
                        var a = [];
                        iter(ctx, function (item) { a.push(item); }, function arrayComplete() {
                            resolve(a);
                        }, reject, idbstore);
                    }
                }, cb);
            },
            offset: function (offset) {
                var ctx = this._ctx;
                if (offset <= 0)
                    return this;
                ctx.offset += offset; // For count()
                if (isPlainKeyRange(ctx)) {
                    addReplayFilter(ctx, function () {
                        var offsetLeft = offset;
                        return function (cursor, advance) {
                            if (offsetLeft === 0)
                                return true;
                            if (offsetLeft === 1) {
                                --offsetLeft;
                                return false;
                            }
                            advance(function () {
                                cursor.advance(offsetLeft);
                                offsetLeft = 0;
                            });
                            return false;
                        };
                    });
                }
                else {
                    addReplayFilter(ctx, function () {
                        var offsetLeft = offset;
                        return function () { return (--offsetLeft < 0); };
                    });
                }
                return this;
            },
            limit: function (numRows) {
                this._ctx.limit = Math.min(this._ctx.limit, numRows); // For count()
                addReplayFilter(this._ctx, function () {
                    var rowsLeft = numRows;
                    return function (cursor, advance, resolve) {
                        if (--rowsLeft <= 0)
                            advance(resolve); // Stop after this item has been included
                        return rowsLeft >= 0; // If numRows is already below 0, return false because then 0 was passed to numRows initially. Otherwise we wouldnt come here.
                    };
                }, true);
                return this;
            },
            until: function (filterFunction, bIncludeStopEntry) {
                addFilter(this._ctx, function (cursor, advance, resolve) {
                    if (filterFunction(cursor.value)) {
                        advance(resolve);
                        return bIncludeStopEntry;
                    }
                    else {
                        return true;
                    }
                });
                return this;
            },
            first: function (cb) {
                return this.limit(1).toArray(function (a) { return a[0]; }).then(cb);
            },
            last: function (cb) {
                return this.reverse().first(cb);
            },
            filter: function (filterFunction) {
                /// <param name="jsFunctionFilter" type="Function">function(val){return true/false}</param>
                addFilter(this._ctx, function (cursor) {
                    return filterFunction(cursor.value);
                });
                // match filters not used in Dexie.js but can be used by 3rd part libraries to test a
                // collection for a match without querying DB. Used by Dexie.Observable.
                addMatchFilter(this._ctx, filterFunction);
                return this;
            },
            and: function (filterFunction) {
                return this.filter(filterFunction);
            },
            or: function (indexName) {
                return new WhereClause(this._ctx.table, indexName, this);
            },
            reverse: function () {
                this._ctx.dir = (this._ctx.dir === "prev" ? "next" : "prev");
                if (this._ondirectionchange)
                    this._ondirectionchange(this._ctx.dir);
                return this;
            },
            desc: function () {
                return this.reverse();
            },
            eachKey: function (cb) {
                var ctx = this._ctx;
                ctx.keysOnly = !ctx.isMatch;
                return this.each(function (val, cursor) { cb(cursor.key, cursor); });
            },
            eachUniqueKey: function (cb) {
                this._ctx.unique = "unique";
                return this.eachKey(cb);
            },
            eachPrimaryKey: function (cb) {
                var ctx = this._ctx;
                ctx.keysOnly = !ctx.isMatch;
                return this.each(function (val, cursor) { cb(cursor.primaryKey, cursor); });
            },
            keys: function (cb) {
                var ctx = this._ctx;
                ctx.keysOnly = !ctx.isMatch;
                var a = [];
                return this.each(function (item, cursor) {
                    a.push(cursor.key);
                }).then(function () {
                    return a;
                }).then(cb);
            },
            primaryKeys: function (cb) {
                var ctx = this._ctx;
                if (hasGetAll && ctx.dir === 'next' && isPlainKeyRange(ctx, true) && ctx.limit > 0) {
                    // Special optimation if we could use IDBObjectStore.getAllKeys() or
                    // IDBKeyRange.getAllKeys():
                    return this._read(function (resolve, reject, idbstore) {
                        var idxOrStore = getIndexOrStore(ctx, idbstore);
                        var req = ctx.limit < Infinity ?
                            idxOrStore.getAllKeys(ctx.range, ctx.limit) :
                            idxOrStore.getAllKeys(ctx.range);
                        req.onerror = eventRejectHandler(reject);
                        req.onsuccess = eventSuccessHandler(resolve);
                    }).then(cb);
                }
                ctx.keysOnly = !ctx.isMatch;
                var a = [];
                return this.each(function (item, cursor) {
                    a.push(cursor.primaryKey);
                }).then(function () {
                    return a;
                }).then(cb);
            },
            uniqueKeys: function (cb) {
                this._ctx.unique = "unique";
                return this.keys(cb);
            },
            firstKey: function (cb) {
                return this.limit(1).keys(function (a) { return a[0]; }).then(cb);
            },
            lastKey: function (cb) {
                return this.reverse().firstKey(cb);
            },
            distinct: function () {
                var ctx = this._ctx, idx = ctx.index && ctx.table.schema.idxByName[ctx.index];
                if (!idx || !idx.multi)
                    return this; // distinct() only makes differencies on multiEntry indexes.
                var set = {};
                addFilter(this._ctx, function (cursor) {
                    var strKey = cursor.primaryKey.toString(); // Converts any Date to String, String to String, Number to String and Array to comma-separated string
                    var found = hasOwn(set, strKey);
                    set[strKey] = true;
                    return !found;
                });
                return this;
            },
            //
            // Methods that mutate storage
            //
            modify: function (changes) {
                var self = this, ctx = this._ctx, hook = ctx.table.hook, updatingHook = hook.updating.fire, deletingHook = hook.deleting.fire;
                return this._write(function (resolve, reject, idbstore, trans) {
                    var modifyer;
                    if (typeof changes === 'function') {
                        // Changes is a function that may update, add or delete propterties or even require a deletion the object itself (delete this.item)
                        if (updatingHook === nop && deletingHook === nop) {
                            // Noone cares about what is being changed. Just let the modifier function be the given argument as is.
                            modifyer = changes;
                        }
                        else {
                            // People want to know exactly what is being modified or deleted.
                            // Let modifyer be a proxy function that finds out what changes the caller is actually doing
                            // and call the hooks accordingly!
                            modifyer = function (item) {
                                var origItem = deepClone(item); // Clone the item first so we can compare laters.
                                if (changes.call(this, item, this) === false)
                                    return false; // Call the real modifyer function (If it returns false explicitely, it means it dont want to modify anyting on this object)
                                if (!hasOwn(this, "value")) {
                                    // The real modifyer function requests a deletion of the object. Inform the deletingHook that a deletion is taking place.
                                    deletingHook.call(this, this.primKey, item, trans);
                                }
                                else {
                                    // No deletion. Check what was changed
                                    var objectDiff = getObjectDiff(origItem, this.value);
                                    var additionalChanges = updatingHook.call(this, objectDiff, this.primKey, origItem, trans);
                                    if (additionalChanges) {
                                        // Hook want to apply additional modifications. Make sure to fullfill the will of the hook.
                                        item = this.value;
                                        keys(additionalChanges).forEach(function (keyPath) {
                                            setByKeyPath(item, keyPath, additionalChanges[keyPath]); // Adding {keyPath: undefined} means that the keyPath should be deleted. Handled by setByKeyPath
                                        });
                                    }
                                }
                            };
                        }
                    }
                    else if (updatingHook === nop) {
                        // changes is a set of {keyPath: value} and no one is listening to the updating hook.
                        var keyPaths = keys(changes);
                        var numKeys = keyPaths.length;
                        modifyer = function (item) {
                            var anythingModified = false;
                            for (var i = 0; i < numKeys; ++i) {
                                var keyPath = keyPaths[i], val = changes[keyPath];
                                if (getByKeyPath(item, keyPath) !== val) {
                                    setByKeyPath(item, keyPath, val); // Adding {keyPath: undefined} means that the keyPath should be deleted. Handled by setByKeyPath
                                    anythingModified = true;
                                }
                            }
                            return anythingModified;
                        };
                    }
                    else {
                        // changes is a set of {keyPath: value} and people are listening to the updating hook so we need to call it and
                        // allow it to add additional modifications to make.
                        var origChanges = changes;
                        changes = shallowClone(origChanges); // Let's work with a clone of the changes keyPath/value set so that we can restore it in case a hook extends it.
                        modifyer = function (item) {
                            var anythingModified = false;
                            var additionalChanges = updatingHook.call(this, changes, this.primKey, deepClone(item), trans);
                            if (additionalChanges)
                                extend(changes, additionalChanges);
                            keys(changes).forEach(function (keyPath) {
                                var val = changes[keyPath];
                                if (getByKeyPath(item, keyPath) !== val) {
                                    setByKeyPath(item, keyPath, val);
                                    anythingModified = true;
                                }
                            });
                            if (additionalChanges)
                                changes = shallowClone(origChanges); // Restore original changes for next iteration
                            return anythingModified;
                        };
                    }
                    var count = 0;
                    var successCount = 0;
                    var iterationComplete = false;
                    var failures = [];
                    var failKeys = [];
                    var currentKey = null;
                    function modifyItem(item, cursor) {
                        currentKey = cursor.primaryKey;
                        var thisContext = {
                            primKey: cursor.primaryKey,
                            value: item,
                            onsuccess: null,
                            onerror: null
                        };
                        function onerror(e) {
                            failures.push(e);
                            failKeys.push(thisContext.primKey);
                            checkFinished();
                            return true; // Catch these errors and let a final rejection decide whether or not to abort entire transaction
                        }
                        if (modifyer.call(thisContext, item, thisContext) !== false) {
                            var bDelete = !hasOwn(thisContext, "value");
                            ++count;
                            tryCatch(function () {
                                var req = (bDelete ? cursor.delete() : cursor.update(thisContext.value));
                                req._hookCtx = thisContext;
                                req.onerror = hookedEventRejectHandler(onerror);
                                req.onsuccess = hookedEventSuccessHandler(function () {
                                    ++successCount;
                                    checkFinished();
                                });
                            }, onerror);
                        }
                        else if (thisContext.onsuccess) {
                            // Hook will expect either onerror or onsuccess to always be called!
                            thisContext.onsuccess(thisContext.value);
                        }
                    }
                    function doReject(e) {
                        if (e) {
                            failures.push(e);
                            failKeys.push(currentKey);
                        }
                        return reject(new ModifyError("Error modifying one or more objects", failures, successCount, failKeys));
                    }
                    function checkFinished() {
                        if (iterationComplete && successCount + failures.length === count) {
                            if (failures.length > 0)
                                doReject();
                            else
                                resolve(successCount);
                        }
                    }
                    self.clone().raw()._iterate(modifyItem, function () {
                        iterationComplete = true;
                        checkFinished();
                    }, doReject, idbstore);
                });
            },
            'delete': function () {
                var _this = this;
                var ctx = this._ctx, range = ctx.range, deletingHook = ctx.table.hook.deleting.fire, hasDeleteHook = deletingHook !== nop;
                if (!hasDeleteHook &&
                    isPlainKeyRange(ctx) &&
                    ((ctx.isPrimKey && !hangsOnDeleteLargeKeyRange) || !range)) {
                    // May use IDBObjectStore.delete(IDBKeyRange) in this case (Issue #208)
                    // For chromium, this is the way most optimized version.
                    // For IE/Edge, this could hang the indexedDB engine and make operating system instable
                    // (https://gist.github.com/dfahlander/5a39328f029de18222cf2125d56c38f7)
                    return this._write(function (resolve, reject, idbstore) {
                        // Our API contract is to return a count of deleted items, so we have to count() before delete().
                        var onerror = eventRejectHandler(reject), countReq = (range ? idbstore.count(range) : idbstore.count());
                        countReq.onerror = onerror;
                        countReq.onsuccess = function () {
                            var count = countReq.result;
                            tryCatch(function () {
                                var delReq = (range ? idbstore.delete(range) : idbstore.clear());
                                delReq.onerror = onerror;
                                delReq.onsuccess = function () { return resolve(count); };
                            }, function (err) { return reject(err); });
                        };
                    });
                }
                // Default version to use when collection is not a vanilla IDBKeyRange on the primary key.
                // Divide into chunks to not starve RAM.
                // If has delete hook, we will have to collect not just keys but also objects, so it will use
                // more memory and need lower chunk size.
                var CHUNKSIZE = hasDeleteHook ? 2000 : 10000;
                return this._write(function (resolve, reject, idbstore, trans) {
                    var totalCount = 0;
                    // Clone collection and change its table and set a limit of CHUNKSIZE on the cloned Collection instance.
                    var collection = _this
                        .clone({
                        keysOnly: !ctx.isMatch && !hasDeleteHook
                    }) // load just keys (unless filter() or and() or deleteHook has subscribers)
                        .distinct() // In case multiEntry is used, never delete same key twice because resulting count
                        .limit(CHUNKSIZE)
                        .raw(); // Don't filter through reading-hooks (like mapped classes etc)
                    var keysOrTuples = [];
                    // We're gonna do things on as many chunks that are needed.
                    // Use recursion of nextChunk function:
                    var nextChunk = function () { return collection.each(hasDeleteHook ? function (val, cursor) {
                        // Somebody subscribes to hook('deleting'). Collect all primary keys and their values,
                        // so that the hook can be called with its values in bulkDelete().
                        keysOrTuples.push([cursor.primaryKey, cursor.value]);
                    } : function (val, cursor) {
                        // No one subscribes to hook('deleting'). Collect only primary keys:
                        keysOrTuples.push(cursor.primaryKey);
                    }).then(function () {
                        // Chromium deletes faster when doing it in sort order.
                        hasDeleteHook ?
                            keysOrTuples.sort(function (a, b) { return ascending(a[0], b[0]); }) :
                            keysOrTuples.sort(ascending);
                        return bulkDelete(idbstore, trans, keysOrTuples, hasDeleteHook, deletingHook);
                    }).then(function () {
                        var count = keysOrTuples.length;
                        totalCount += count;
                        keysOrTuples = [];
                        return count < CHUNKSIZE ? totalCount : nextChunk();
                    }); };
                    resolve(nextChunk());
                });
            }
        };
    });
    //
    //
    //
    // ------------------------- Help functions ---------------------------
    //
    //
    //
    function lowerVersionFirst(a, b) {
        return a._cfg.version - b._cfg.version;
    }
    function setApiOnPlace(objs, tableNames, dbschema) {
        tableNames.forEach(function (tableName) {
            var schema = dbschema[tableName];
            objs.forEach(function (obj) {
                if (!(tableName in obj)) {
                    if (obj === Transaction.prototype || obj instanceof Transaction) {
                        // obj is a Transaction prototype (or prototype of a subclass to Transaction)
                        // Make the API a getter that returns this.table(tableName)
                        setProp(obj, tableName, { get: function () { return this.table(tableName); } });
                    }
                    else {
                        // Table will not be bound to a transaction (will use Dexie.currentTransaction)
                        obj[tableName] = new Table(tableName, schema);
                    }
                }
            });
        });
    }
    function removeTablesApi(objs) {
        objs.forEach(function (obj) {
            for (var key in obj) {
                if (obj[key] instanceof Table)
                    delete obj[key];
            }
        });
    }
    function iterate(req, filter, fn, resolve, reject, valueMapper) {
        // Apply valueMapper (hook('reading') or mappped class)
        var mappedFn = valueMapper ? function (x, c, a) { return fn(valueMapper(x), c, a); } : fn;
        // Wrap fn with PSD and microtick stuff from Promise.
        var wrappedFn = wrap(mappedFn, reject);
        if (!req.onerror)
            req.onerror = eventRejectHandler(reject);
        if (filter) {
            req.onsuccess = trycatcher(function filter_record() {
                var cursor = req.result;
                if (cursor) {
                    var c = function () { cursor.continue(); };
                    if (filter(cursor, function (advancer) { c = advancer; }, resolve, reject))
                        wrappedFn(cursor.value, cursor, function (advancer) { c = advancer; });
                    c();
                }
                else {
                    resolve();
                }
            }, reject);
        }
        else {
            req.onsuccess = trycatcher(function filter_record() {
                var cursor = req.result;
                if (cursor) {
                    var c = function () { cursor.continue(); };
                    wrappedFn(cursor.value, cursor, function (advancer) { c = advancer; });
                    c();
                }
                else {
                    resolve();
                }
            }, reject);
        }
    }
    function parseIndexSyntax(indexes) {
        /// <param name="indexes" type="String"></param>
        /// <returns type="Array" elementType="IndexSpec"></returns>
        var rv = [];
        indexes.split(',').forEach(function (index) {
            index = index.trim();
            var name = index.replace(/([&*]|\+\+)/g, ""); // Remove "&", "++" and "*"
            // Let keyPath of "[a+b]" be ["a","b"]:
            var keyPath = /^\[/.test(name) ? name.match(/^\[(.*)\]$/)[1].split('+') : name;
            rv.push(new IndexSpec(name, keyPath || null, /\&/.test(index), /\*/.test(index), /\+\+/.test(index), isArray(keyPath), /\./.test(index)));
        });
        return rv;
    }
    function cmp(key1, key2) {
        return indexedDB.cmp(key1, key2);
    }
    function min(a, b) {
        return cmp(a, b) < 0 ? a : b;
    }
    function max(a, b) {
        return cmp(a, b) > 0 ? a : b;
    }
    function ascending(a, b) {
        return indexedDB.cmp(a, b);
    }
    function descending(a, b) {
        return indexedDB.cmp(b, a);
    }
    function simpleCompare(a, b) {
        return a < b ? -1 : a === b ? 0 : 1;
    }
    function simpleCompareReverse(a, b) {
        return a > b ? -1 : a === b ? 0 : 1;
    }
    function combine(filter1, filter2) {
        return filter1 ?
            filter2 ?
                function () { return filter1.apply(this, arguments) && filter2.apply(this, arguments); } :
                filter1 :
            filter2;
    }
    function readGlobalSchema() {
        db.verno = idbdb.version / 10;
        db._dbSchema = globalSchema = {};
        dbStoreNames = slice(idbdb.objectStoreNames, 0);
        if (dbStoreNames.length === 0)
            return; // Database contains no stores.
        var trans = idbdb.transaction(safariMultiStoreFix(dbStoreNames), 'readonly');
        dbStoreNames.forEach(function (storeName) {
            var store = trans.objectStore(storeName), keyPath = store.keyPath, dotted = keyPath && typeof keyPath === 'string' && keyPath.indexOf('.') !== -1;
            var primKey = new IndexSpec(keyPath, keyPath || "", false, false, !!store.autoIncrement, keyPath && typeof keyPath !== 'string', dotted);
            var indexes = [];
            for (var j = 0; j < store.indexNames.length; ++j) {
                var idbindex = store.index(store.indexNames[j]);
                keyPath = idbindex.keyPath;
                dotted = keyPath && typeof keyPath === 'string' && keyPath.indexOf('.') !== -1;
                var index = new IndexSpec(idbindex.name, keyPath, !!idbindex.unique, !!idbindex.multiEntry, false, keyPath && typeof keyPath !== 'string', dotted);
                indexes.push(index);
            }
            globalSchema[storeName] = new TableSchema(storeName, primKey, indexes, {});
        });
        setApiOnPlace([allTables], keys(globalSchema), globalSchema);
    }
    function adjustToExistingIndexNames(schema, idbtrans) {
        /// <summary>
        /// Issue #30 Problem with existing db - adjust to existing index names when migrating from non-dexie db
        /// </summary>
        /// <param name="schema" type="Object">Map between name and TableSchema</param>
        /// <param name="idbtrans" type="IDBTransaction"></param>
        var storeNames = idbtrans.db.objectStoreNames;
        for (var i = 0; i < storeNames.length; ++i) {
            var storeName = storeNames[i];
            var store = idbtrans.objectStore(storeName);
            hasGetAll = 'getAll' in store;
            for (var j = 0; j < store.indexNames.length; ++j) {
                var indexName = store.indexNames[j];
                var keyPath = store.index(indexName).keyPath;
                var dexieName = typeof keyPath === 'string' ? keyPath : "[" + slice(keyPath).join('+') + "]";
                if (schema[storeName]) {
                    var indexSpec = schema[storeName].idxByName[dexieName];
                    if (indexSpec)
                        indexSpec.name = indexName;
                }
            }
        }
        // Bug with getAll() on Safari ver<604 on Workers only, see discussion following PR #579
        if (/Safari/.test(navigator.userAgent) &&
            !/(Chrome\/|Edge\/)/.test(navigator.userAgent) &&
            _global.WorkerGlobalScope && _global instanceof _global.WorkerGlobalScope &&
            [].concat(navigator.userAgent.match(/Safari\/(\d*)/))[1] < 604) {
            hasGetAll = false;
        }
    }
    function fireOnBlocked(ev) {
        db.on("blocked").fire(ev);
        // Workaround (not fully*) for missing "versionchange" event in IE,Edge and Safari:
        connections
            .filter(function (c) { return c.name === db.name && c !== db && !c._vcFired; })
            .map(function (c) { return c.on("versionchange").fire(ev); });
    }
    extend(this, {
        Collection: Collection,
        Table: Table,
        Transaction: Transaction,
        Version: Version,
        WhereClause: WhereClause
    });
    init();
    addons.forEach(function (fn) {
        fn(db);
    });
}
function parseType(type) {
    if (typeof type === 'function') {
        return new type();
    }
    else if (isArray(type)) {
        return [parseType(type[0])];
    }
    else if (type && typeof type === 'object') {
        var rv = {};
        applyStructure(rv, type);
        return rv;
    }
    else {
        return type;
    }
}
function applyStructure(obj, structure) {
    keys(structure).forEach(function (member) {
        var value = parseType(structure[member]);
        obj[member] = value;
    });
    return obj;
}
function hookedEventSuccessHandler(resolve) {
    // wrap() is needed when calling hooks because the rare scenario of:
    //  * hook does a db operation that fails immediately (IDB throws exception)
    //    For calling db operations on correct transaction, wrap makes sure to set PSD correctly.
    //    wrap() will also execute in a virtual tick.
    //  * If not wrapped in a virtual tick, direct exception will launch a new physical tick.
    //  * If this was the last event in the bulk, the promise will resolve after a physical tick
    //    and the transaction will have committed already.
    // If no hook, the virtual tick will be executed in the reject()/resolve of the final promise,
    // because it is always marked with _lib = true when created using Transaction._promise().
    return wrap(function (event) {
        var req = event.target, ctx = req._hookCtx, // Contains the hook error handler. Put here instead of closure to boost performance.
        result = ctx.value || req.result, // Pass the object value on updates. The result from IDB is the primary key.
        hookSuccessHandler = ctx && ctx.onsuccess;
        hookSuccessHandler && hookSuccessHandler(result);
        resolve && resolve(result);
    }, resolve);
}
function eventRejectHandler(reject) {
    return wrap(function (event) {
        preventDefault(event);
        reject(event.target.error);
        return false;
    });
}
function eventSuccessHandler(resolve) {
    return wrap(function (event) {
        resolve(event.target.result);
    });
}
function hookedEventRejectHandler(reject) {
    return wrap(function (event) {
        // See comment on hookedEventSuccessHandler() why wrap() is needed only when supporting hooks.
        var req = event.target, err = req.error, ctx = req._hookCtx, // Contains the hook error handler. Put here instead of closure to boost performance.
        hookErrorHandler = ctx && ctx.onerror;
        hookErrorHandler && hookErrorHandler(err);
        preventDefault(event);
        reject(err);
        return false;
    });
}
function preventDefault(event) {
    if (event.stopPropagation)
        event.stopPropagation();
    if (event.preventDefault)
        event.preventDefault();
}
function awaitIterator(iterator) {
    var callNext = function (result) { return iterator.next(result); }, doThrow = function (error) { return iterator.throw(error); }, onSuccess = step(callNext), onError = step(doThrow);
    function step(getNext) {
        return function (val) {
            var next = getNext(val), value = next.value;
            return next.done ? value :
                (!value || typeof value.then !== 'function' ?
                    isArray(value) ? Promise.all(value).then(onSuccess, onError) : onSuccess(value) :
                    value.then(onSuccess, onError));
        };
    }
    return step(callNext)();
}
//
// IndexSpec struct
//
function IndexSpec(name, keyPath, unique, multi, auto, compound, dotted) {
    /// <param name="name" type="String"></param>
    /// <param name="keyPath" type="String"></param>
    /// <param name="unique" type="Boolean"></param>
    /// <param name="multi" type="Boolean"></param>
    /// <param name="auto" type="Boolean"></param>
    /// <param name="compound" type="Boolean"></param>
    /// <param name="dotted" type="Boolean"></param>
    this.name = name;
    this.keyPath = keyPath;
    this.unique = unique;
    this.multi = multi;
    this.auto = auto;
    this.compound = compound;
    this.dotted = dotted;
    var keyPathSrc = typeof keyPath === 'string' ? keyPath : keyPath && ('[' + [].join.call(keyPath, '+') + ']');
    this.src = (unique ? '&' : '') + (multi ? '*' : '') + (auto ? "++" : "") + keyPathSrc;
}
//
// TableSchema struct
//
function TableSchema(name, primKey, indexes, instanceTemplate) {
    /// <param name="name" type="String"></param>
    /// <param name="primKey" type="IndexSpec"></param>
    /// <param name="indexes" type="Array" elementType="IndexSpec"></param>
    /// <param name="instanceTemplate" type="Object"></param>
    this.name = name;
    this.primKey = primKey || new IndexSpec();
    this.indexes = indexes || [new IndexSpec()];
    this.instanceTemplate = instanceTemplate;
    this.mappedClass = null;
    this.idxByName = arrayToObject(indexes, function (index) { return [index.name, index]; });
}
function safariMultiStoreFix(storeNames) {
    return storeNames.length === 1 ? storeNames[0] : storeNames;
}
function getNativeGetDatabaseNamesFn(indexedDB) {
    var fn = indexedDB && (indexedDB.getDatabaseNames || indexedDB.webkitGetDatabaseNames);
    return fn && fn.bind(indexedDB);
}
// Export Error classes
props(Dexie, fullNameExceptions); // Dexie.XXXError = class XXXError {...};
//
// Static methods and properties
// 
props(Dexie, {
    //
    // Static delete() method.
    //
    delete: function (databaseName) {
        var db = new Dexie(databaseName), promise = db.delete();
        promise.onblocked = function (fn) {
            db.on("blocked", fn);
            return this;
        };
        return promise;
    },
    //
    // Static exists() method.
    //
    exists: function (name) {
        return new Dexie(name).open().then(function (db) {
            db.close();
            return true;
        }).catch(Dexie.NoSuchDatabaseError, function () { return false; });
    },
    //
    // Static method for retrieving a list of all existing databases at current host.
    //
    getDatabaseNames: function (cb) {
        var getDatabaseNames = getNativeGetDatabaseNamesFn(Dexie.dependencies.indexedDB);
        return getDatabaseNames ? new Promise(function (resolve, reject) {
            var req = getDatabaseNames();
            req.onsuccess = function (event) {
                resolve(slice(event.target.result, 0)); // Converst DOMStringList to Array<String>
            };
            req.onerror = eventRejectHandler(reject);
        }).then(cb) : dbNamesDB.dbnames.toCollection().primaryKeys(cb);
    },
    defineClass: function () {
        // Default constructor able to copy given properties into this object.
        function Class(properties) {
            /// <param name="properties" type="Object" optional="true">Properties to initialize object with.
            /// </param>
            if (properties)
                extend(this, properties);
        }
        return Class;
    },
    applyStructure: applyStructure,
    ignoreTransaction: function (scopeFunc) {
        // In case caller is within a transaction but needs to create a separate transaction.
        // Example of usage:
        //
        // Let's say we have a logger function in our app. Other application-logic should be unaware of the
        // logger function and not need to include the 'logentries' table in all transaction it performs.
        // The logging should always be done in a separate transaction and not be dependant on the current
        // running transaction context. Then you could use Dexie.ignoreTransaction() to run code that starts a new transaction.
        //
        //     Dexie.ignoreTransaction(function() {
        //         db.logentries.add(newLogEntry);
        //     });
        //
        // Unless using Dexie.ignoreTransaction(), the above example would try to reuse the current transaction
        // in current Promise-scope.
        //
        // An alternative to Dexie.ignoreTransaction() would be setImmediate() or setTimeout(). The reason we still provide an
        // API for this because
        //  1) The intention of writing the statement could be unclear if using setImmediate() or setTimeout().
        //  2) setTimeout() would wait unnescessary until firing. This is however not the case with setImmediate().
        //  3) setImmediate() is not supported in the ES standard.
        //  4) You might want to keep other PSD state that was set in a parent PSD, such as PSD.letThrough.
        return PSD.trans ?
            usePSD(PSD.transless, scopeFunc) : // Use the closest parent that was non-transactional.
            scopeFunc(); // No need to change scope because there is no ongoing transaction.
    },
    vip: function (fn) {
        // To be used by subscribers to the on('ready') event.
        // This will let caller through to access DB even when it is blocked while the db.ready() subscribers are firing.
        // This would have worked automatically if we were certain that the Provider was using Dexie.Promise for all asyncronic operations. The promise PSD
        // from the provider.connect() call would then be derived all the way to when provider would call localDatabase.applyChanges(). But since
        // the provider more likely is using non-promise async APIs or other thenable implementations, we cannot assume that.
        // Note that this method is only useful for on('ready') subscribers that is returning a Promise from the event. If not using vip()
        // the database could deadlock since it wont open until the returned Promise is resolved, and any non-VIPed operation started by
        // the caller will not resolve until database is opened.
        return newScope(function () {
            PSD.letThrough = true; // Make sure we are let through if still blocking db due to onready is firing.
            return fn();
        });
    },
    async: function (generatorFn) {
        return function () {
            try {
                var rv = awaitIterator(generatorFn.apply(this, arguments));
                if (!rv || typeof rv.then !== 'function')
                    return Promise.resolve(rv);
                return rv;
            }
            catch (e) {
                return rejection(e);
            }
        };
    },
    spawn: function (generatorFn, args, thiz) {
        try {
            var rv = awaitIterator(generatorFn.apply(thiz, args || []));
            if (!rv || typeof rv.then !== 'function')
                return Promise.resolve(rv);
            return rv;
        }
        catch (e) {
            return rejection(e);
        }
    },
    // Dexie.currentTransaction property
    currentTransaction: {
        get: function () { return PSD.trans || null; }
    },
    waitFor: function (promiseOrFunction, optionalTimeout) {
        // If a function is provided, invoke it and pass the returning value to Transaction.waitFor()
        var promise = Promise.resolve(typeof promiseOrFunction === 'function' ? Dexie.ignoreTransaction(promiseOrFunction) : promiseOrFunction)
            .timeout(optionalTimeout || 60000); // Default the timeout to one minute. Caller may specify Infinity if required.       
        // Run given promise on current transaction. If no current transaction, just return a Dexie promise based
        // on given value.
        return PSD.trans ? PSD.trans.waitFor(promise) : promise;
    },
    // Export our Promise implementation since it can be handy as a standalone Promise implementation
    Promise: Promise,
    // Dexie.debug proptery:
    // Dexie.debug = false
    // Dexie.debug = true
    // Dexie.debug = "dexie" - don't hide dexie's stack frames.
    debug: {
        get: function () { return debug; },
        set: function (value) {
            setDebug(value, value === 'dexie' ? function () { return true; } : dexieStackFrameFilter);
        }
    },
    // Export our derive/extend/override methodology
    derive: derive,
    extend: extend,
    props: props,
    override: override,
    // Export our Events() function - can be handy as a toolkit
    Events: Events,
    // Utilities
    getByKeyPath: getByKeyPath,
    setByKeyPath: setByKeyPath,
    delByKeyPath: delByKeyPath,
    shallowClone: shallowClone,
    deepClone: deepClone,
    getObjectDiff: getObjectDiff,
    asap: asap,
    maxKey: maxKey,
    minKey: minKey,
    // Addon registry
    addons: [],
    // Global DB connection list
    connections: connections,
    MultiModifyError: exceptions.Modify,
    errnames: errnames,
    // Export other static classes
    IndexSpec: IndexSpec,
    TableSchema: TableSchema,
    //
    // Dependencies
    //
    // These will automatically work in browsers with indexedDB support, or where an indexedDB polyfill has been included.
    //
    // In node.js, however, these properties must be set "manually" before instansiating a new Dexie().
    // For node.js, you need to require indexeddb-js or similar and then set these deps.
    //
    dependencies: (function () {
        try {
            return {
                // Required:
                indexedDB: _global.indexedDB || _global.mozIndexedDB || _global.webkitIndexedDB || _global.msIndexedDB,
                IDBKeyRange: _global.IDBKeyRange || _global.webkitIDBKeyRange
            };
        }
        catch (e) {
            return {
                indexedDB: null,
                IDBKeyRange: null
            };
        }
    })(),
    // API Version Number: Type Number, make sure to always set a version number that can be comparable correctly. Example: 0.9, 0.91, 0.92, 1.0, 1.01, 1.1, 1.2, 1.21, etc.
    semVer: DEXIE_VERSION,
    version: DEXIE_VERSION.split('.')
        .map(function (n) { return parseInt(n); })
        .reduce(function (p, c, i) { return p + (c / Math.pow(10, i * 2)); }),
    // https://github.com/dfahlander/Dexie.js/issues/186
    // typescript compiler tsc in mode ts-->es5 & commonJS, will expect require() to return
    // x.default. Workaround: Set Dexie.default = Dexie.
    default: Dexie,
    // Make it possible to import {Dexie} (non-default import)
    // Reason 1: May switch to that in future.
    // Reason 2: We declare it both default and named exported in d.ts to make it possible
    // to let addons extend the Dexie interface with Typescript 2.1 (works only when explicitely
    // exporting the symbol, not just default exporting)
    Dexie: Dexie
});
// Map DOMErrors and DOMExceptions to corresponding Dexie errors. May change in Dexie v2.0.
Promise.rejectionMapper = mapError;
// Initialize dbNamesDB (won't ever be opened on chromium browsers')
dbNamesDB = new Dexie('__dbnames');
dbNamesDB.version(1).stores({ dbnames: 'name' });
(function () {
    // Migrate from Dexie 1.x database names stored in localStorage:
    var DBNAMES = 'Dexie.DatabaseNames';
    try {
        if (typeof localStorage !== undefined && _global.document !== undefined) {
            // Have localStorage and is not executing in a worker. Lets migrate from Dexie 1.x.
            JSON.parse(localStorage.getItem(DBNAMES) || "[]")
                .forEach(function (name) { return dbNamesDB.dbnames.put({ name: name }).catch(nop); });
            localStorage.removeItem(DBNAMES);
        }
    }
    catch (_e) { }
})();

/* harmony default export */ __webpack_exports__["a"] = (Dexie);
//# sourceMappingURL=dexie.es.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(17), __webpack_require__(113).setImmediate))

/***/ }),
/* 70 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ("<body>\n  <template id=\"MainPage\">\n    <div class=\"container grid-lg\">\n      <div class=\"columns\">\n        <div class=\"column col-12\">\n          <header>Olgerd na dobu</header>\n        </div>\n        <div class=\"column col-6\" ui:each=\"item of <-nav:/items|rest\">\n          <CardNews ui:props=\"{{item}}\" />\n        </div>\n      </div>\n      <h4 class=\"ui header\">\n        <a target=\"video\" href=\"//www.youtube.com/embed/5NkGFURgisI\">2013</a>\n        -\n        <a target=\"video\" href=\"//www.youtube.com/embed/j4oJoRAb_Ag\">2012</a>\n        -\n        <a target=\"video\" href=\"//www.youtube.com/embed/U0G5dBA854g\">2011</a>\n      </h4>\n      <div class=\"embed-responsive embed-responsive-4by3\">\n        <!-- <iframe class=\"embed-responsive-item\" src=\"//www.youtube.com/embed/j4oJoRAb_Ag\" allowfullscreen=\"true\"></iframe> -->\n      </div>\n      <small>\n        <p>\n          <strong>Olgard</strong> - e mestom Sily. Tut qas beghyt pa-svojmu i inshy masshtab padzej, zdarenni\n          abumowleny i wseo navokal prasiaknuto asobym sensam.\n          Treba adno zawvaghac detali, sluxac tishynu, kab dotknuc sa da hetae inshae realnosti.\n        </p>\n        <p>\n          <strong>\n            <a href=\"http://ru.wikipedia.org/wiki/%D0%98%D1%81%D1%82%D0%BE%D1%80%D0%B8%D1%8F_%D0%93%D1%80%D0%BE%D0%B4%D0%BD%D0%BE\"\n               target=\"_blank\">Gistorya mesta Olgard</a>\n          </strong> neodjemnea qastka susvetnaj gistoryi. Leosy, zvyqai, mova i kultura tesno perapleli sa tut w\n          admyslovy uzor. Nashae\n          mesto josc prykladom tradycyj sebrowstva i wzaemnaj povagi migh leudzmi. My roznye, ale nas jednae vera w\n          lepshae majbytne, shto my razam buduem dzenj za dniom. I tamu tut lubiat pawtorac:\n          <i>\"Use my liudzi\", \"Nex zhye volnosc\", \"Xto krucit, toj mae\"</i>.\n        </p>\n      </small>\n    </div>\n\n  </template>\n\n  <template id=\"CardNews\">\n    <div class=\"my-1\">\n      <Card title=\"{{name}}\" subtitle=\"{{name}}\" ui:props=\"<-\">\n        <li ui:each=\"e of links\"><a href=\"{{e.link}}\" class=\"item\">{{e.name|subject|translit}}</a></li>\n      </Card>\n    </div>\n  </template>\n\n  <template id=\"Footer\">\n    <footer class=\"ui inverted vertical footer segment\">\n      <div class=\"ui center aligned container\">\n        <div class=\"ui stackable inverted divided grid\">\n          <div class=\"three wide column\">\n            <h4 class=\"ui inverted header\">Ab'javy</h4>\n            <div class=\"ui inverted link list\">\n              <a href=\"http://realty.grodno.co/\" class=\"item\">Zhytlo</a>\n              <a href=\"http://cars.grodno.co/\" class=\"item\">Samoxody</a>\n              <a href=\"http://job.grodno.co/\" class=\"item\">Pratsa</a>\n              <a href=\"http://service.grodno.co/\" class=\"item\">Paslugi</a>\n            </div>\n          </div>\n          <div class=\"seven wide column\">\n            <h4 class=\"ui inverted header\">Grodnae urbi est</h4>\n            <p>Sonca wsxodzic i zaxodzic, a pavazhnea plyn Niemana ne spyniaet sa ni na mig.</p>\n          </div>\n        </div>\n        <div class=\"ui inverted section divider\"></div>\n        <img src=\"/logo.jpg\" class=\"ui centered mini image\" />\n        <div class=\"ui horizontal inverted small divided link list\">\n          <a class=\"item\" href=\"#\">Site Map</a>\n          <a class=\"item\" href=\"#\">Contact Us</a>\n          <a class=\"item\" href=\"#\">Terms and Conditions</a>\n          <a class=\"item\" href=\"#\">Privacy Policy</a>\n        </div>\n      </div>\n    </footer>\n  </template>\n</body>");

/***/ }),
/* 71 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ("<body>\n\n  <template id=\"CalendarPage\">\n    <div>\n      <div class=\"container pt-1 bg-gray\" style=\"max-width:940px;\">\n        <div class=\"columns\">\n          <div class=\"column col-12 col-sm-12\">\n            <IFrame src=\"<- routeMapUrl\" />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"container my-0 pt-0\" style=\"max-width:940px;\">\n        <Tags data=\"<- filteredTags\" onItem=\"-> toggleTag\" />\n        <PlacesSelectorList data=\"<- filteredPlaces\" sortBy=\"created_at\" />\n      </div>\n    </div>\n  </template>\n\n\n  <template id=\"AsideAdmin\">\n    <div class=\"panel\" style=\"height: 100%;\">\n      <div class=\"panel-header\">\n        <a class=\"btn btn-clear show-lg\" style=\"float: right!important\" href=\"#\"></a>\n        <div class=\"panel-title\">\n          <h1>A new route</h1>\n        </div>\n      </div>\n      <div class=\"panel-nav\">\n      </div>\n      <div class=\"panel-body\">\n        <SubmitForm places=\"<- selectedPlacesIds\" photo=\"<- suggestedPhoto\" />\n      </div>\n      <div class=\"panel-footer\">\n      </div>\n    </div>\n  </template>\n\n  <template id=\"SubmitForm\">\n    <form class=\"form-horizontal\" method=\"POST\" target=\"submitted\"\n          action=\"https://script.google.com/macros/s/AKfycbygqpzU57bxZAW48Mo8nFxodJmy9_WFwiG7XizFmxY/dev\">\n      <div class=\"form-group\">\n        <div class=\"col-3 col-sm-12\">\n          <label class=\"form-label\" for=\"title\">Name</label>\n        </div>\n        <div class=\"col-9 col-sm-12\">\n          <input class=\"form-input\" type=\"text\" name=\"title\" id=\"title\" placeholder=\"name\" />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"col-3 col-sm-12\">\n          <label class=\"form-label\" for=\"description\">Description</label>\n        </div>\n        <div class=\"col-9 col-sm-12\">\n          <textarea class=\"form-input\" name=\"description\" id=\"description\" placeholder=\"description\" />\n          </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"col-3 col-sm-12\">\n          <label class=\"form-label\" for=\"link\">Link</label>\n        </div>\n        <div class=\"col-9 col-sm-12\">\n          <input class=\"form-input\" type=\"text\" name=\"link\" id=\"link\" placeholder=\"URL address (optional)\" />\n        </div>\n      </div>\n      <div class=\"form-group\">\n        <div class=\"col-3 col-sm-12\">\n          <label class=\"form-label\" for=\"input-example-1\">Places</label>\n        </div>\n      </div>\n      <PlacesList2 data=\"<- selectedPlaces\" />\n\n      <div class=\"input-group\">\n        <input class=\"form-input\" type=\"hidden\" name=\"_format\" value=\"html\" />\n        <input class=\"form-input\" type=\"hidden\" name=\"sheet\" value=\"routes\" />\n        <input class=\"form-input\" type=\"hidden\" name=\"places\" value=\"{{places}}\" />\n        <input class=\"form-input\" type=\"hidden\" name=\"photo\" value=\"{{photo}}\" />\n        <button class=\"btn btn-primary input-group-btn\">Submit</button>\n      </div>\n      <iframe name=\"submitted\" width=\"100%\" height=\"15\" frameborder=\"0\"></iframe>\n    </form>\n  </template>\n\n  <template id=\"PlacesList2\">\n    <div class=\"timeline\">\n\n      <div class=\"timeline-item\" id=\"timeline-example-2\" ui: each=\"item of data\">\n    <div class=\"timeline-left\">\n        <figure class=\"avatar avatar-sm bg-primary\" data-initial=\"{{item.title|initials}}\">\n          <img src=\"{{item.photo}}\" class=\"img-responsive\" />\n        </figure>\n      </div>\n      <div class=\"timeline-content\">\n        <div class=\"tile\">\n          <div class=\"tile-content\">\n            <p class=\"tile-subtitle\">{{ item.title | subject }}</p>\n          </div>\n          <div class=\"tile-action\">\n            <div class=\"btn-group btn-group-block\">\n              <button class=\"btn disabled:{{itemIndex}}=0\" data-id=\"{{item.id}}\" data-dir=\"up\" click=\"-> arrangePlace\"><i class=\"icon icon-arrow-up\"></i></button>\n              <button class=\"btn disabled:{{itemIndex}}={{data.length}}\" data-id=\"{{item.id}}\" data-dir=\"down\" click=\"-> arrangePlace\"><i class=\"icon icon-arrow-down\"></i></button>\n              <button class=\"btn btn-primary\" data-id=\"{{item.id}}\" click=\"-> togglePlace\"><i class=\"icon icon-cross\"></i></button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </template>\n\n  <template id=\"PlacesSelectorList\">\n    <div class=\"columns\">\n      <PlacesSelectorListItem item=\"{{item}}\" ui:each=\"item of data\"/>\n    </div>\n  </template>\n\n  <template id=\"PlacesSelectorListItem\">\n    <div class=\"column col-4 col-sm-12\">\n      <div class=\"card\">\n        <div class=\"card-image\" data-modal=\"true\" click=\"{{assign}}\">\n          <Parallax backImage=\"{{item.photo}}\" />\n        </div>\n        <div class=\"card-header\">\n          <div class=\"form-group\">\n            <label class=\"form-switch\">\n              <input type=\"checkbox\" checked=\"{{item.selected}}\" data-id=\"{{item.id}}\" toggle=\"-> togglePlace\" />\n              <i class=\"form-icon\"></i><h5 class=\"card-title\">{{ item.title | subject }}</h5>\n            </label>\n          </div>\n        </div>\n      </div>\n      <Modal title=\"{{item.title|subject}}\" ui: if=\"modal\" close=\"{{ assign }}\">\n      <span>{{ item.description }}</span>\n      <a href=\"{{item.link}}\" target=\"_blank\">More...</a>\n      </Modal>\n    </div>\n  </template  >\n  </body >");

/***/ }),
/* 72 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ("<template id=\"GeomapPage\">\n  <div>\n    <Hero title=\"{{route.title|subject}}\" />\n    <div class=\"container pt-1 bg-gray\" style=\"max-width:940px;\">\n      <div class=\"columns\">\n        <div class=\"column col-12 col-sm-12\">\n          <span class=\"tile-subtitle p-2\">{{route.description}}</span>\n          <a href=\"{{route.link}}\" target=\"_blank\">More...</a>\n        </div>\n        <div class=\"column col-12 col-sm-12\">\n          <IFrame src=\"<- routeMapUrl\" />\n        </div>\n      </div>\n    </div>\n    <div class=\"container my-0 pt-0\" style=\"max-width:940px;\">\n      <h5 class=\"tile-subtitle p-2\">Places</h5>\n      <PlacesList data=\"<- selectedPlaces\" sortBy=\"created_at\" />\n    </div>\n  </div>\n</template>\n\n<template id=\"AsideClient\">\n  <div class=\"panel\" style=\"height: 100%;\">\n    <div class=\"panel-header\">\n      <a class=\"btn btn-clear show-lg\" style=\"float: right!important\" href=\"#\"></a>\n      <div class=\"panel-title\">\n        <h1>Routes</h1>\n      </div>\n    </div>\n    <div class=\"panel-nav\">\n    </div>\n    <div class=\"panel-body\">\n      <RoutesList data=\"<- routes\" />\n    </div>\n    <div class=\"panel-footer\">\n    </div>\n  </div>\n</template>\n\n<template id=\"PlacesListItem\">\n  <div class=\"column col-4 col-sm-12\" data-modal=\"true\" click=\"{{assign}}\">\n    <div class=\"card\">\n      <div class=\"card-image\">\n        <Parallax backImage=\"{{item.photo}}\" />\n      </div>\n      <div class=\"card-header\">\n        <h5 class=\"card-title\">{{ item.title | subject }}</h5>\n      </div>\n    </div>\n    <Modal title=\"{{item.title|subject}}\" ui:if=\"modal\" close=\"{{ assign }}\">\n      <span>{{ item.description }}</span>\n      <a href=\"{{item.link}}\" target=\"_blank\">More...</a>\n    </Modal>\n  </div>\n</template>\n\n<template id=\"PlacesList\">\n  <div class=\"columns\">\n    <PlacesListItem item=\"{{item}}\" ui:each=\"item of data\" />\n  </div>\n</template>\n\n<template id=\"RoutesList\">\n  <div class=\"columns\" style=\"max-width:350px;\">\n    <div class=\"column col-12 col-sm-12 mt-1\" ui:each=\"item of data\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <div class=\"tile\">\n            <div class=\"tile-icon\">\n              <figure class=\"avatar avatar-lg bg-primary\" data-initial=\"{{item.title|initials}}\">\n                <img src=\"{{item.photo}}\" class=\"img-responsive\" />\n              </figure>\n            </div>\n            <div class=\"tile-content\">\n              <p class=\"tile-title\">\n                <div>\n                  <a class=\"header\" data=\"{{item}}\" click=\"-> selectRoute\">{{ item.title | subject }}</a>\n                </div>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>");

/***/ }),
/* 73 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ("<body id=\"app\">\n  <template id=\"NewsPage\">\n    <ui:fragment>\n      <Collection ui:ref=\"news\"\n                  data=\"<- db://index/news\"\n                  initials=\":newsInitialTags\" />\n      <NewsList ui:props=\"<- news://info\" />\n      <!-- <BigRedButton data=\":AddNewRecordData\" tooltip=\"tool\" action=\"-> news://openAddNew\" /> -->\n      <!-- <NewsUpdateModal ui:if=\"id\" id=\"{{id}}\" open=\"{{open}}\" data2=\"db:one/news/{{id}}\" /> -->\n      <NewsCreateModal ui:props=\"<- news://newEntry\" submit=\"-> news://saveNew\" cancel=\"-> news://cancelAddNew\" />\n      <Toast ui:if=\"error\" message=\"{{error.message}}\" />\n    </ui:fragment>\n  </template>\n\n  <template id=\"NewsList\">\n    <div class=\"container bg-gray\" style=\"max-width:940px;\">\n      <a name=\"top\"></a>\n      <Box>\n        <Box:1>\n          <h3 class=\"s-title badge text-gray my-2\" data-badge=\"{{counts|counts}}\">Naviny z Olgarda</h3>\n        </Box:1>\n        <Box:2>\n          <SearchBar\n                     input=\"-> news:inputKluq\"\n                     enter=\"-> news:znajdzPoKluqu\"\n                     value=\"{{kluqInput}}\"\n                     suggestions=\"{{suggestions}}\" />\n        </Box:2>\n      </Box>\n      <div class=\"sticky bg-gray py-2\">\n        <Chips data=\"{{tags}}\" click=\"-> news://tag\" />\n      </div>\n      <div class=\"columns\">\n        <NewsListItem ui:props=\"{{item}}\" itemClick=\"-> nav:openItem\" ui:each=\"item of data\">\n          <ui:loading>\n            <div class=\"column col-9 col-sm-12 loading\"></div>\n          </ui:loading>\n          <ui:empty>\n            <h6 class=\"column col-9 col-sm-12\">Nic nema</h6>\n          </ui:empty>\n        </NewsListItem>\n        <Toast ui:if=\"error\" message=\"{{error.message}}\" />\n      </div>\n      <button class=\"btn btn-primary btn-sm\" data-size=\"20\"\n              click=\"-> news://showMore\"\n              ui:if=\"counts.hasMore\">:pakazac_bolsh</button>\n      <a href=\"#top\" ui:if=\"counts.actual|isAbove:5\">:naverx</a>\n    </div>\n  </template>\n\n  <template id=\"NewsListItem\">\n    <div class=\"column col-12 col-sm-12 my-2\">\n      <div class=\"card\">\n        <div class=\"card-header\">\n          <div class=\"tile\">\n            <div class=\"tile-icon\">\n              <!-- <figure class=\"avatar avatar- bg-primary\" data-initial=\"{{subject|initials}}\"> -->\n              <img src=\"{{image}}\"\n                   class=\"img-responsive\" width=\"196\" data-value=\"{{id}}\" click=\"itemClick\" />\n              <!-- </figure> -->\n            </div>\n            <div class=\"tile-content\">\n              <h5 class=\"tile-title\">{{subject|translit}}</h5>\n              <p>\n                <small class=\"text-gray\">{{created_at|date}}</small>\n                <small class=\"text-gray mx-1\"><a href=\"{{link}}\" target=\"_blank\">{{link|hostOf}}</a></small>\n                <small class=\"text-gray\" ui:if=\"tags\">({{tags}})</small>\n              </p>\n            </div>\n          </div>\n        </div>\n        <div class=\"card-body\">\n          <img src=\"/assets/grodno2.svg\" height=\"10\" width=\"10\" />\n          <small class=\"mx-2\">{{preview|translit}}</small>\n        </div>\n        <!-- <div class=\"card-footer\">\n          <button class=\"btn btn-primary btn-sm\">Do</button>\n        </div> -->\n      </div>\n    </div>\n  </template>\n\n  <template id=\"NewsCreateModal\">\n    <Modal ui:if=\"open\" open=\"{{open}}\" title=\"Add a new record\" close=\"{{cancel}}\">\n      <Form fields=\":news_form\" data=\"{{data}}\" change=\"->\" />\n      <Modal:footer>\n        <button class=\"btn btn-primary\" data=\"{{data}}\" click=\"{{submit}}\">:create_new</button>\n      </Modal:footer>\n    </Modal>\n  </template>\n\n  <template id=\"NewsUpdateModal\">\n    <Modal ui:if=\"id\" open=\"{{open}}\" title=\"Edit record ({{id}})\" close=\"-> nav:close\">\n      <Form fields=\":news_form\" data=\"{{data}}\" changed=\"{{assign}}\" />\n      <ui:fragment key=\"footer\">\n        <button class=\"btn btn-primary\" data=\"{{data}}\" click=\"-> db:update/news\">:update</button>\n        <button class=\"btn btn-danger\" click=\"-> db:delete/news/{{id}}\">:delete</button>\n      </ui:fragment>\n    </Modal>\n  </template>\n\n</body>");

/***/ }),
/* 74 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
  appName: 'Olgard',
  appLogo: '/logo.jpg',
  appVersion: '4.0.0',
  sitemap: [{
    name: 'Galownea',
    id: 'main'
  }, {
    name: 'Objavy',
    id: 'ads'
  }, {
    name: 'Naviny',
    id: 'news'
  }, {
    name: 'Calendar',
    id: 'calendar'
  }, {
    name: 'Karta',
    id: 'geomap'
  }, {
    name: 'Leudzi',
    id: 'people'
  }],
  media_links: [{
    name: 'S13.ru',
    id: '//s13.ru'
  }, {
    name: 'Forum',
    id: '//forum.grodno.net/'
  }],
  news_form: [{
    id: 'subject',
    type: 'name',
    typeSpec: 'city'
  }, {
    id: 'preview',
    type: 'text',
    typeSpec: 'unit'
  }, {
    id: 'body',
    type: 'text',
    typeSpec: 'country'
  }, {
    id: 'tags',
    type: 'enum',
    typeSpec: 'tags'
  }],
  tags: [{
    name: 'Padzei',
    id: 'events'
  }, {
    name: 'Gistorya',
    id: 'history'
  }, {
    name: 'Zabavki',
    id: 'amazing'
  }],
  newsInitialTags: 'asoba,gramadstva,dabrabyt,axtung,adukacya,biznes',
  AddNewRecordData: {
    title: 'Add a new record',
    data: {
      subject: 'new record'
    }
  },
  firebaseConfig: {
    apiKey: 'AIzaSyBZ4bR8ArGmHxo-ExfKrlhkMMAj86lSIpw',
    authDomain: 'grodno-24aa8.firebaseapp.com',
    databaseURL: 'https://grodno-24aa8.firebaseio.com',
    projectId: 'grodno-24aa8',
    storageBucket: 'grodno-24aa8.appspot.com',
    messagingSenderId: '1045179719966'
  },
  dbSchema: {
    news: 'id, modified_at',
    users: 'id, modified_at',
    comments: 'id, target, modified_at' // medician: 'id, modified_at, nameasa, specialty, degree, city, organization',
    // organization: 'id, modified_at, city',
    // taxonomy: 'id, modified_at',
    // unit: 'id, modified_at, city, organization',
    // address: 'id, modified_at, city, street, country',
    // patient: 'id, modified_at, birth_date, gender, marital_status, emergency_contact, phone, email, risk_factors',
    // medication: 'id, modified_at, date',
    // slot: 'id, modified_at',
    // visit: 'id, modified_at, city, organization, unit, medician, person, status, date',
    // dict: 'id, modified_at, type, scope, style',
    // order: 'id, modified_at',
    // orderRequest: 'id, modified_at'

  },

  /* Enumerations */
  gender: [{
    "id": "male"
  }, {
    "id": "female"
  }, {
    "id": "unisex"
  }],
  marital: [{
    "id": "married"
  }, {
    "id": "single"
  }],
  allergy: [{
    "id": "penicillin"
  }, {
    "id": "codeine"
  }],
  risk_factors: [{
    "id": "smoking"
  }, {
    "id": "stress"
  }, {
    "id": "alcohol"
  }, {
    "id": "weight"
  }],
  specialty: [{
    "id": "therapist"
  }, {
    "id": "neurologist"
  }, {
    "id": "ophtalmologist"
  }, {
    "id": "pulmonologist"
  }, {
    "id": "cardiologist"
  }],
  category: [{
    "id": "first"
  }, {
    "id": "highest"
  }],
  degree: [{
    "id": "doctor"
  }, {
    "id": "docent"
  }, {
    "id": "professor"
  }],
  status: [{
    "id": "open"
  }, {
    "id": "appointed"
  }, {
    "id": "in_progress"
  }, {
    "id": "done"
  }, {
    "id": "confirmed"
  }],
  orderStatus: [{
    "id": "reserved"
  }, {
    "id": "cancel"
  }, {
    "id": "complete"
  }],
  orderType: [{
    "id": "online"
  }, {
    "id": "ofline"
  }],

  /* Forms */
  medician_form: [{
    "id": "name",
    "type": "name"
  }, {
    "id": "specialty",
    "type": "enum",
    "typeSpec": "specialty"
  }, {
    "id": "category",
    "type": "enum",
    "typeSpec": "category"
  }, {
    "id": "degree",
    "type": "enum",
    "typeSpec": "degree"
  }, {
    "id": "tags",
    "type": "tag"
  }, {
    "id": "city",
    "type": "dict",
    "typeSpec": "city"
  }, {
    "id": "organization",
    "shown": "{{city}}",
    "type": "ref",
    "typeSpec": "organization?city={{city}}"
  }, {
    "id": "unit",
    "shown": "{{organization}}",
    "type": "ref",
    "typeSpec": "unit?organization={{organization}}"
  }],
  organization_form: [{
    "id": "item",
    "type": "ref",
    "typeSpec": "item"
  }, {
    "id": "type",
    "type": "enum",
    "typeSpec": "org_type"
  }, {
    "id": "address",
    "type": "ref",
    "typeSpec": "address"
  }, {
    "id": "head_of",
    "type": "ref",
    "typeSpec": "person"
  }, {
    "id": "name",
    "type": "name"
  }, {
    "id": "parent",
    "type": "ref",
    "typeSpec": "unit"
  }, {
    "id": "weight",
    "type": "ref",
    "typeSpec": "person"
  }, {
    "id": "head_of",
    "type": "ref",
    "typeSpec": "person"
  }],
  address_form: [{
    "id": "city",
    "type": "dict",
    "typeSpec": "city"
  }, {
    "id": "street",
    "type": "ref",
    "typeSpec": "unit"
  }, {
    "id": "country",
    "type": "dict",
    "typeSpec": "country"
  }, {
    "id": "item",
    "type": "embed",
    "typeSpec": "item"
  }],
  patient_form: [{
    "id": "name",
    "type": "name"
  }, {
    "id": "birth_date",
    "type": "dateTime"
  }, {
    "id": "gender",
    "type": "enum",
    "typeSpec": "gender"
  }, {
    "id": "marital_status",
    "type": "enum",
    "typeSpec": "marital_status"
  }, {
    "id": "emergency_contact",
    "type": "issuesCriticality"
  }, {
    "id": "address",
    "type": "ref",
    "typeSpec": "address"
  }, {
    "id": "phone",
    "type": "issueType"
  }, {
    "id": "email",
    "type": "issueName"
  }, {
    "id": "name",
    "type": "span"
  }, {
    "id": "position",
    "type": "timeAgo"
  }, {
    "id": "date"
  }, {
    "id": "medication"
  }, {
    "id": "appearance"
  }, {
    "id": "quantity"
  }, {
    "id": "start_date"
  }, {
    "id": "end_date"
  }, {
    "id": "medician",
    "type": "ref",
    "typeSpec": "staff"
  }, {
    "id": "pharmacy"
  }, {
    "id": "chronic_conditions"
  }, {
    "id": "risk_factors",
    "type": "dict",
    "typeSpec": "risk_factor"
  }, {
    "id": "allergies",
    "type": "enum",
    "typeSpec": "allergy"
  }, {
    "id": "notes",
    "type": "note"
  }]
});

/***/ }),
/* 75 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* harmony default export */ __webpack_exports__["a"] = ({
  "result": {
    "routes": [{
      "_id": 1,
      "id": 1,
      "title": "История древнего города",
      "places": "5,8,14",
      "link": "http://s13.ru",
      "description": "Церковь Святых Бориса и Глеба – уникальный шедевр Гродненской архитектурной школы.",
      "photo": "https://grodno.flatbook.by/img/landmarks/grodno/full/6laau9vtz0088kgk88oos8osk.jpg"
    }, {
      "_id": 2,
      "id": 2,
      "title": "Легенды дышат в ухо",
      "places": "6,8,14",
      "link": "http://s13.ru",
      "description": "Центральный Спортивный Комплекс «Неман» — многофункциональный стадион в Гродно, Беларусь. В основном используется для проведения домашних матчей футбольного клуба «Неман».",
      "photo": "https://www.pressball.by/images/football/stadiums/neman_grodno.JPG"
    }, {
      "_id": 3,
      "id": 3,
      "title": "Паеш брушки",
      "places": "7,8,14",
      "link": "http://s13.ru",
      "description": "злоумышленном устройстве будет продолжать жить и дальше, то с него можно будет продолжать иметь доступ к аккаунту даже после добавления более \"продвинутых\" способов авторизации",
      "photo": "http://bssr.by/uploads/1534491246060dfzg8ynacxs0s0ccwggosswkc.jpg"
    }, {
      "_id": 4,
      "id": 4,
      "title": "Слон Гоша и яго сябры",
      "places": "8,8,14",
      "link": "http://s13.ru",
      "description": "Гродненский зоопарк был основан в 1927 году Яном Кохановским. На сегодняшний день тут работает террариум, зоомагазин, а также детское кафе и бар для родителей. На территории зоопарка также установлены детские аттракционы и контактная площадка «Бабушкин дворик», где каждый желающий может поближе познакомиться с детенышами представленных в зоопарке особей. В зоомагазине можно приобрести грызунов, птиц и аквариумных рыбок. А также корма, клетки и аксессуары для домашних питомцев. Имеется сувенирная продукция.",
      "photo": "https://3.bp.blogspot.com/-oKVeNFgB0Pw/WFGOG5Xkr7I/AAAAAAAAIzs/sETSSuBy4xEuDPejIXCLHHiGSQ5QD477gCEw/s1600/1607151646591.jpg"
    }, {
      "_id": 5,
      "id": 5,
      "title": "Кася, Бася и другие",
      "places": "9,8,14",
      "link": "http://s13.ru",
      "description": "Торговый дом Неман расположен в самом центре Гродно. Здесь вы найдете все, чтобы хорошо выглядеть, отлично провести время, вкусно покушать и побаловать себя чашкой ароматного  кофе. У нас представлены  такие марки, как  Colins, Mothercare, ТВОЕ, Мегатоп, Foroom, Дом меха, Золотая мечта, 7 Карат, а также кафе, ресторан-бистро, детский развлекательный центр, аптека.",
      "photo": "http://my-travel-diary.by/wp-content/uploads/2015/04/DSC_0997.jpg"
    }, {
      "_id": 6,
      "id": 6,
      "title": "Театральный Гродно",
      "places": "10,8,14",
      "link": "http://s13.ru",
      "description": "одним из интереснейших театров Беларуси и близлежащего европейского региона.",
      "photo": "https://www.holiday.by/files/sights/88dca3c21ee405ee672459a6abb05f6a-thumb-900x600-proportional-w.jpg"
    }, {
      "_id": 7,
      "id": 7,
      "title": "Фарный косцел",
      "places": "11,8,14",
      "link": "http://s13.ru",
      "description": "Кафедральный собор Святого Франциска Ксаверия, неофициально называется также Фарный костёл",
      "photo": "https://postim.by/post_photo/19370/xbfblucF1518108503.jpg"
    }, {
      "_id": 8,
      "id": 8,
      "title": "Рыбак рыбака",
      "places": "20,17,7",
      "link": "http://s13.ru",
      "description": "злоумышленном устройстве будет продолжать жить и дальше, то с него можно будет продолжать иметь доступ к аккаунту даже после добавления более \"продвинутых\" способов авторизации",
      "photo": "https://postim.by/post_photo/19370/xbfblucF1518108503.jpg"
    }, {
      "_id": 9,
      "id": 9,
      "title": "Не для слабонервных",
      "places": "21,8,14",
      "link": "http://s13.ru",
      "description": "История необычной экспозиции берёт начало в 50-е годы 20 века.",
      "photo": "https://media.grodno.in/source/photos/2014/04/04/izobrajenie-081-17f0_s_3x2.jpg"
    }],
    "places": [{
      "_id": 1,
      "id": 1,
      "title": "Коложская церковь",
      "latitude": "53.67995898",
      "longitude": "23.81381035",
      "address": "Ulitsa Kolozha 6, Hrodna 230029",
      "description": "Церковь Святых Бориса и Глеба – уникальный шедевр Гродненской архитектурной школы, созданный в XII веке византийским зодчим Петром Милонегом. \nВ 1853 г. в Неман обрушилась южная стена храма. В 1897 г. берег был укреплен, а рухнувшая стена заменена временной деревянной.",
      "tags": "religious",
      "tags2": "landmarks",
      "photo": "https://grodno.flatbook.by/img/landmarks/grodno/full/6laau9vtz0088kgk88oos8osk.jpg"
    }, {
      "_id": 2,
      "id": 2,
      "title": "Стадион Неман",
      "latitude": "53.6887783",
      "longitude": "23.82114887",
      "address": "Komunal'naya Ulitsa 3, 230025, Hrodna",
      "description": "Центральный Спортивный Комплекс «Неман» — многофункциональный стадион в Гродно, Беларусь. В основном используется для проведения домашних матчей футбольного клуба «Неман».",
      "tags": "sport",
      "tags2": "entertainment",
      "photo": "https://www.pressball.by/images/football/stadiums/neman_grodno.JPG"
    }, {
      "_id": 3,
      "id": 3,
      "title": "Парк Жилибера",
      "latitude": "53.68583026",
      "longitude": "23.83702755",
      "address": "vulica Elizy Ažeška 15, Hrodna",
      "tags": "nature & parks",
      "tags2": "city_centre",
      "photo": "http://bssr.by/uploads/1534491246060dfzg8ynacxs0s0ccwggosswkc.jpg"
    }, {
      "_id": 4,
      "id": 4,
      "title": "Зоопарк",
      "latitude": "53.68913408",
      "longitude": "23.84827137",
      "address": "г. Гродно, ул. Тимирязева,11",
      "description": "Гродненский зоопарк был основан в 1927 году Яном Кохановским. На сегодняшний день тут работает террариум, зоомагазин, а также детское кафе и бар для родителей. На территории зоопарка также установлены детские аттракционы и контактная площадка «Бабушкин дворик», где каждый желающий может поближе познакомиться с детенышами представленных в зоопарке особей. В зоомагазине можно приобрести грызунов, птиц и аквариумных рыбок. А также корма, клетки и аксессуары для домашних питомцев. Имеется сувенирная продукция.",
      "tags": "animals",
      "tags2": "for_kids",
      "tags3": "city_centre",
      "photo": "https://3.bp.blogspot.com/-oKVeNFgB0Pw/WFGOG5Xkr7I/AAAAAAAAIzs/sETSSuBy4xEuDPejIXCLHHiGSQ5QD477gCEw/s1600/1607151646591.jpg"
    }, {
      "_id": 5,
      "id": 5,
      "title": "Торговый дом Неман",
      "latitude": "53.68236097",
      "longitude": "23.83144855",
      "address": "г.Гродно, ул.Советская, 18",
      "description": "Торговый дом Неман расположен в самом центре Гродно. Здесь вы найдете все, чтобы хорошо выглядеть, отлично провести время, вкусно покушать и побаловать себя чашкой ароматного  кофе. У нас представлены  такие марки, как  Colins, Mothercare, ТВОЕ, Мегатоп, Foroom, Дом меха, Золотая мечта, 7 Карат, а также кафе, ресторан-бистро, детский развлекательный центр, аптека.",
      "tags": "shopping",
      "tags2": "city_centre",
      "photo": "http://my-travel-diary.by/wp-content/uploads/2015/04/DSC_0997.jpg"
    }, {
      "_id": 6,
      "id": 6,
      "title": "Кукольный театр",
      "latitude": "53.68673248",
      "longitude": "23.83531094",
      "address": "vulica Dziaržynskaha 1/1, Hrodna 230023",
      "description": "Прекрасный актерский ансамбль, изысканная и изящная сценография, современная концептуальная режиссура, глубоко гуманистические и философские спектакли делают Гродненский областной театр кукол одним из интереснейших театров Беларуси и близлежащего европейского региона.",
      "tags": "theatre",
      "tags2": "city_centre",
      "tags3": "for_kids",
      "photo": "https://www.holiday.by/files/sights/88dca3c21ee405ee672459a6abb05f6a-thumb-900x600-proportional-w.jpg"
    }, {
      "_id": 7,
      "id": 7,
      "title": "Фарный косцел",
      "latitude": "53.67825591",
      "longitude": "23.83147001",
      "address": "г. Гродно, пл. Советская 4.",
      "description": "Кафедральный собор Святого Франциска Ксаверия, неофициально называется также Фарный костёл — католический собор в городе Гродно, кафедральный собор Гродненского диоцеза. Один из трёх храмов Белоруссии, носящих почётный титул малая базилика.",
      "tags": "religious",
      "tags2": "landmarks",
      "photo": "https://postim.by/post_photo/19370/xbfblucF1518108503.jpg"
    }, {
      "_id": 8,
      "id": 8,
      "title": "Свято-Покровский кафедральный собор",
      "latitude": "53.67712472",
      "longitude": "23.82663131",
      "address": "vulica Elizy Ažeška 23, Hrodna 230023",
      "description": "Свято-Покровский кафедральный собор находится в Гродно. Храм построили в честь Гродненского гарнизона, воины которого в 1904–1905 гг погибли в русско-японской войне. Их имена высечены на мемориальных досках, которые висят на стенах собора.В храме находится чудотворная икона «Казанской Божьей Матери». По легенде, во время Первой мировой войны эту иконку пытались вывезти в Россию, но задумка не удалась, так как никто не смог сдвинуть её с места.Также в храме находится копия креста религиозного и исторического деятеля белорусской земли Евфросиньи Полоцкой. В этом кресте хранятся частицы мощей святых Беларуси.",
      "tags": "religious",
      "tags2": "landmarks",
      "photo": "https://upload.wikimedia.org/wikipedia/commons/f/f9/%D0%93%D1%80%D0%BE%D0%B4%D0%BD%D0%BE_%D1%83%D0%BB._%D0%9E%D0%B6%D0%B5%D1%88%D0%BA%D0%BE_09.jpg"
    }, {
      "_id": 9,
      "id": 9,
      "title": "Новый Замок",
      "latitude": "53.67604435",
      "longitude": "23.82503271",
      "address": "улица Замковая, 20",
      "description": "Но́вый за́мок в Гро́дно — новый королевский дворец, построенный в Гродно, напротив старого дворца (Старый замок), в 1734—1751 годах во время правления польского короля и великого князя литовского Августа III как летняя резиденция польских королей и великих князей литовских, по проекту Карла Фридриха Пёппельмана.",
      "tags": "architecture",
      "tags2": "landmarks",
      "photo": "https://www.holiday.by/files/sights/grodno_novyj_zamok_608219f410fca31e603c727aecabbd38996-thumb-900x600-proportional-w.jpg"
    }, {
      "_id": 10,
      "id": 10,
      "title": "Костёл Обретения Святого Креста и монастырь бернардинцев",
      "latitude": "53.67478599",
      "longitude": "23.83024693",
      "address": "Mostowa, Hrodna",
      "description": "Костёл Обретения Святого Креста и монастырь бернардинцев в Гродно — крупнейший действующий католический комплекс города. Костёл является одним из старейших на территории всей западной Беларуси. История строительства комплекса началась в конце 15 века и связана с именем великого князя Литовского и короля Польского Александра Ягеллончика.",
      "tags": "religious",
      "tags2": "landmarks",
      "photo": "https://upload.wikimedia.org/wikipedia/commons/thumb/2/20/%D0%90%D0%BD%D1%81%D0%B0%D0%BC%D0%B1%D0%BB%D1%8C_%D0%B1%D1%8B%D0%BB%D0%BE%D0%B3%D0%B0_%D0%BA%D0%BB%D1%8F%D1%88%D1%82%D0%B0%D1%80%D0%B0_%D0%B1%D0%B5%D1%80%D0%BD%D0%B0%D1%80%D0%B4%D0%B7%D1%96%D0%BD%D1%86%D0%B0%D1%9E.jpg/1200px-%D0%90%D0%BD%D1%81%D0%B0%D0%BC%D0%B1%D0%BB%D1%8C_%D0%B1%D1%8B%D0%BB%D0%BE%D0%B3%D0%B0_%D0%BA%D0%BB%D1%8F%D1%88%D1%82%D0%B0%D1%80%D0%B0_%D0%B1%D0%B5%D1%80%D0%BD%D0%B0%D1%80%D0%B4%D0%B7%D1%96%D0%BD%D1%86%D0%B0%D1%9E.jpg"
    }, {
      "_id": 11,
      "id": 11,
      "title": "Драматический театр",
      "latitude": "53.6753262",
      "longitude": "23.82754326",
      "address": "Драматический театр",
      "tags": "theatre",
      "tags2": "entertainment",
      "tags3": "architecture"
    }, {
      "_id": 12,
      "id": 12,
      "title": "Хостел \"Hello, Grodno!\"",
      "latitude": "53.67982554",
      "longitude": "23.8336587",
      "address": "Хостел \"Hello, Grodno!\"",
      "tags": "accomodation",
      "tags2": "city_centre"
    }, {
      "_id": 13,
      "id": 13,
      "title": "Дом-музей Элизы Ожешко",
      "latitude": "53.68421638",
      "longitude": "23.83940935",
      "address": "Дом-музей Элизы Ожешко",
      "tags": "landmarks",
      "tags2": "city_centre",
      "photo": "http://my-travel-diary.by/wp-content/uploads/2015/04/DSC_0948.jpg"
    }, {
      "_id": 14,
      "id": 14,
      "title": "Лютеранская кирха",
      "latitude": "53.68710734",
      "longitude": "23.84038568",
      "address": "Лютеранская кирха",
      "tags": "religious",
      "tags2": "landmarks",
      "tags3": "architecture"
    }, {
      "_id": 15,
      "id": 16,
      "title": "Королинская усадьба Тызенгауза",
      "address": "Королинская усадьба Тызенгауза",
      "tags": "out_of_town",
      "photo": "http://www.karalino.by/_img/slider-img.png"
    }, {
      "_id": 16,
      "id": 17,
      "title": "Дом рыбака",
      "address": "Дом рыбака",
      "tags": "out_of_town",
      "tags2": "nature & parks",
      "tags3": "accomodation"
    }, {
      "_id": 17,
      "id": 18,
      "title": "Гродненская кунсткамера",
      "address": "Гродненская кунсткамера",
      "description": "История необычной экспозиции берёт начало в 50-е годы 20 века. В то время при университете была сформирована кафедра анатомии и начался сбор экспонатов. К 1990 году был выведен Музей уродств человеческого тела. Проведение лекций для студентов началось в 1994 году.2 июля 2013 года была открыта обновлённая экспозиция, насчитывающая более 70 различных экспонатов. Именно тогда ей и было присвоено название «Гродненская кунсткамера». В настоящее время проводятся экскурсии продолжительностью 30–40 минут, во время которых подробно описываются все представленные аномалии человеческого тела. Проводят такие лекции-экскурсии преподаватели медицинского университета. Сотрудники кунсткамеры организуют и бесплатные лекции для сирот, инвалидов и детей из малоимущих семей.",
      "link": "https://my-travel-diary.by/wp-content/uploads/2015/04/DSC01578_1151x766-min-1140x759.jpg",
      "tags": "weird_place",
      "photo": "https://media.grodno.in/source/photos/2014/04/04/izobrajenie-081-17f0_s_3x2.jpg"
    }, {
      "_id": 18,
      "id": 19,
      "title": "Аптека-музей",
      "address": "Аптека-музей",
      "description": "Первая в Беларуси аптека-музей. Открыта в 1996 году и находится в старейшем здании иезуитской аптеки. Экспозиции знакомят с развитием фармации в Гродно, демонстрируется коллекция аптечной посуды конца XIX — первой половины XX вв, инструментов и книг.",
      "tags": "weird_place"
    }, {
      "_id": 19,
      "id": 20,
      "title": "Церковь Рождества Богородицы",
      "address": "Церковь Рождества Богородицы",
      "description": "Рождество-Богородичный монастырь в Гродно — православный храм. При нем находится женский Рождество-Богородичный монастырь. Первые летописные упоминания о нём датированы 1506 годом. Тогда на его месте стоял деревянный храм — Пречистенская церковь."
    }, {
      "_id": 20,
      "id": 21,
      "title": "Швейцарская долина",
      "address": "Швейцарская долина",
      "description": "Швейцарская долина в Гродно — живописный парковый комплекс в центральной части города. История его создания уходит корнями в 18 век и связана с именем гродненского старосты Антония Тизенгауза.",
      "tags": "nature & parks",
      "tags2": "city_centre",
      "photo": "https://media.grodno.in/source/photos/2016/07/12/img-5210-m.jpg"
    }, {
      "_id": 21,
      "id": 22,
      "title": "Еврейское гетто",
      "address": "Еврейское гетто",
      "description": "Еврейское гетто в Гродно существовало в период с ноября 1941 по май 1943 года. Оно было создано нацистами с целью принудительного переселения гродненских евреев. По статистическим данным к началу военных действий на территории Гродно проживало больше 18500 евреев, что на тот момент составляло половину городского населения. Город был в числе первых захваченных в Беларуси, а его оккупация прошла в течение одного дня.",
      "photo": "https://media.grodno.in/source/photos/2016/10/18/img-7906-m.jpg"
    }, {
      "_id": 22,
      "id": 23,
      "title": "Бригитский костел",
      "address": "Бригитский костел",
      "description": "Костёл Благовещения Пресвятой Девы Марии и монастырь бригиток — архитектурный комплекс 17 века, построенный в Гродно. Храм располагается на улице Молодёжной в историческом центре города."
    }, {
      "_id": 23,
      "id": 24,
      "title": "Форт #2",
      "address": "Форт #2",
      "description": "Фотификационное сооружение на территории Гродненской крепости. \nВ 1915 году крепость находилась в осадном положении. В связи с этим была объявления эвакуации солдат, во время которой все форты должны были подорвать. Форт №2 не стал исключением. \nВ годы Великой Отечественной войны форт приобрёл печальную известность. Именно здесь, на его развалинах, немецко-фашистские захватчики неоднократно проводили массовые казни военнопленных и мирных жителей. В расстрелах погибли тысячи ни в чём не повинных людей.",
      "photo": "https://media.grodno.in/source/photos/2017/01/19/img-2169-m.jpg"
    }, {
      "_id": 24,
      "id": 25,
      "title": "Музей истории религии",
      "address": "Музей истории религии",
      "description": "музей существует с 6 июня 1977 года. В коллекции музея находится порядка 85.000 экспонатов, которые в совокупности составляют 14 коллекций.",
      "tags": "culture",
      "photo": "https://media.grodno.in/source/photos/2017/01/25/img-7301-m.jpg"
    }, {
      "_id": 25,
      "id": 26,
      "title": "Пожарная каланча",
      "address": "Пожарная каланча",
      "description": "Пожарная каланча в Гродно — памятник архитектуры 20 века, на территории которого располагается действующая пожарно-спасательная часть. Находится на пересечении старейших улиц города — Замковой и Давида Городенского.",
      "tags": "culture",
      "tags2": "architecture",
      "photo": "https://media.grodno.in/source/photos/2017/01/25/img-7320-m04899ba9_6x4.jpg"
    }, {
      "_id": 26,
      "id": 27,
      "title": "Усадьба Станиславово",
      "address": "Усадьба Станиславово",
      "description": "Усадьба Станиславово в Гродно — памятник архитектуры, созданный в 18 веке по проекту «зодчего Гродно» Джузеппе Сакко. Заказчиком был последний польский король и великий князь Станислав Август Понятовский, сделавший имение своей загородной резиденцией.",
      "tags": "architecture",
      "photo": "https://media.grodno.in/source/photos/2017/03/11/img-3847-mac63e7dc_4x3.jpg"
    }, {
      "_id": 27,
      "id": 28,
      "title": "Августовский канал",
      "address": "Августовский канал",
      "description": "Августовский канал в районе Гродно — уникальный памятник гидротехнической архитектуры 18–19 веков, соединяющий бассейны рек Висла и Неман. Канал является одной из красивейших и важнейших достопримечательностей Гродненского района и располагается на территории двух соседствующих государств: Республики Польши и Беларуси.",
      "tags": "out_of_town"
    }, {
      "_id": 28,
      "id": 29,
      "title": "Старое городское кладбище",
      "address": "Старое городское кладбище",
      "description": "Старое городское кладбище в Гродно — старейшее место захоронения в городе и одно из самых старых в Беларуси. Расположено на улице Антонова за центральным городским рынком.",
      "tags": "culture",
      "tags2": "weird_place",
      "photo": "https://media.grodno.in/source/photos/2017/03/24/img-6327-m.jpg"
    }, {
      "_id": 29,
      "id": 30,
      "title": "Цудоуня",
      "address": "Цудоуня",
      "description": "изделия ручной работы от белорусских мастеров: этнография и этностиль, белорусские традиции, реконструкция; белорусские книги, сувениры и открытки. Здесь - доступные вещи для всех и уникальные статусные подарки. У нас вы найдете украшения, предметы интерьера, предметы домашнего обихода, одежду с традиционными орнаментами, народные музыкальные инструменты, керамику, плетеные изделия из лозы и соломы, резьбу по дереву, кованые изделия и многое другое. У нас есть белорусские книги для детей и взрослых (современная литература, классика в переводе, история и краеведение, этнография). Кроме предложения качественных предметов белорусского ремесла и сувениров, мы можем рассказать о техниках изготовления вещей, представленных здесь, рассказать об истории вещей и народных традициях. * \"Цуд\" по-белорусски - \"чудо\"; тое есть \"место с чудесами\".",
      "tags": "book_store",
      "tags2": "local_goods",
      "tags3": "souveniurs"
    }, {
      "_id": 30,
      "id": 31,
      "title": "Торговый центр “OldCity”",
      "address": "Торговый центр “OldCity”",
      "description": "Торговый центр “OldCity” – замечательное место для шоппинга и отдыха всей семьей. Расположен в северной части Гродно, в микрорайоне “Девятовка”.",
      "tags": "shopping"
    }, {
      "_id": 31,
      "id": 32,
      "title": "Галерея \"У Майстра\"",
      "address": "Галерея \"У Майстра\"",
      "description": "Галерея \"У Майстра\" это первая частная галерея города. Рекомендуем любителям искусства посмотреть интересные выставки, а также можно заглянуть за оригинальным подарком.",
      "tags": "art_gallery",
      "tags2": "local_goods",
      "tags3": "souveniurs"
    }, {
      "_id": 32,
      "id": 33,
      "title": "Магазин \"Ратушный\"",
      "address": "Магазин \"Ратушный\"",
      "description": "В центре Гродно купить сувенир с символикой города и изображением его знаковых мест сегодня можно в любом магазине, даже продовольственном. К примеру, в расположенном на площади Советской магазине «Ратушный» предлагают около 6 тысяч наименований сувенирной продукции! Товарооборот ее здесь за последний год вырос вдвое. Самые ходовые товары: магниты, льняные полотенца, бельевой трикотаж, колготки, носки.",
      "tags": "local_goods",
      "tags2": "souveniurs"
    }],
    "tags": [{
      "_id": 1,
      "id": "accomodation",
      "of": "active"
    }, {
      "_id": 2,
      "id": "active"
    }, {
      "_id": 3,
      "id": "amusement_park",
      "of": "active"
    }, {
      "_id": 4,
      "id": "animals",
      "of": "active"
    }, {
      "_id": 5,
      "id": "architecture",
      "of": "active"
    }, {
      "_id": 6,
      "id": "art_gallery",
      "of": "active"
    }, {
      "_id": 7,
      "id": "bank",
      "of": "business"
    }, {
      "_id": 8,
      "id": "bar",
      "of": "business"
    }, {
      "_id": 9,
      "id": "beauty",
      "of": "business"
    }, {
      "_id": 10,
      "id": "bicycle_rent",
      "of": "business"
    }, {
      "_id": 11,
      "id": "book_store",
      "of": "business"
    }, {
      "_id": 12,
      "id": "bowling",
      "of": "business"
    }, {
      "_id": 13,
      "id": "business"
    }, {
      "_id": 14,
      "id": "cafe",
      "of": "business"
    }, {
      "_id": 15,
      "id": "casino",
      "of": "business"
    }, {
      "_id": 16,
      "id": "cinema",
      "of": "culture"
    }, {
      "_id": 17,
      "id": "city_centre",
      "of": "culture"
    }, {
      "_id": 18,
      "id": "coffee",
      "of": "culture"
    }, {
      "_id": 19,
      "id": "culture"
    }, {
      "_id": 20,
      "id": "dentist",
      "of": "culture"
    }, {
      "_id": 21,
      "id": "eating out",
      "of": "culture"
    }, {
      "_id": 22,
      "id": "entertainment"
    }, {
      "_id": 23,
      "id": "exibition",
      "of": "culture"
    }, {
      "_id": 24,
      "id": "florist",
      "of": "culture"
    }, {
      "_id": 25,
      "id": "food, wine & nightlife",
      "of": "culture"
    }, {
      "_id": 26,
      "id": "for_kids",
      "of": "culture"
    }, {
      "_id": 27,
      "id": "Grodno_local",
      "of": "culture"
    }, {
      "_id": 28,
      "id": "gyms & workout",
      "of": "culture"
    }, {
      "_id": 29,
      "id": "hoarses",
      "of": "culture"
    }, {
      "_id": 30,
      "id": "hospital",
      "of": "culture"
    }, {
      "_id": 31,
      "id": "landmarks",
      "of": "shopping"
    }, {
      "_id": 32,
      "id": "large_companies",
      "of": "shopping"
    }, {
      "_id": 33,
      "id": "local_goods",
      "of": "shopping"
    }, {
      "_id": 34,
      "id": "museum",
      "of": "shopping"
    }, {
      "_id": 35,
      "id": "nature & parks",
      "of": "shopping"
    }, {
      "_id": 36,
      "id": "out_of_town",
      "of": "shopping"
    }, {
      "_id": 37,
      "id": "religious",
      "of": "shopping"
    }, {
      "_id": 38,
      "id": "romantic",
      "of": "shopping"
    }, {
      "_id": 39,
      "id": "shopping"
    }, {
      "_id": 40,
      "id": "souveniurs",
      "of": "shopping"
    }, {
      "_id": 41,
      "id": "sport",
      "of": "entertainment"
    }, {
      "_id": 42,
      "id": "student",
      "of": "entertainment"
    }, {
      "_id": 43,
      "id": "swimming",
      "of": "entertainment"
    }, {
      "_id": 44,
      "id": "theatre",
      "of": "entertainment"
    }, {
      "_id": 45,
      "id": "transport",
      "of": "entertainment"
    }, {
      "_id": 46,
      "id": "vegetarian",
      "of": "entertainment"
    }, {
      "_id": 47,
      "id": "weird_place",
      "of": "entertainment"
    }],
    "meta": [{
      "_id": 1,
      "id": "id",
      "value": "grodnoexpl"
    }, {
      "_id": 2,
      "id": "name",
      "value": "Grodno Explorer"
    }, {
      "_id": 3,
      "id": "author",
      "value": "Litskevich"
    }, {
      "_id": 4,
      "id": "dataUrl",
      "value": "https://script.google.com/macros/s/AKfycbzWtsvIwdC_3v7fiI03ex4NDwbRXH6g_zl9Vts2BLToyTy4QGI/exec"
    }, {
      "_id": 5,
      "id": "description"
    }, {
      "_id": 6,
      "id": "architecture"
    }]
  }
});

/***/ }),
/* 76 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__(1);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__(2);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__(3);

// EXTERNAL MODULE: ./lib/furnitura/index.js + 8 modules
var furnitura = __webpack_require__(0);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.replace.js
var es6_regexp_replace = __webpack_require__(6);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.match.js
var es6_regexp_match = __webpack_require__(49);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.to-string.js
var es6_regexp_to_string = __webpack_require__(36);

// CONCATENATED MODULE: ./lib/armatura/utils.js







function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


const RE_SINGLE_PLACEHOLDER = /^\{\{([a-zA-Z0-9.:_$|]+)\}\}$/;
const RE_PLACEHOLDER = /\{\{([a-zA-Z0-9.:_$|]+)\}\}/g;
const VALUES = {
  true: true,
  false: false,
  null: null
}; // functional

const fnName = ctor => (/^function\s+([\w$]+)\s*\(/.exec(ctor.toString()) || [])[1] || Object(furnitura["f" /* nextId */])('$C');
const runInBrowser = (w => fn => w.requestAnimationFrame(() => fn.call(w, w.document)))(window); // Prop

const boundFn = ($, fn) => {
  const map = $.$boundFnMap || ($.$boundFnMap = new Map());
  let bound = map.get(fn);

  if (!bound) {
    bound = fn.bind($.impl);
    map.set(fn, bound);
  }

  return bound;
};
const cleanUp = c => ['parent', 'children', 'owner', 'impl', 'app', 'ctx'].forEach(k => {
  delete c[k];
});
const filterMapKey = (src, key) => {
  const r = new Map();
  src.forEach((v, k) => {
    if (k !== key) {
      r.set(k, v);
    }
  });
  return r;
}; // Compilation

function expression(v) {
  if (v[0] === ':') {
    return placeholder(v);
  }

  if (!v.includes('{{')) {
    const r = v in VALUES ? VALUES[v] : v;
    return () => r;
  }

  if (v.match(RE_SINGLE_PLACEHOLDER)) {
    return placeholder(v.slice(2, -2).trim());
  }

  return stringInterpolation(v);
}
function stringInterpolation(v) {
  let fnx = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  const pattern = v.replace(RE_PLACEHOLDER, (s, expr) => {
    fnx.push(placeholder(expr));
    return '{{' + (fnx.length - 1) + '}}';
  });
  return c => pattern.replace(/\{\{(\d+)\}\}/g, (s, idx) => {
    const r = fnx[idx](c);
    return !r && r !== 0 ? '' : r;
  });
}
function placeholder(expr) {
  return withPipes(expr, key => key[0] === ':' ? (k => c => c.string(k))(key.slice(1).trim()) : c => c.prop(key));
}
function withPipes(expr, fn) {
  const pipes = expr.split('|').map(s => s.trim());
  const key = pipes.shift();
  const initial = fn(key);
  return !pipes.length ? initial : c => pipes.reduce((r, pk) => c.reduce(r, pk), initial(c));
} // DOM

const DOM_SETTERS = {
  '#text': (e, k, v) => e.textContent = v == null ? '' : v,
  disabled: (e, k, v) => e[k] = v ? true : null,
  class: (e, k, v) => {
    if (v.includes(':')) {
      v = ('' + v).split(' ').map(s => {
        const [cl, expr] = s.split(':');
        if (expr === undefined) return cl;
        const [fl, eq] = expr.split('==');
        const disabled = eq ? fl !== eq : ['', '0', 'false', null].indexOf(fl) > -1;
        return disabled ? '' : cl;
      }).join(' ');
    }

    e.className = v;
  },
  selected: (e, k, v) => e[k] = v ? true : null,
  value: (e, k, v) => e[k] = v == null ? '' : v,
  checked: (e, k, v) => e[k] = !!v,
  data: function data(e, _, v) {
    this.$dataset = v;

    if (v) {
      Object.keys(v).forEach(k => {
        e.dataset[k] = v[k];
      });
    }
  },
  keypress: function keypress(e, key, v) {
    this.setListener('keyup', !v ? null : ev => {
      if (ev.keyCode !== 13 && ev.keyCode !== 27) {
        this.$attributes[key](_objectSpread({
          value: e.value
        }, e.$dataset), ev);
        setTimeout(() => e.focus(), 0);
      }

      return false;
    });
  },
  enter: function enter(e, key, v) {
    this.setListener('keyup', !v ? null : ev => {
      if (ev.keyCode === 13) {
        this.$attributes[key](_objectSpread({
          value: e.value
        }, e.$dataset), ev);
      }

      if (ev.keyCode === 13 || ev.keyCode === 27) {
        e.blur();
      }

      return false;
    });
  },
  toggle: function toggle(e, key, v) {
    this.setListener('change', !v ? null : ev => {
      this.$attributes[key](_objectSpread({
        value: e.checked
      }, e.$dataset), ev);
      return false;
    });
  }
};
const DOM_VALUE_COMPARATORS = {
  value: (e, their, _) => e.value === their,
  _: (_2, their, mine) => their === mine
};
// CONCATENATED MODULE: ./lib/armatura/compile.js




function compile_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { compile_defineProperty(target, key, source[key]); }); } return target; }

function compile_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



const compile_makeApplicator = function makeApplicator(get) {
  let k = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '_';
  return (c, acc) => {
    if (get) {
      const val = get(c);

      if (k.slice(0, 5) === 'data-') {
        acc['data'] = compile_objectSpread({}, acc['data'], {
          [k.slice(5)]: val in VALUES ? VALUES[val] : val
        });
      } else {
        acc[k] = val;
      }
    }
  };
};

const compile_emitter = function emitter(v, k) {
  let fctr = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : expression(v);
  return c => c['$' + k] || (c['$' + k] = (data, opts) => c.emit(fctr(c), data, opts));
};

const hasSlot = (c, key) => {
  let r = false;
  c.content.forEach(e => {
    r = r || e.tag === c.tag + ':' + key;
  });
  return r;
};

function compileEach(_ref, _ref2) {
  let [itemId,, expr] = _ref;
  let {
    tag,
    attrs,
    uid,
    nodes
  } = _ref2;
  const $each = {
    itemId
  };
  const r = {
    tag: 'ui:fragment',
    uid: 'each:' + expr + uid,
    $each,
    key: attrs.get('key')
  };

  if (expr.slice(0, 2) === '<-') {
    const pipes = expr.slice(2).split('|').map(s => s.trim());
    const key = pipes.shift();
    const fn = !pipes.length ? c => c.connect(key, rr => ({
      $data: rr
    })) : c => c.connect(key, rr => ({
      $data: pipes.reduce((acc, pk) => c.reduce(acc, pk), rr)
    }));
    (r.inits || (r.inits = [])).push(fn);
  } else {
    (r.updates || (r.updates = [])).push(compile_makeApplicator(expression('{:'.includes(expr[0]) ? expr : '{{' + expr + '}}'), '$data'));
  }

  let $nodes = nodes;

  if (nodes && nodes.length) {
    const emptyNode = $nodes.find(e => e.tag === 'ui:empty');

    if (emptyNode) {
      $each.emptyNode = emptyNode.nodes.map(compileNode);
      $nodes = $nodes.filter(e => e !== emptyNode);
    }

    const loadingNode = $nodes.find(e => e.tag === 'ui:loading');

    if (loadingNode) {
      $each.loadingNode = loadingNode.nodes.map(compileNode);
      $nodes = $nodes.filter(e => e !== loadingNode);
    }
  }

  $each.itemNode = compileNode({
    tag,
    attrs,
    uid,
    nodes: $nodes
  });
  return r;
}
function compileIf(aIf, _ref3) {
  let {
    tag,
    attrs,
    uid,
    nodes
  } = _ref3;
  const iff = {};
  const r = {
    tag: 'ui:fragment',
    uid: 'if:' + aIf + uid,
    key: attrs.get('key'),
    $if: iff
  };
  const neg = aIf[0] === '!';
  const expr = neg ? aIf.slice(1) : aIf;

  if (expr.slice(0, 2) === '<-') {
    (r.inits || (r.inits = [])).push(c => c.connect(expr.slice(2).trim(), neg ? rr => ({
      $data: !rr
    }) : rr => ({
      $data: !!rr
    })));
  } else if (expr.slice(0, 5) === 'slot:') {
    const gttr = c => hasSlot(c, expr.slice(5));

    (r.updates || (r.updates = [])).push((c, acc) => {
      acc['$data'] = neg ? !gttr(c) : gttr(c);
    });
  } else {
    const gttr = expression('{:'.includes(expr[0]) ? expr : '{{' + expr + '}}');
    (r.updates || (r.updates = [])).push((c, acc) => {
      acc['$data'] = neg ? !gttr(c) : gttr(c);
    });
  }

  let $nodes = null;

  if (nodes && nodes.length) {
    const ifElse = nodes.find(e => e.tag === 'ui:else');
    const ifThen = nodes.find(e => e.tag === 'ui:then');

    if (ifElse) {
      iff.else = ifElse.nodes.map(compileNode);
      $nodes = ifThen ? ifThen.nodes : [{
        tag,
        attrs,
        uid,
        nodes: nodes.filter(e => e !== ifElse)
      }];
    } else if (ifThen) {
      $nodes = [{
        tag,
        attrs,
        uid,
        nodes: ifThen.nodes
      }];
    }
  }

  iff.then = ($nodes || [{
    tag,
    attrs,
    uid,
    nodes
  }]).map(compileNode);
  return r;
}
function compileNode(_ref4) {
  let {
    tag,
    attrs,
    uid,
    nodes
  } = _ref4;
  // ui:each
  const each = attrs.get('ui:each');

  if (each) {
    return compileEach(each.split(' '), {
      tag,
      attrs: filterMapKey(attrs, 'ui:each'),
      uid,
      nodes
    });
  } // ui:if


  const aIf = attrs.get('ui:if');

  if (aIf) {
    return compileIf(aIf, {
      tag,
      attrs: filterMapKey(attrs, 'ui:if'),
      uid,
      nodes
    });
  }

  const r = {
    tag,
    uid,
    id: attrs.get('id'),
    ref: attrs.get('ui:ref'),
    nodes: nodes.map(compileNode)
  }; // ui:props

  let aProps = attrs.get('ui:props');

  if (aProps) {
    if (aProps.slice(0, 2) === '<-') {
      (r.inits || (r.inits = [])).push(c => c.connect(aProps.slice(2).trim(), rr => rr));
    } else {
      const get = expression(aProps);
      (r.updates || (r.updates = [])).push((c, acc) => Object.assign(acc, get(c)));
    }
  } // attrs


  attrs.forEach((v, k) => {
    if (k.slice(0, 3) !== 'ui:') {
      const v2 = v.slice(0, 2); // console.log('compileAttrs', k, v);

      if (v2 === '<-') {
        const gttr = expression(v.slice(2).trim());
        (r.inits || (r.inits = [])).push(c => c.connect(gttr(c), rr => ({
          [k]: rr
        })));
      } else if (v2 === '->') {
        (r.updates || (r.updates = [])).push(compile_makeApplicator(compile_emitter(v.slice(2).trim(), k), k));
      } else {
        if (!v.includes('{{') && v[0] !== ':') {
          (r.initials || (r.initials = {}))[k] = v;
        } else {
          (r.updates || (r.updates = [])).push(compile_makeApplicator(expression(v), k));
        }
      }
    }
  });
  return r;
}
// CONCATENATED MODULE: ./lib/armatura/register.js




const REGISTRY = new Map();
const CACHE = {};

const reg = ctr => {
  const ctor = typeof ctr === 'function' ? ctr : Object.assign(function () {}, ctr);
  const name = ctor.NAME = ctor.NAME || ctor.name || fnName(ctor);
  const text = ctor.TEMPLATE || ctor.prototype.TEMPLATE;

  ctor.$TEMPLATE = () => CACHE[name] || (CACHE[name] = text ? compileNode(Object(furnitura["g" /* parseXML */])(text, name)) : []);

  REGISTRY.set(name, ctor);
};

reg({
  NAME: 'ui:fragment'
});
const typeByTag = REGISTRY.get.bind(REGISTRY);
const registerTypes = function registerTypes() {
  for (var _len = arguments.length, types = new Array(_len), _key = 0; _key < _len; _key++) {
    types[_key] = arguments[_key];
  }

  return types.forEach(reg);
};
const register_reset = () => Object.keys(CACHE).forEach(k => {
  delete CACHE[k];
});
// CONCATENATED MODULE: ./lib/armatura/render.js



const deep = [];
const render = (c, $content, ctx) => {
  c.eachChild(cc => !$content.has(cc.uid) ? cc.done() : 0);

  if (!$content.size) {
    return;
  }

  deep.unshift('  ');
  const ch = c.children || (c.children = new Map());
  c.rendering = true;
  $content.forEach((_ref, uid) => {
    let {
      tag,
      content,
      owner,
      props,
      inits,
      initials,
      ref,
      $if,
      $each
    } = _ref;
    let cc = ch.get(uid);

    if (!cc) {
      cc = new component_Component(typeByTag(tag), {
        props,
        tag,
        ref,
        $if,
        $each,
        uid,
        ctx,
        owner,
        inits,
        initials,
        parent: c
      });
      ch.set(uid, cc);
    }

    cc.owner = owner;
    cc.content = content;
    cc.prevElt = ctx.cursor; // console.log(deep.join(''), 'render', tag, props);

    cc.up(props);
  });
  c.rendering = false;
  c.eachChild(cc => !cc.isInited ? cc.init() : 0);
  deep.shift();
};
// CONCATENATED MODULE: ./lib/armatura/resolve.js


const resolveSlot = (owner, id, acc) => {
  owner.content.forEach((v, k) => {
    if (id) {
      if (v.tag === owner.tag + ':' + id) {
        v.content.forEach(vv => acc.set(k, vv));
      }
    } else if (v.tag.slice(0, owner.tag.length + 1) !== owner.tag + ':') {
      acc.set(k, v);
    }
  });
  return acc;
};

const resolveTemplateArray = function resolveTemplateArray(owner, tmpl) {
  let acc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Map();
  return tmpl && tmpl.length ? tmpl.reduce((m, t) => resolveTemplate(owner, t, m), acc) : null;
};

const resolveProps = (props, owner) => props && props.length ? props.reduce((acc, fnProp) => {
  fnProp(owner, acc);
  return acc;
}, {}) : null;

function resolveRegular(acc, owner, _ref) {
  let {
    tag,
    updates,
    initials,
    inits,
    nodes,
    uid,
    id,
    ref,
    $if,
    $each
  } = _ref;

  if (tag === 'ui:slot') {
    return resolveSlot(owner, id, acc);
  }

  const props = resolveProps(updates, owner);
  const content = resolveTemplateArray(owner, nodes);
  const $tag = tag === 'ui:tag' ? props.tag : tag;
  return acc.set($tag + uid, {
    tag: $tag,
    id,
    ref,
    owner,
    initials,
    inits,
    $if,
    $each,
    props,
    content
  });
}

function resolveTemplate(owner, tmpl) {
  let acc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Map();

  if (!tmpl) {
    return acc;
  }

  if (tmpl.reduce) {
    return tmpl.length ? resolveTemplateArray(owner, tmpl, acc) : acc;
  }

  return resolveRegular(acc, owner, tmpl);
}
// CONCATENATED MODULE: ./lib/armatura/dom.js



function dom_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { dom_defineProperty(target, key, source[key]); }); } return target; }

function dom_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



const dom_doc = window.document;
class dom_Element {
  constructor($) {
    let attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    this.elt = $.tag === '#text' ? dom_doc.createTextNode('') : dom_doc.createElement($.tag);
    this.$attributes = {};
    this.$ = $;
    this.applyAttributes(attrs); // console.log('new element' + $.tag)
  }

  done() {
    const e = this.elt; // console.log('done element' + this.$.tag)

    const lstnrs = this.$listeners;

    if (lstnrs) {
      Object.keys(lstnrs).forEach(k => e.removeEventListener(k, lstnrs[k]));
      this.$listeners = null;
    }

    const p = e.parentElement;

    if (p) {
      p.removeChild(e);
    }

    this.elt = this.$attributes = null;
  }

  set(delta) {
    this.delta = delta;
    return this.$.nodes || delta && Object.keys(delta).length;
  }

  render(p) {
    const e = this.elt;
    const $ = this.$;

    if ($.content) {
      e.cursor = null;
      render($, $.content, e);
      e.cursor = null;
    }

    if (this.delta) {
      this.applyAttributes(this.delta);
      this.delta = null;
    }

    const before = p.cursor ? p.cursor.nextSibling : p.firstChild;

    if (!before) {
      p.appendChild(e);
    } else if (e !== before) {
      p.insertBefore(e, before);
    }

    p.cursor = e;
  }

  applyAttributes(theirs) {
    const e = this.elt;
    const mines = this.$attributes;

    for (let key in theirs) {
      if (theirs.hasOwnProperty(key) && !(DOM_VALUE_COMPARATORS[key] || DOM_VALUE_COMPARATORS._)(e, theirs[key], mines[key])) {
        const value = theirs[key];
        const setter = DOM_SETTERS[key]; // console.log('setAttribute' + this.$.tag, key, value)

        if (setter) {
          setter.call(this, e, key, value);
        } else if (typeof value === 'function' || this.listeners && this.listeners.has(key)) {
          const T = this;
          this.setListener(key, !value ? null : ev => {
            T.$attributes[key](dom_objectSpread({
              value: e.value
            }, this.$dataset), ev);
            return false;
          });
        } else {
          this.setAttribute(key, value);
        }
      }
    }

    this.$attributes = theirs;
  }

  setAttribute(key, value) {
    if (value != null) {
      this.elt.setAttribute(key, value);
    } else {
      this.elt.removeAttribute(key);
    }
  }

  setListener(key, fn) {
    if (fn) {
      if (!this.listeners) {
        this.listeners = new Map();
      }

      if (!this.listeners.has(key)) {
        this.elt.addEventListener(key, fn, false);
        this.listeners.set(key, fn);
      }
    } else if (this.listeners && this.listeners.has(key)) {
      this.elt.removeEventListener(key, this.listeners.get(key));
      this.listeners.delete(key);
    }
  }

}
// CONCATENATED MODULE: ./lib/armatura/component.js




function component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { component_defineProperty(target, key, source[key]); }); } return target; }

function component_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }






class component_Component {
  constructor(Ctor, options) {
    Object.assign(this, options);

    if (this.parent) {
      this.api = this.parent.api;
      this.impl = Ctor ? new Ctor({
        ref: this.ref,
        api: this.api,
        props: component_objectSpread({}, this.props, this.initials)
      }) : new dom_Element(this, component_objectSpread({}, this.props, this.initials));
    } else {
      this.api = this.impl = new Ctor();
    }

    if (this.ref) {
      const hidden = this.api[this.ref];
      this.api[this.ref] = this.impl;
      this.defer(() => {
        this.api[this.ref] = hidden;
      });
    }
  }

  renderFragment() {
    const acc = new Map();

    if (this.$each) {
      const $each = this.$each;
      const {
        $data: data
      } = this.impl;
      const {
        itemId,
        itemNode,
        emptyNode,
        loadingNode
      } = $each;
      const {
        tag,
        updates,
        initials = {},
        nodes,
        uid
      } = itemNode;
      this.content = new Map();

      if (data && data.length) {
        data.forEach((d, index) => {
          const id = "".concat(uid, "-$").concat(d.id || index);
          const $this = Object.create(this);
          $this.impl = {
            [itemId]: d,
            [itemId + 'Index']: index
          };
          resolveTemplate($this, {
            tag,
            initials,
            updates,
            nodes,
            uid: id
          }, acc);
        });
      } else if (!data) {
        if (loadingNode) {
          resolveTemplate(this.owner, loadingNode, acc);
        }
      } else if (!data.length) {
        if (emptyNode) {
          resolveTemplate(this.owner, emptyNode, acc);
        }
      }
    } else if (this.$if) {
      const $if = this.$if;
      const {
        $data
      } = this.impl;
      const node = $data ? $if.then : $if.else;
      this.content = new Map();
      resolveTemplate(this, node, acc);
    } else if (this.content) {
      this.content.forEach((v, k) => acc.set(k, v));
    }

    render(this, acc, this.ctx);
  }

  render() {
    this.ctx.cursor = this.prevElt;

    if (this.impl.render) {
      this.impl.render(this.ctx);
    } else if (this.tag === 'ui:fragment') {
      this.renderFragment();
    } else {
      render(this, resolveTemplate(this, this.impl.constructor.$TEMPLATE()), this.ctx);
    }
  }

  init() {
    if (this.isDone) {
      return;
    }

    this.isInited = true;

    if (this.inits) {
      this.inits.forEach(f => this.defer(f(this)));
      delete this.inits;
    }

    if (this.impl.init) {
      this.defer(this.impl.init(this));
    }
  }

  done() {
    if (this.isDone) {
      return;
    }

    this.isDone = true;

    if (this.impl.done) {
      this.impl.done(this);
    }

    this.eachChild(c => {
      c.parent = null;
      c.done();
    });

    if (this.parent) {
      this.parent.children.delete(this.uid);
    }

    if (this.defered) {
      this.defered.forEach(f => f(this));
      delete this.defered;
    }

    cleanUp(this);
  }

  defer(fn) {
    if (fn) {
      (this.defered || (this.defered = [])).push(fn);
    }
  }

  eachChild(fn) {
    let ch = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.children;

    if (ch) {
      ch.forEach(fn);
    }
  }

  up(Δ) {
    if (this.isDone) {
      return;
    }

    if (Δ && Δ.then) {
      Δ.then(r => this.up(r));
      return;
    }

    const c = this;
    const impl = c.impl;

    if (this.impl.set) {
      this.impl.set(Δ);
    } else if (Δ) {
      Object.entries(Δ).forEach((_ref) => {
        let [k, their] = _ref;
        const mine = impl[k];

        if (typeof their !== 'undefined' && their !== mine) {
          const setter = impl['set' + k[0].toUpperCase() + k.slice(1)];

          if (setter) {
            setter.call(impl, their);
          } else {
            impl[k] = their;
          }
        }
      });
    }

    (this.parent.rendering ? this : this.parent).render();
  }

  prop(propId) {
    let $ = this.impl.get ? this.impl.get() : this.impl;
    const [pk, ...path] = propId.split('.');
    const gettr = $[Object(furnitura["b" /* capitalize */])(pk, 'get')];
    let value = undefined;

    if (gettr) {
      value = gettr.call($, this);
    } else if (pk in $) {
      value = $[pk];
    } else {
      return this.owner ? this.owner.prop(propId) : value;
    }

    if (path.length) {
      value = path.reduce((r, p) => r ? r[p] : r, value);
    }

    return typeof value === 'function' ? boundFn(this, value) : value;
  }

  connect(url, applicator) {
    const cb = (error, r) => this.up(component_objectSpread({
      error
    }, applicator ? applicator(r) : r));

    return url ? this.api.emitter.connect(url, cb) : cb(null, this.owner.impl);
  }

  emit(key, data) {
    let $ = this;

    for (; $.owner && $.tag === 'ui:fragment'; $ = $.owner) {}

    if (key) {
      this.api.emitter.emit(key, data).then(r => $.up(component_objectSpread({
        error: null
      }, r))).catch(error => $.up({
        error
      }));
    } else {
      $.up(component_objectSpread({
        error: null
      }, data));
    }
  }

  string(key) {
    return this.resource(key) || Object(furnitura["e" /* humanize */])(key);
  }

  resource(key) {
    try {
      return Object.R(key);
    } catch (ex) {
      console.error('resource', ex);
      return null;
    }
  }

  reduce(value, key) {
    try {
      const [id, ...args] = key.split(':');
      const fn = this.resource('reducers.' + id);
      return fn ? fn.apply(this.impl, [value, ...args]) : value;
    } catch (ex) {
      console.error('reduce', ex);
      return value;
    }
  }

}
// CONCATENATED MODULE: ./lib/armatura/api.js


class api_Api {
  constructor() {
    const bundle = {};
    const api = this;

    const notify = function notify(key) {
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      const listeners = bundle[key];

      if (listeners) {
        bundle[key].forEach(e => e(...args));
      }
    };

    const subscribe = (key, fn) => {
      const uuid = Object(furnitura["f" /* nextId */])();
      const listeners = bundle[key] || (bundle[key] = new Map());
      fn();
      listeners.set(uuid, fn);
      return () => listeners.delete(uuid);
    };

    const emit = (key, data) => {
      const url = Object(furnitura["j" /* urlParse */])(key, {
        data
      });
      const {
        type,
        target
      } = url;

      try {
        const ref = type ? api[type] : api;
        const method = ref && ref[Object(furnitura["b" /* capitalize */])(target, 'on')];
        const result = method.call(ref, url);
        const promise = result && result.then ? result : Promise.resolve(result);
        return promise.then(r => {
          notify(type);
          return r;
        });
      } catch (ex) {
        console.error('emit ' + type + ':' + target, ex);
        return Promise.reject(ex);
      }
    };

    const connect = (key, cb) => {
      const url = Object(furnitura["j" /* urlParse */])(key);
      const {
        type,
        target
      } = url;
      return subscribe(type, () => {
        try {
          const ref = type ? api[type] : api;
          const method = ref && ref[Object(furnitura["b" /* capitalize */])(target, 'get')];
          const val = method.call(ref, url);

          if (val && val.then) {
            val.then(r => cb(null, r), cb);
          } else {
            cb(null, val);
          }
        } catch (ex) {
          console.error('connect ' + type + ':' + target, ex);
          cb(ex);
        }
      });
    };

    this.emitter = {
      notify,
      subscribe,
      emit,
      connect
    };
  }

}
// CONCATENATED MODULE: ./lib/armatura/index.js
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return register; });






function register() {
  for (var _len = arguments.length, types = new Array(_len), _key = 0; _key < _len; _key++) {
    types[_key] = arguments[_key];
  }

  registerTypes(...types);
  const meta = new Map([[0, {
    tag: types[0].NAME
  }]]);
  return {
    run(TheApi, ctx) {
      const root = new component_Component(TheApi || api_Api, {});

      const renderBoot = function renderBoot() {
        let met = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Map();
        return doc => render(root, met, ctx || doc.body);
      };

      runInBrowser(renderBoot(meta)); // returns with reset funct

      return () => {
        runInBrowser(renderBoot());
        root.done();
        register_reset();
      };
    }

  };
}

/***/ }),
/* 77 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./common/services/Firebase.js
var Firebase = __webpack_require__(63);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__(2);

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__(1);

// EXTERNAL MODULE: ./lib/furnitura/index.js + 8 modules
var furnitura = __webpack_require__(0);

// EXTERNAL MODULE: ./common/services/AService.js
var AService = __webpack_require__(7);

// CONCATENATED MODULE: ./common/services/NavigationService.js



function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



class NavigationService_NavigationService extends AService["a" /* AService */] {
  constructor(_ref) {
    let {
      api,
      ref
    } = _ref;
    super(this, {
      api,
      ref,
      state: {}
    });
  }

  init() {
    const hashchange = () => this.emit(this.ref + ':hash', {
      value: window.location.hash.slice(1)
    });

    window.addEventListener('hashchange', hashchange);
    hashchange();
  }

  update(d) {
    const {
      target,
      path,
      params
    } = d;
    const module = (target === '*' ? this.state.module : target) || 'main';
    this.state = _objectSpread({
      module,
      page: Object(furnitura["b" /* capitalize */])(module) + Object(furnitura["b" /* capitalize */])(path[0] === '*' ? this.state.page : path[0] || '') + 'Page',
      section: path[1] === '*' ? this.state.section : path[1] || 'main'
    }, params);
  }

  getParam(k) {
    return this.state.params[k];
  }

  getState() {
    return this.state;
  }

  getModuleName() {
    return this.getItems().find(e => e.id === this.state.module).name;
  }

  onHash(_ref2) {
    let {
      data: {
        value
      }
    } = _ref2;
    this.update(Object(furnitura["j" /* urlParse */])(value));
  }

  getItems() {
    return Object.R('sitemap');
  }

  getSitemap() {
    return Object.R('sitemap');
  }

  getEmpty() {
    return [];
  }

  onUpdate(_ref3) {
    let {
      path: [ns],
      data
    } = _ref3;
    this.update(ns ? {
      [ns]: data
    } : data);
  }

  onClose(_) {
    return this.update({
      open: false,
      newEntry: null,
      id: null
    });
  }

  onAddNew(_) {
    return this.update({
      open: true,
      newEntry: {},
      id: null
    });
  }

  onOpenItem(_ref4) {
    let {
      data: {
        value
      }
    } = _ref4;
    return this.update({
      open: true,
      id: value,
      newEntry: null
    });
  }

  onSort(_ref5) {
    let {
      data: {
        value
      }
    } = _ref5;
    return this.update({
      sortBy: value
    });
  }

}
// CONCATENATED MODULE: ./common/services/LocalStorage.js


const nope = () => {};

const parse = s => s ? JSON.parse(s) : undefined;

class LocalStorage {
  constructor() {
    const nope = () => {};

    const cache = {};
    const storage = window.localStorage;

    this.get = key => cache[key] || (cache[key] = parse(storage.getItem(key)));

    this.assign = function (delta) {
      let cb = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : nope;
      Object.entries(delta).forEach(function (key) {
        let val = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;
        cache[key] = val;
        storage.setItem(key, JSON.stringify(val));
      });
      cb();
    };
  }

  transform(key, fn, cb) {
    const e = this.get(key);
    return this.assign({
      [key]: fn(e)
    }, cb);
  }

  toggleItemProperty(key, item, cb) {
    return this.transform(key, function () {
      let items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      if (items[item.id]) {
        delete items[item.id];
      } else {
        items[item.id] = item;
      }

      return items;
    }, cb);
  }

  toggleArrayElement(key, item, cb) {
    return this.transform(key, function () {
      let items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      const elt = items.find(e => e.id === item.id);
      return elt ? items.reduce((r, e) => e === elt ? r : r.concat([e]), []) : items.concat([item]);
    }, cb);
  }

  arrangeArrayElement(key, id, dir, cb) {
    return this.transform(key, function () {
      let items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      const index = items.indexOf(items.find(e => e.id == id));

      if (index > -1) {
        const from = index + (dir === 'up' ? -1 : 1);

        if (from >= 0 && from < items.length) {
          const r = items[index];
          items[index] = items[from];
          items[from] = r;
        }
      }

      return items;
    }, cb);
  }

}
// EXTERNAL MODULE: ./node_modules/dexie/dist/dexie.es.js
var dexie_es = __webpack_require__(69);

// CONCATENATED MODULE: ./common/services/Database.js



function Database_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { Database_defineProperty(target, key, source[key]); }); } return target; }

function Database_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }




class Database_DatabaseService extends AService["a" /* AService */] {
  constructor(options) {
    super(options);
    const {
      schema,
      name = 'dexie'
    } = this;
    const dexie = new dexie_es["a" /* default */](name, 1);
    dexie.version(1).stores(Database_objectSpread({}, schema, {
      _meta: 'id'
    }));
    Object.assign(this, {
      dexie,
      remote: this.api.firebase,
      cache: {},
      dbkeys: Object.keys(schema)
    });
  }

  openDb() {
    // Open the database
    this.dexie.open().then(() => this.log('opened')).catch(this.error);
  }

  checkVersion() {
    if (this.api.local.get('$version') !== this.version) {
      this.api.local.assign({
        $version: this.version
      });
    }
  }

  init() {
    this.openDb();
    this.checkVersion();
    this.syncAll();
  }

  getMeta() {
    return this.getTable('_meta').toArray().then(arr => Object(furnitura["a" /* arrayToHash */])(arr));
  }

  getTableMeta(id) {
    return this.getMeta().then(meta => meta[id] || {});
  }

  syncAll() {
    return this.getMeta().then(meta => Promise.all(this.dbkeys.map(id => [id, Object(furnitura["c" /* dig */])(meta, "".concat(id, ".last_modified"))]).map((_ref) => {
      let [id, since = 0] = _ref;
      return this.remote.getCollection(id, since).then(docs => [id, docs, docs.reduce((last, _ref2) => {
        let {
          modified_at: at = 0
        } = _ref2;
        return Math.max(at, last);
      }, since)]);
    }))).then(all => this.localUpdate(all.reduce((d, _ref3) => {
      let [coll, docs, last_modified] = _ref3;
      d["_meta"].push({
        id: "".concat(coll),
        last_modified
      });
      d[coll] = docs;
      this.log('sync', coll, last_modified, docs);
      return d;
    }, {
      _meta: []
    }))).then(this.notify).then(() => {
      this.log('sync all: OK');
    }).catch(err => this.log('sync all: error: ' + err));
    ;
  }

  syncTable(id) {
    return this.getTableMeta(id).then(meta => this.remote.getCollection(id, Object(furnitura["c" /* dig */])(meta, "last_modified")).then(docs => [docs, docs.reduce((last, e) => e.modified_at > last ? e.modified_at : last, Object(furnitura["c" /* dig */])(meta, "last_modified"))])).then((_ref4) => {
      let [docs, last_modified] = _ref4;
      return this.localUpdate({
        [id]: docs,
        _meta: {
          [id]: {
            id,
            last_modified
          }
        }
      });
    }).then(this.notify).then(() => {
      this.log('DB sync OK');
    }).catch(err => this.log('DB sync error: ' + err));
  }

  getTable(coll) {
    return this.dexie.table(coll);
  }

  getOne(url) {
    const [kind, id] = url.path;
    let coll = this.getCollection(kind);
    return coll.get(id).then(d => d ? Database_objectSpread({}, d, {
      kind
    }) : null);
  }

  getDict(url) {
    const [type] = url.path;
    return this.getCollection('dict').where('type').equals(type).toArray();
  }

  getIndex(url) {
    url = Object(furnitura["j" /* urlParse */])(url);
    const [kind, index, indexKey, desc] = url.path;

    if (!this.dbkeys.includes(kind)) {
      return null;
    }

    let coll = this.getTable(kind); // if (index && indexKey) {
    //   coll = coll.where(index).equals(indexKey);
    //   coll = desc === 'desc' ? coll.desc() : coll;
    // }
    // const filter = url.params;
    // if (filter) {
    //   coll = coll.filter(filterFn(filter));
    // }

    return coll.toArray();
  }

  eachDelta(delta) {
    let fn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : furnitura["d" /* fnId */];
    const bulks = {};

    for (let coll in delta) {
      if (this.dbkeys.includes(coll)) {
        bulks[coll] = delta[coll].map(fn);
      }
    }

    return bulks;
  }

  localUpdate(delta) {
    const bulks = this.eachDelta(delta);

    if (delta._meta) {
      bulks._meta = delta._meta;
    }

    const ops = Object.keys(bulks).map(key => this.dexie[key].bulkPut(bulks[key]));
    return Promise.all(ops);
  }

  async update(delta) {
    await this.localUpdate(delta);
    return this.remote.update(delta);
  }

  async onUpsert(_ref5) {
    let {
      path: [kind],
      data
    } = _ref5;

    if (!data.id) {
      data.id = this.remote.nextId(kind);
    }

    await this.update({
      [kind]: [data]
    });
    this.log('onUpsert', data);
  }

  async onUpdate(_ref6) {
    let {
      path: [kind],
      data
    } = _ref6;
    await this.update({
      [kind]: [data]
    });
    this.log('Updated', data);
  }

  async onDelete(_ref7) {
    let {
      path: [kind, id]
    } = _ref7;
    await this.update({
      [kind]: [{
        id,
        status: 'deleted'
      }]
    });
    this.log('Deleted', id);
  }

}
// CONCATENATED MODULE: ./common/services/UserService.js

class UserService_UserService extends AService["a" /* AService */] {
  get fb() {
    return this.api.firebase;
  }

  init() {
    this.fb.listenUser(user => {
      if (user) {// User is signed in.
        // var isAnonymous = user.isAnonymous
        // var uid = user.uid
        // var userRef = app.dataInfo.child(app.users);
        // var useridRef = userRef.child(app.userid);
        // useridRef.set({
        //   locations: "",
        //   theme: "",
        //   colorScheme: "",
        //   food: ""
        // });
      } else {
        this.fb.signInAnonymously(); // User is signed out.
        // ...
      } // ...


      this.api.notify(this.ref);
    });
  }

  getInfo() {
    const user = this.fb.getCurrentUser();

    if (user !== null) {
      user.providerData.forEach(function (profile) {// console.log('Sign-in provider: ' + profile.providerId)
        // console.log('  Provider-specific UID: ' + profile.uid)
        // console.log('  Name: ' + profile.displayName)
        // console.log('  Email: ' + profile.email)
        // console.log('  Photo URL: ' + profile.photoURL)
      });
    }

    return user || {};
  }

  onLogin() {
    this.fb.linkProvider();
  }

  onLogout() {
    this.fb.logout();
  }

}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.array.sort.js
var es6_array_sort = __webpack_require__(35);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.replace.js
var es6_regexp_replace = __webpack_require__(6);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__(3);

// EXTERNAL MODULE: ./lib/pramova/mova/index.js + 3 modules
var mova = __webpack_require__(20);

// CONCATENATED MODULE: ./common/services/Collection.js






function Collection_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { Collection_defineProperty(target, key, source[key]); }); } return target; }

function Collection_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }





const analyzeDataByTags = function analyzeDataByTags(data, selection) {
  let initials = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';
  const sel = [...selection];
  const reshta = {
    id: 'zzz',
    name: '[reshta]',
    count: 0,
    selected: false
  };

  if (sel.length || !initials) {
    const actualData = data.filter(e => sel.reduce((r, s) => r && e.$tags.has(s), true));
    const tagsHash = actualData.reduce((r, e) => {
      e.$tags.forEach(id => {
        if (id === reshta.id) {
          return r;
        }

        const tag = r[id] || (r[id] = {
          id,
          name: id,
          count: 0,
          selected: selection.has(id)
        });
        tag.count++;
      });
      return r;
    }, {});

    if (sel.length === 1 && selection.has(reshta.id)) {
      tagsHash[reshta.id] = Object.assign(reshta, {
        selected: true
      });
    }

    return {
      actualData,
      tagsHash
    };
  } else {
    const actualData = data;
    const tagsHash = initials.split(',').map(id => ({
      id,
      name: id,
      count: 0,
      selected: false
    })).concat(reshta);
    actualData.reduce((r, e) => {
      let contained = false;
      tagsHash.forEach(tag => {
        if (e.$tags.has(tag.id)) {
          tag.count++;
          contained = true;
        }
      });

      if (!contained) {
        e.$tags.add(reshta.id);
        reshta.count++;
      }

      return r;
    }, {});
    return {
      actualData,
      tagsHash
    };
  }
};

const getSuggestions = (data, kluq) => {
  const words = {};
  data.forEach(e => e.$searchData.replace(/\w{3,}/g, w => {
    words[w] = 1;
    return '';
  }));
  return Object.keys(words).filter(e => e.includes(kluq)).map(s => ({
    name: s,
    id: s
  }));
};

class Collection_Item {
  constructor(opts, opts2) {
    Object.assign(this, opts, opts2);
  }

  get ts() {
    return this.$ts || (this.$ts = this.modified_at || this.created_at);
  }

  get $tags() {
    return this.$$tags || (this.$$tags = new Set((this.tags || '').split(',').filter(Boolean)));
  }

  get title() {
    return this.$title || (this.$title = this.name || this.subject || this.topic || this.id);
  }

  get $searchData() {
    return this.$$searchData || (this.$$searchData = (this.title + ' ' + Object(mova["a" /* translit */])(this.title) + ' ' + this.preview + ' ' + Object(mova["a" /* translit */])(this.preview)).toLowerCase());
  }

}

class Collection_Collection extends AService["a" /* AService */] {
  constructor(options) {
    super(options);
    this.selection = new Set();
    this.shownLimit = 50;
    this.sortBy = '-ts';
    this.kluqPoshuku = '';
  }

  setData(data) {
    this.data = data.map(e => new Collection_Item(e));
    this.notify();
  }

  getInfo() {
    if (!this.data) {
      return {};
    }

    const searchedData = !this.kluqPoshuku ? this.data : this.data.filter(e => e.$searchData.includes(this.kluqPoshuku));
    const suggestions = !this.inputKluqPoshuku ? null : getSuggestions(this.data, this.inputKluqPoshuku);
    const {
      actualData,
      tagsHash
    } = analyzeDataByTags(searchedData, this.selection, this.initials);
    const tags = Object.values(tagsHash).sort((a, b) => a.selected === b.selected ? a.id > b.id ? 1 : -1 : !a.selected ? 1 : -1); // const filter = state.filter;
    // let items = data; // data ? data.filter(filterFn(filter)) : 

    const sortedData = Object(furnitura["i" /* sortBy */])(actualData, this.sortBy);
    return {
      tags,
      data: sortedData.slice(0, this.shownLimit),
      kluq: this.kluqPoshuku,
      kluqInput: this.inputKluqPoshuku,
      suggestions: this.kluqPoshuku === this.inputKluqPoshuku ? null : suggestions,
      counts: {
        total: this.data.length,
        actual: actualData.length,
        hasMore: this.shownLimit < actualData.length
      }
    };
  }

  onTag(_ref) {
    let {
      data: {
        id
      }
    } = _ref;

    if (this.selection.has(id)) {
      this.selection.delete(id);
    } else {
      this.selection.add(id);
    }
  }

  onZnajdzPoKluqu(_ref2) {
    let {
      data: {
        value
      }
    } = _ref2;
    this.inputKluqPoshuku = value || '';
    this.kluqPoshuku = value || '';
  }

  onInputKluq(_ref3) {
    let {
      data: {
        value
      }
    } = _ref3;
    this.inputKluqPoshuku = value || '';
  }

  onSortBy(_ref4) {
    let {
      data: {
        value
      }
    } = _ref4;
    this.sortBy = value || '-ts';
  }

  onShowMore(_ref5) {
    let {
      data: {
        size = 50
      }
    } = _ref5;
    this.shownLimit += size;
  }
  /**
   * New Entry
   */


  getNewEntry() {
    return this.newEntry || {};
  }

  onOpenAddNew(_ref6) {
    let {
      data
    } = _ref6;
    this.newEntry = Collection_objectSpread({}, data, this.newEntry, {
      open: true
    });
  }

  onCancelAddNew() {
    this.newEntry = Collection_objectSpread({}, this.newEntry, {
      open: false
    });
  }

  async onSaveNew(_ref7) {
    let {
      data
    } = _ref7;
    delete data.id;
    await this.upsert(data);
    this.newEntry = Collection_objectSpread({}, this.newEntry, {
      data,
      open: false
    });
  }

  async onUpdate(_ref8) {
    let {
      path: [kind],
      data
    } = _ref8;
    await this.update({
      [kind]: [data]
    });
  }

  async onDelete(_ref9) {
    let {
      path: [kind, id]
    } = _ref9;
    await this.update({
      [kind]: [{
        id,
        status: 'deleted'
      }]
    });
  }

  upsert(data, cb) {
    this.log('upsert', data);
    return this.emit('db://upsert/' + this.table + '', data);
  }

}
// CONCATENATED MODULE: ./common/services/ResService.js



function ResService_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { ResService_defineProperty(target, key, source[key]); }); } return target; }

function ResService_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }


class ResService_ResService extends AService["a" /* AService */] {
  getResource(_ref) {
    let {
      path
    } = _ref;
    return Object.R(path[0]);
  }

  getEnum(_ref2) {
    let {
      path
    } = _ref2;
    return Object.R(path[0]).map(e => ResService_objectSpread({}, e, {
      name: e.name || Object.R(e.id)
    }));
  }

}
// CONCATENATED MODULE: ./common/services/GWA.js
class SWRunner {
  init() {
    if (window.location.host === 'localhost') {
      return;
    }

    const navigator = window.navigator;

    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.register('/sw.js', {
        scope: '/'
      }).then(function (registration) {
        console.log('Service Worker Registered');
      });
      navigator.serviceWorker.ready.then(function (registration) {
        console.log('Service Worker Ready');
      });
    }
  }

}
class GARunner {
  init() {
    if (window.location.host === 'localhost') {
      return;
    }

    (function (i, s, o, g, r, a, m) {
      i['GoogleAnalyticsObject'] = r;
      i[r] = i[r] || function () {
        (i[r].q = i[r].q || []).push(arguments);
      }, i[r].l = 1 * new Date();
      a = s.createElement(o), m = s.getElementsByTagName(o)[0];
      a.async = 1;
      a.src = g;
      m.parentNode.insertBefore(a, m);
    })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

    ga('create', this.account, 'auto');
    ga('send', 'pageview');
  }

}
// CONCATENATED MODULE: ./common/services/index.js
/* concated harmony reexport Firebase */__webpack_require__.d(__webpack_exports__, "Firebase", function() { return Firebase["a" /* Firebase */]; });
/* concated harmony reexport NavigationService */__webpack_require__.d(__webpack_exports__, "NavigationService", function() { return NavigationService_NavigationService; });
/* concated harmony reexport LocalStorage */__webpack_require__.d(__webpack_exports__, "LocalStorage", function() { return LocalStorage; });
/* concated harmony reexport DatabaseService */__webpack_require__.d(__webpack_exports__, "DatabaseService", function() { return Database_DatabaseService; });
/* concated harmony reexport UserService */__webpack_require__.d(__webpack_exports__, "UserService", function() { return UserService_UserService; });
/* concated harmony reexport Collection */__webpack_require__.d(__webpack_exports__, "Collection", function() { return Collection_Collection; });
/* concated harmony reexport ResService */__webpack_require__.d(__webpack_exports__, "ResService", function() { return ResService_ResService; });
/* concated harmony reexport SWRunner */__webpack_require__.d(__webpack_exports__, "SWRunner", function() { return SWRunner; });
/* concated harmony reexport GARunner */__webpack_require__.d(__webpack_exports__, "GARunner", function() { return GARunner; });









/***/ }),
/* 78 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__(2);

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__(1);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.search.js
var es6_regexp_search = __webpack_require__(62);

// CONCATENATED MODULE: ./common/components/Filter.js




function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

let COUNTER = 1;
class FilterChipValueInputMenu {
  TEMPLATE() {
    return (
      /* html */
      "\n  <ul class=\"menu\">\n    <li class=\"menu-item\" ui:each=\"item of items\">\n      <a click=\"{{onSelect}}\" data-value=\"{{item.id}}\" data-name=\"{{itemName}}\">\n        <div class=\"tile tile-centered mx-1\">\n          <figure class=\"avatar avatar-xs bg-primary\" data-initial=\"{{itemName|initials}}\"></figure>\n          <div class=\"tile-content\">{{itemName}}</div>\n        </div>\n      </a>\n    </li>\n  </ul>"
    );
  }

  init() {
    const meta = this.meta;

    if (meta.type === 'enum') {
      Object.app.fetch(meta.typeSpec, (err, items) => {
        this.assign({
          items
        });
      });
    }

    if (meta.type === 'dict') {
      Object.app.fetch('db:dict/' + meta.typeSpec, (err, items) => {
        this.assign({
          items
        });
      });
    }
  }

  get itemName() {
    return this.item.name || Object.app.resource(this.item.id);
  }

}
class FilterChipValueInput {
  TEMPLATE() {
    return (
      /* html */
      "\n<div class=\"form-autocomplete\">\n  <div class=\"form-autocomplete-input\">\n    <input ui:ref=\"inputElt\" class=\"form-input m-1\" type=\"text\" \n     style=\"height: 1.0rem; margin: .2rem\"\n     value=\"{{value}}\"\n     placeholder=\"value...\" \n     focus=\"{{onFocus}}\"\n     blur=\"{{onBlur}}\"\n     input=\"{{onInput}}\">\n  </div>\n  <ui:menuType ui:if=\"showMenu\" meta=\"{{chip.data}}\" onSelect=\"{{onSelectMenuItem}}\"/>\n</div>"
    );
  }

  get menuType() {
    return 'FilterChipValueInputMenu';
  }

  get parent() {
    return this;
  }

  init() {
    setTimeout(() => this.inputElt.focus(), 0);
  }

  onInput(_ref) {
    let {
      value
    } = _ref;
    const hasSuggestions = !!this.filter.data.filter(e => e.name.includes(value)).length;
    const search = hasSuggestions ? value : this.search;
    this.filter.assign({
      search
    });
  }

  onFocus() {
    this.assign({
      showMenu: true
    });
  }

  onBlur() {
    setTimeout(() => this.assign({
      showMenu: false
    }), 1000);
  }

  onSelectMenuItem(_ref2) {
    let {
      value,
      name
    } = _ref2;
    this.assign({
      value: name,
      showMenu: false
    });
    this.chip.setValue(value);
  }

}
class FilterChip {
  TEMPLATE() {
    return (
      /* html */
      "\n<div class=\"chip\">\n  <figure class=\"avatar avatar-xs bg-primary\" data-initial=\"and\" ui:if=\"index\"></figure>\n  <span>{{data.name}}</span>\n  <b class=\"bg-secondary rounded mx-1\">{{data.op|upper}}</b>\n  <FilterChipValueInput chip=\"{{this}}\"/>\n  <a class=\"btn btn-clear\" aria-label=\"Close\" role=\"button\" data-id=\"{{data.id}}\" click=\"{{onRemove}}\"></a>\n</div>"
    );
  }

  getThis() {
    return this;
  }

  onRemove(_ref3) {
    let {
      id
    } = _ref3;
    this.filter.removeChip(id);
  }

  setValue(value) {
    this.filter.updateChip(this.data.id, {
      value
    });
  }

}
class FilterAppendChip {
  TEMPLATE() {
    return (
      /* html */
      "\n<div class=\"form-autocomplete chip\">\n  <div class=\"form-autocomplete-input\">\n    <input class=\"form-input m-1\" type=\"text\" style=\"height: 1.0rem; margin: .2rem\"\n     value=\"{{value}}\"\n     placeholder=\"add filter by...\" \n     focus=\"{{onFocus}}\"\n     blur=\"{{onBlur}}\"\n     enter=\"{{onEnter}}\"\n     input=\"{{onInput}}\">\n  </div>\n  <ul class=\"menu\" ui:if=\"showMenu\">\n    <li class=\"menu-item\" ui:each=\"item of menu\">\n      <a click=\"{{onMenuItem}}\" data-field=\"{{item.field}}\">\n        <div class=\"tile tile-centered mx-1\">\n          <figure class=\"avatar avatar-xs bg-primary\" data-initial=\"{{item.name|initials}}\"></figure>\n          <div class=\"tile-content\">{{item.name}}</div>\n        </div>\n      </a>\n    </li>\n  </ul>\n</div>"
    );
  }

  onInput(_ref4) {
    let {
      value
    } = _ref4;
    this.filter.applySuggestion(value);
  }

  onFocus() {
    this.assign({
      showMenu: true
    });
  }

  onBlur() {
    setTimeout(() => this.assign({
      showMenu: false
    }), 1000);
  }

  onEnter() {
    this.onMenuItem(this.menu[0]);
  }

  onMenuItem(chip) {
    this.assign({
      showMenu: false
    });
    this.filter.addNewChip(chip);
  }

}
class Filter {
  TEMPLATE() {
    return (
      /* html */
      "\n<div class=\"bg-gray\">\n  <FilterChip ui:each=\"chip of chips\" data=\"{{chip}}\" filter=\"{{this}}\" index=\"{{chipIndex}}\"/>\n  <FilterAppendChip filter=\"{{this}}\" value=\"{{search}}\" menu=\"{{suggestedChips}}\"/>\n</div>"
    );
  }

  getThis() {
    return this;
  }

  setData(data) {
    this.suggestedChips = this.data = (data || []).map(e => _objectSpread({}, e, {
      name: e.id,
      field: e.id
    }));
  }

  getChips() {
    return this.chips || (this.chips = []);
  }

  addNewChip(_ref5) {
    let {
      field
    } = _ref5;
    const datum = this.data.find(e => e.field === field);
    const chips = this.getChips().concat(_objectSpread({}, datum, {
      op: 'eq',
      id: COUNTER++
    }));
    this.assign({
      chips,
      suggestedChips: this.data,
      search: ''
    });
  }

  removeChip(id) {
    const chips = this.getChips().filter(e => e.id !== id);
    this.assign({
      chips
    });
    this.onChanged(chips);
  }

  updateChip(id, delta) {
    const chips = this.getChips();
    const chip = chips.find(e => e.id === id);
    Object.assign(chip, delta);
    this.onChanged(chips);
  }

  onChanged(chips) {
    const obj = chips.reduce((r, e) => {
      r[e.field + '__' + r.op] = e.value;
      return r;
    }, {});
    this.changed({
      [this.field || 'filter']: obj
    });
  }

  applySuggestion(search) {
    const suggestedChips = this.data.filter(e => e.name.includes(search));
    this.assign(suggestedChips.length ? {
      search,
      suggestedChips
    } : {});
  }

}
// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.replace.js
var es6_regexp_replace = __webpack_require__(6);

// CONCATENATED MODULE: ./common/components/Form.js




function Form_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { Form_defineProperty(target, key, source[key]); }); } return target; }

function Form_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

const FIELD_TYPES = {
  enum: 'EnumField',
  ref: 'RefField',
  text: 'TextareaField',
  dict: 'DictField',
  bool: 'SwitchField'
};
class FormField {
  get TEMPLATE() {
    return (
      /* html */
      "\n    <ui:fragment ui:if=\"fieldShown\">\n      <ui:tag tag=\"{{fieldType}}\" ui:props=\"{{fieldProps}}\" onChange=\"{{fieldChange}}\"/>\n    </ui:fragment>"
    );
  }

  getFieldChange() {
    return (_ref) => {
      let {
        value
      } = _ref;
      return this.onChange({
        [this.id]: value
      });
    };
  }

  getFieldType() {
    return FIELD_TYPES[this.type] || 'TextField';
  }

  getFieldShown() {
    const field = this;
    return true;
  }

  getFieldProps() {
    const field = this;
    const data = this.data || {};
    const value = data[field.id];
    return Form_objectSpread({}, field, {
      typeSpec: field.typeSpec ? field.typeSpec.replace(/\{\{(\w+)\}\}/g, (_, p) => this.getData()[p]) : null,
      caption: field.id,
      value: value === undefined ? null : value
    });
  }

}
class Form {
  get TEMPLATE() {
    return (
      /* html */
      "\n    <div class=\"docs-demo columns\">\n      <div class=\"column col-9 col-sm-12\">\n        <div class=\"form-horizontal\">\n          <FormField ui:each=\"field of fields\" ui:props=\"{{field}}\" data=\"{{data}}\" onChange=\"{{up}}\"/>\n        </div>\n      </div>\n    </div>"
    );
  }

  getUp() {
    return delta => {
      this.data = Form_objectSpread({}, this.data, delta);
      this.change && this.change({
        data: this.data
      });
    };
  }

}
// CONCATENATED MODULE: ./common/components/components.html
/* harmony default export */ var components = ("<body>\n\n    <template id=\"Container\">\n        <div class=\"container bg-gray\">\n            <ui:slot />\n        </div>\n    </template>\n\n    <template id=\"PageRouter\">\n        <ui:tag tag=\"{{page}}\" ui:props=\"{{params}}\" />\n    </template>\n\n    <template id=\"NavTree\">\n        <ul class=\"nav\">\n            <li class=\"nav-item {{item.class}}\" ui:each=\"item of data\">\n                <a href=\"#{{item.id}}\">\n                    <span>{{item.name}}</span>\n                    <span ui:if=\"item.label\" class=\"label label-error\">{{item.label}}</span>\n                </a>\n                <NavTree ui:if=\"item.subs\" data=\"{{item.subs}}\" />\n            </li>\n        </ul>\n    </template>\n\n    <template id=\"Panel\">\n        <div class=\"panel\" style=\"{{style}}\">\n            <div class=\"panel-header\">\n                <div class=\"panel-title\">\n                    <ui:slot id=\"title\" />\n                </div>\n            </div>\n            <div class=\"panel-nav\" ui:if=\"slot:nav\">\n                <ui:slot id=\"nav\" />\n            </div>\n            <div class=\"panel-body\">\n                <ui:slot />\n            </div>\n            <div class=\"panel-footer\" ui:if=\"slot:footer\">\n                <ui:slot id=\"footer\" />\n            </div>\n        </div>\n    </template>\n\n    <template id=\"Card\">\n        <div class=\"card\">\n            <div class=\"card-image\" ui:if=\"image\">\n                <img src=\"{{image}}\" class=\"img-responsive\" />\n            </div>\n            <div class=\"card-header\">\n                <a href=\"#{{id}}\">\n                    <h5 class=\"card-title\">{{title}}</h5>\n                </a>\n                <div ui:if=\"subtitle\" class=\"card-subtitle text-gray\">{{subtitle}}</div>\n            </div>\n            <div class=\"card-body\">\n                <ui:slot />\n            </div>\n            <div class=\"card-footer\">\n                <ui:slot id=\"footer\" />\n            </div>\n        </div>\n    </template>\n\n    <template id=\"Sidebar\">\n        <div class=\"off-canvas off-canvas-sidebar-show\">\n            <a class=\"off-canvas-toggle btn btn-primary btn-action show-lg\"\n               href=\"#sidebar\">\n                <i class=\"icon icon-menu\" />\n            </a>\n            <div id=\"sidebar\" class=\"off-canvas-sidebar\">\n                <div class=\"fixed\">\n                    <ui:slot id=\"aside\" />\n                </div>\n            </div>\n            <a class=\"off-canvas-overlay\" href=\"#\"></a>\n            <div class=\"off-canvas-content\">\n                <ui:slot />\n            </div>\n        </div>\n    </template>\n\n    <template id=\"Navbar\">\n        <header class=\"navbar bg-secondary\" style=\"height:48px\">\n            <section class=\"navbar-section mx-2\">\n                <ui:slot />\n            </section>\n            <section class=\"navbar-center\" ui:if=\"logo\">\n                <img src=\"{{logo}}\" alt=\"\" height=\"40\" width=\"40\" />\n            </section>\n            <section class=\"navbar-section mx-2\">\n                <ui:slot id=\"right\" />\n            </section>\n        </header>\n    </template>\n\n    <template id=\"Chips\">\n        <div class=\"ui mini labels\">\n            <span class=\"chip bg-success:{{tag.selected}} bg-secondary:{{tag.selected|not}} badge:{{tag.selected|not}}\"\n                  data-badge=\"{{tag.count|ifAbove:3}}\"\n                  data-id=\"{{tag.id}}\"\n                  click=\"{{click}}\"\n                  ui:each=\"tag of data\">\n                <span>{{tag.name}}<small ui:if=\"tag.selected2\">{{tag.count}}</small></span>\n            </span>\n        </div>\n    </template>\n\n    <template id=\"Tabs\">\n        <ul class=\"tab tab-block\">\n            <li class=\"tab-item\" ui:each=\"item of data\">\n                <a href=\"#tab?tab={{item.value}}\">{{item.name}}</a>\n            </li>\n        </ul>\n    </template>\n\n    <template id=\"Modal\">\n        <div class=\"modal modal active:{{open}}\">\n            <a class=\"modal-overlay\" aria-label=\"Close\" click=\"{{close}}\"></a>\n            <div class=\"modal-container\">\n                <div class=\"modal-header\">\n                    <a class=\"btn btn-clear float-right\" aria-label=\":close\" click=\"{{close}}\"></a>\n                    <div class=\"modal-title h5\" ui:if=\"title\">{{title}}</div>\n                    <ui:slot id=\"header\" />\n                </div>\n                <div class=\"modal-body\" style=\"max-height: 70vh;\">\n                    <div class=\"content\">\n                        <ui:slot />\n                    </div>\n                </div>\n                <div class=\"modal-footer\">\n                    <ui:slot id=\"footer\" />\n                </div>\n            </div>\n        </div>\n    </template>\n</body>");
// CONCATENATED MODULE: ./common/components/elements.html
/* harmony default export */ var components_elements = ("<body id=\"app\">\n    <template id=\"Toast\">\n        <div ui:if=\"!closed\"\n             class=\"toast toast-primary\"\n             style=\"position:fixed; right:5rem; bottom:1rem; width: 20rem;\">\n            <button class=\"btn btn-clear float-right\"\n                    click=\"->\"\n                    data-closed=\"true\"></button>\n            <p>{{message}}</p>\n        </div>\n    </template>\n\n    <template id=\"SearchBar\">\n        <div class=\"form-autocomplete\">\n            <!-- autocomplete input container -->\n            <div class=\"form-autocomplete-input form-input input-sm has-icon-right\">\n                <div class=\"input-group input-inline\">\n                    <input class=\"form-input\" type=\"search\"\n                           placeholder=\":kluq_poshuku\"\n                           keypress=\"{{input}}\"\n                           value=\"{{value}}\" />\n                </div>\n                <i class=\"form-icon icon icon-cross\" data-value=\"\"\n                   click=\"{{enter}}\"\n                   ui:if=\"value\"></i>\n            </div>\n            <ul class=\"menu\" ui:if=\"suggestions\">\n                <li class=\"menu-item\" ui:each=\"item of suggestions\" data-value=\"{{item.id}}\" click=\"{{enter}}\">\n                    <a>\n                        <div class=\"tile tile-centered\">\n                            <div class=\"tile-icon\">\n                            </div>\n                            <div class=\"tile-content\">\n                                {{item.name}}\n                            </div>\n                        </div>\n                    </a>\n                </li>\n            </ul>\n        </div>\n\n    </template>\n\n    <template id=\"BigRedButton\">\n        <button class=\"btn tooltip tooltip-left fixed bg-error circle\"\n                style=\"right:1rem; bottom:1rem; width: 2rem;\"\n                data=\"{{data}}\"\n                data-tooltip=\"{{tooltip}}\"\n                click=\"{{action}}\">\n            <i class=\"icon icon-plus\"></i>\n        </button>\n    </template>\n\n    <template id=\"Hero\">\n        <div class=\"hero bg-dark p-0\">\n            <div class=\"hero-body px-2\">\n                <h1>{{title}}</h1>\n            </div>\n        </div>\n    </template>\n\n    <template id=\"IFrame\">\n        <iframe width=\"100%\" height=\"450\" frameborder=\"0\"\n                style=\"border:0\"\n                src=\"{{src}}\"\n                allowfullscreen=\"1\"></iframe>`\n    </template>\n\n    <template id=\"Select\">\n        <select class=\"form-select\"\n                change=\"{{change}}\">\n            <option selected=\"{{selected}}\"\n                    value=\"\"\n                    ui:if=\"!required\">...</option>\n            <option ui:each=\"option of options\"\n                    selected=\"{{selected}}\"\n                    value=\"{{option.id}}\">{{optionName}}</option>\n        </select>\n    </template>\n</body>");
// CONCATENATED MODULE: ./common/components/layouts.html
/* harmony default export */ var layouts = ("<body>\n\n    <template id=\"Box\">\n        <div class=\"container bg-gray\">\n            <div class=\"columns\">\n                <div class=\"column col-6 col-sm-12\">\n                    <ui:slot id=\"1\" />\n                </div>\n                <div class=\"column col-6 col-sm-12 my-2\">\n                    <ui:slot id=\"2\" />\n                </div>\n            </div>\n        </div>\n    </template>\n</body>");
// CONCATENATED MODULE: ./common/components/UserInfo.html
/* harmony default export */ var UserInfo = ("<body id=\"user\">\n\n  <template id=\"UserBar\">\n    <div class=\"float-right\">\n      <ui:fragment ui:if=\"isAnonymous\">\n        <ui:then>\n          <a click=\"-> user:login\" class=\"anchor\" aria-hidden=\"true\">:login</a>\n        </ui:then>\n        <ui:else>\n          <UserPanel ui:props=\"<- user:info\" />\n        </ui:else>\n      </ui:fragment>\n    </div>\n  </template>\n\n  <template id=\"UserPanel\">\n    <div class=\"tile tile-centered\">\n      <div class=\"tile-icon\">\n        <div class=\"example-tile-icon\" ui:if=\"photoURL\">\n          <figure class=\"avatar avatar\">\n            <img src=\"{{photoURL}}\" alt=\":avatar\" />\n          </figure>\n        </div>\n      </div>\n      <div class=\"tile-content\">\n        <div class=\"tile-title\" ui:if=\"displayName\">{{displayName}}</div>\n        <a class=\"tile-subtitle text-gray\" href=\"mailto:{{email}}\">{{email}}</a>\n      </div>\n      <div class=\"tile-action\">\n        <div class=\"dropdown dropdown-right\">\n          <a class=\"btn btn-link dropdown-toggle\" tabindex=\"0\"><i class=\"icon icon-more-vert\"></i></a>\n          <ul class=\"menu\">\n            <li class=\"menu-item\" ui:each=\"item of <-nav://items\">\n              <a href=\"#{{item.id}}\">{{item.name}}</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </template>\n\n  <template id=\"UserInfo\">\n    <div class=\"ui raised segment\">\n      <a class=\"ui yellow image label\">\n        <i class=\"jp flag\"></i>\n        <span>{{profile.name}}</span>\n        <div class=\"detail\">Citizen</div>\n      </a>\n      <div class=\"ui divided selection list\">\n        <div class=\"item\" each=\"contact of contacts\">\n          <div class=\"ui {{contact.color}} horizontal label\">{{contact.type}}</div>\n          <a href=\"{{contact.link}}\" target=\"_blank\">{{contact.text}}</a>\n        </div>\n      </div>\n    </div>\n  </template>\n</body>");
// CONCATENATED MODULE: ./common/components/fields.html
/* harmony default export */ var fields = ("<body id=\"app\">\n    <template id=\"TextField\">\n        <div class=\"form-group\">\n            <div class=\"col-3 col-sm-12\">\n                <label class=\"form-label\" for=\"input-example-4\">{{caption}}</label>\n            </div>\n            <div class=\"col-9 col-sm-12\">\n                <input class=\"form-input\" id=\"input-example-4\" type=\"text\"\n                       placeholder=\"{{caption}}\" value=\"{{value}}\" change=\"{{onChange}}\">\n            </div>\n        </div>\n    </template>\n    <template id=\"SwitchField\">\n        <div class=\"form-group\">\n            <div class=\"col-9 col-sm-12 col-ml-auto\">\n                <label class=\"form-switch\">\n                    <input type=\"checkbox\"\n                           toggle=\"{{onChange}}\"\n                           checked=\"{{value}}\"><i class=\"form-icon\"></i> {{caption}}\n                </label>\n            </div>\n        </div>\n    </template>\n    <template id=\"TextareaField\">\n        <div class=\"form-group\">\n            <div class=\"col-3 col-sm-12\">\n                <label class=\"form-label\" for=\"input-example-6\">{{caption}}</label>\n            </div>\n            <div class=\"col-9 col-sm-12\">\n                <textarea class=\"form-input\" style=\"min-height: 15vw\"\n                          placeholder=\"{{caption}}\"\n                          rows=\"3\" change=\"{{onChange}}\"\n                          value=\"{{value}}\"></textarea>\n            </div>\n        </div>\n    </template>\n    <template id=\"RadioField\">\n        <div class=\"form-group\">\n            <div class=\"col-3 col-sm-12\">\n                <label class=\"form-label\">{{caption}}</label>\n            </div>\n            <div class=\"col-9 col-sm-12\">\n                <label class=\"form-radio\">\n                    <input type=\"radio\" name=\"gender\"><i class=\"form-icon\"></i> Male\n                </label>\n                <label class=\"form-radio\">\n                    <input type=\"radio\" name=\"gender\" checked=\"\"><i class=\"form-icon\"></i> Female\n                </label>\n            </div>\n        </div>\n    </template>\n    <template id=\"EnumField\">\n        <div class=\"form-group\">\n            <div class=\"col-3 col-sm-12\">\n                <label class=\"form-label\">{{caption}}</label>\n            </div>\n            <div class=\"col-9 col-sm-12\">\n                <Select change=\"{{onChange}}\" options=\"<- res://enum/{{typeSpec}}\" />\n            </div>\n        </div>\n    </template>\n    <template id=\"DictField\">\n        <div class=\"form-group\">\n            <div class=\"col-3 col-sm-12\">\n                <label class=\"form-label\">{{caption}}</label>\n            </div>\n            <div class=\"col-9 col-sm-12\">\n                <Select change=\"{{onChange}}\" options=\"<- db://dict/{{typeSpec}}\" />\n            </div>\n        </div>\n    </template>\n    <template id=\"RefField\">\n        <div class=\"form-group\">\n            <div class=\"col-3 col-sm-12\">\n                <label class=\"form-label\">{{caption}}</label>\n            </div>\n            <div class=\"col-9 col-sm-12\">\n                <Select change=\"{{onChange}}\" options=\"<- {{typeSpec}}\" />\n            </div>\n        </div>\n    </template>\n</body>");
// EXTERNAL MODULE: ./lib/armatura/support.js
var support = __webpack_require__(37);

// CONCATENATED MODULE: ./common/components/index.js








/* harmony default export */ var common_components = __webpack_exports__["a"] = ([Filter, Form, FormField, ...Object(support["a" /* loadTemplates */])(components, components_elements, layouts, UserInfo, fields)]);

/***/ }),
/* 79 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.symbol.js
var es6_symbol = __webpack_require__(2);

// EXTERNAL MODULE: ./node_modules/core-js/modules/web.dom.iterable.js
var web_dom_iterable = __webpack_require__(1);

// EXTERNAL MODULE: ./node_modules/core-js/modules/es6.regexp.split.js
var es6_regexp_split = __webpack_require__(3);

// EXTERNAL MODULE: ./app/utils/index.js
var utils = __webpack_require__(14);

// EXTERNAL MODULE: ./lib/furnitura/index.js + 8 modules
var furnitura = __webpack_require__(0);

// CONCATENATED MODULE: ./app/services/GeoService.js




function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }



/**
 * The API class.
 */

class GeoService_GeoService {
  getRoutes() {
    return this._routes || (this._routes = this.res('routes').map(e => _objectSpread({}, e, {
      id: '' + e.id,
      title: '' + e.title,
      places: e.places.split(','),
      photo: e.photo || 'assets/placeholder.png',
      link: e.link || '//google.com/search?q=' + Object(utils["a" /* grodnify */])(e.title)
    })));
  }

  getPlaces() {
    // adapt and memoize
    return this._places || (this._places = this.res('places').map(e => _objectSpread({}, e, {
      id: '' + e.id,
      title: '' + e.title,
      tags: [e.tags, e.tags2, e.tags3].filter(Boolean),
      photo: e.photo || 'assets/placeholder.png',
      link: e.link || '//google.com/search?q=' + Object(utils["a" /* grodnify */])(e.title)
    })));
  }

  onToggleTag(tag, cb) {
    return this.api.local.toggleItemProperty('selectedTags', tag, cb);
  }

  onSelectRoute(data, cb) {
    return this.api.local.assign({
      selectedRoute: data,
      'selectedPlaces': data.places.map(id => ({
        id
      }))
    }, cb);
  }

  onTogglePlace(data, cb) {
    return this.api.local.toggleArrayElement('selectedPlaces', data, cb);
  }

  onArrangePlace(_ref, cb) {
    let {
      id,
      dir
    } = _ref;
    return this.api.local.arrangeArrayElement('selectedPlaces', id, dir, cb);
  }

  getSelectedRoute() {
    return this.api.local.get('selectedRoute') || this.getRoutes()[0] || {};
  }

  getSelectedPlaces() {
    const places = this.getPlaces();
    const selectedPlaces = localStore.get('selectedPlaces') || [];
    return selectedPlaces.map((_ref2) => {
      let {
        id
      } = _ref2;
      return places.find(e => e.id === id);
    }).filter(Boolean);
  }

  getSelectedPlacesIds() {
    const selectedPlaces = localStore.get('selectedPlaces') || [];
    return selectedPlaces.map((_ref3) => {
      let {
        id
      } = _ref3;
      return id;
    }).join(',');
  }

  getSuggestedPhoto() {
    const places = this.getPlaces();
    const selectedPlaces = localStore.get('selectedPlaces') || [];
    const fisrt = selectedPlaces.map((_ref4) => {
      let {
        id
      } = _ref4;
      return places.find(e => e.id === id);
    })[0];
    return fisrt ? fisrt.photo : 'https://postim.by/post_photo/19370/xbfblucF1518108503.jpg';
  }

  getFilteredPlaces() {
    const selectedTags = localStore.get('selectedTags') || {};
    const selectedPlaces = localStore.get('selectedPlaces') || [];
    const selectionIds = Object.keys(selectedTags);
    const places = this.getPlaces();
    const filtered = !selectionIds.length ? places : places.filter(e => selectionIds.reduce((r, tag) => r && e.tags.includes(tag), true));
    return filtered.map(e => _objectSpread({}, e, {
      selected: selectedPlaces.some(ee => ee.id === e.id)
    }));
  }

  getFilteredTags() {
    const selectedTags = localStore.get('selectedTags') || {};
    return Object.values(this.getFilteredPlaces().reduce((tags, e) => {
      e.tags.forEach(t => {
        if (!tags[t]) {
          tags[t] = {
            id: t,
            name: t,
            selected: !!selectedTags[t],
            count: 0
          };
        }

        tags[t].count++;
      });
      return tags;
    }, {}));
  }

  getRouteMapUrl() {
    const places = this.getSelectedPlaces();
    const count = places.length;
    return Object(furnitura["k" /* urlStringify */])({
      target: 'https://www.google.com/maps/embed/v1/directions',
      params: {
        mode: 'walking',
        origin: Object(utils["a" /* grodnify */])(count > 0 ? places[0].address : 'Драматический театр'),
        destination: Object(utils["a" /* grodnify */])(count > 1 ? places[count - 1].address : 'Жилибера парк'),
        waypoints: count > 2 ? "".concat((places.slice(1, count - 1) || []).map((_ref5) => {
          let {
            address
          } = _ref5;
          return Object(utils["a" /* grodnify */])(address);
        }).join('|')) || null : null,
        key: "AIzaSyBqTz8FtKj2ghZxmxNnJVicYCpcuHUNRiM"
      }
    });
  }

}
// CONCATENATED MODULE: ./app/services/index.js
/* concated harmony reexport GeoService */__webpack_require__.d(__webpack_exports__, "GeoService", function() { return GeoService_GeoService; });


/***/ }),
/* 80 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(81);


/***/ }),
/* 81 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var armatura__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(76);
/* harmony import */ var _common_components__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(78);
/* harmony import */ var _App_html__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(68);
/* harmony import */ var _common_services__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(77);
/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(79);
/* harmony import */ var armatura_support_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(37);
/* harmony import */ var _modules_main_html__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(70);
/* harmony import */ var _modules_calendar_html__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(71);
/* harmony import */ var _modules_geomap_html__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(72);
/* harmony import */ var _modules_news_html__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(73);
/* harmony import */ var furnitura__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(0);
/* harmony import */ var _res_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(74);
/* harmony import */ var _meta_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(75);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(14);



function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
















Object.R = (R => key => R[key] || (R[key] = Object(furnitura__WEBPACK_IMPORTED_MODULE_12__[/* dig */ "c"])(R, key)))(_objectSpread({}, _res_js__WEBPACK_IMPORTED_MODULE_13__[/* default */ "a"], _meta_js__WEBPACK_IMPORTED_MODULE_14__[/* default */ "a"].result, {
  reducers: _utils__WEBPACK_IMPORTED_MODULE_15__[/* reducers */ "b"]
}));

const ref = {};

const launch = () => {
  ref.done = Object(armatura__WEBPACK_IMPORTED_MODULE_2__[/* register */ "a"])(...Object(armatura_support_js__WEBPACK_IMPORTED_MODULE_7__[/* loadTemplates */ "a"])(_App_html__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"], _modules_main_html__WEBPACK_IMPORTED_MODULE_8__[/* default */ "a"], _modules_news_html__WEBPACK_IMPORTED_MODULE_11__[/* default */ "a"], _modules_calendar_html__WEBPACK_IMPORTED_MODULE_9__[/* default */ "a"], _modules_geomap_html__WEBPACK_IMPORTED_MODULE_10__[/* default */ "a"]), ..._common_components__WEBPACK_IMPORTED_MODULE_3__[/* default */ "a"], ...Object.values(_common_services__WEBPACK_IMPORTED_MODULE_5__), ...Object.values(_services__WEBPACK_IMPORTED_MODULE_6__)).run();
};

(hot => {
  if (!hot) {
    launch();
    return;
  }

  hot.dispose(data => ref.done());
  hot.accept();

  if (!hot.data) {
    launch();
    return;
  }

  window.firebase.app().delete().then(launch);
})( false ? undefined : module.hot);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(38)(module)))

/***/ }),
/* 82 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(24)('native-function-to-string', Function.toString);


/***/ }),
/* 83 */
/***/ (function(module, exports, __webpack_require__) {

var META = __webpack_require__(19)('meta');
var isObject = __webpack_require__(13);
var has = __webpack_require__(15);
var setDesc = __webpack_require__(11).f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !__webpack_require__(10)(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};


/***/ }),
/* 84 */
/***/ (function(module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
var getKeys = __webpack_require__(26);
var gOPS = __webpack_require__(58);
var pIE = __webpack_require__(44);
module.exports = function (it) {
  var result = getKeys(it);
  var getSymbols = gOPS.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = pIE.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};


/***/ }),
/* 85 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
var cof = __webpack_require__(27);
// eslint-disable-next-line no-prototype-builtins
module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return cof(it) == 'String' ? it.split('') : Object(it);
};


/***/ }),
/* 86 */
/***/ (function(module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
var toIObject = __webpack_require__(18);
var toLength = __webpack_require__(29);
var toAbsoluteIndex = __webpack_require__(87);
module.exports = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};


/***/ }),
/* 87 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(30);
var max = Math.max;
var min = Math.min;
module.exports = function (index, length) {
  index = toInteger(index);
  return index < 0 ? max(index + length, 0) : min(index, length);
};


/***/ }),
/* 88 */
/***/ (function(module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
var cof = __webpack_require__(27);
module.exports = Array.isArray || function isArray(arg) {
  return cof(arg) == 'Array';
};


/***/ }),
/* 89 */
/***/ (function(module, exports, __webpack_require__) {

var dP = __webpack_require__(11);
var anObject = __webpack_require__(5);
var getKeys = __webpack_require__(26);

module.exports = __webpack_require__(9) ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = getKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) dP.f(O, P = keys[i++], Properties[P]);
  return O;
};


/***/ }),
/* 90 */
/***/ (function(module, exports, __webpack_require__) {

var document = __webpack_require__(8).document;
module.exports = document && document.documentElement;


/***/ }),
/* 91 */
/***/ (function(module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
var toIObject = __webpack_require__(18);
var gOPN = __webpack_require__(45).f;
var toString = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
};


/***/ }),
/* 92 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var addToUnscopables = __webpack_require__(93);
var step = __webpack_require__(94);
var Iterators = __webpack_require__(46);
var toIObject = __webpack_require__(18);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
module.exports = __webpack_require__(95)(Array, 'Array', function (iterated, kind) {
  this._t = toIObject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return step(1);
  }
  if (kind == 'keys') return step(0, index);
  if (kind == 'values') return step(0, O[index]);
  return step(0, [index, O[index]]);
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
Iterators.Arguments = Iterators.Array;

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');


/***/ }),
/* 93 */
/***/ (function(module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
var UNSCOPABLES = __webpack_require__(4)('unscopables');
var ArrayProto = Array.prototype;
if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(12)(ArrayProto, UNSCOPABLES, {});
module.exports = function (key) {
  ArrayProto[UNSCOPABLES][key] = true;
};


/***/ }),
/* 94 */
/***/ (function(module, exports) {

module.exports = function (done, value) {
  return { value: value, done: !!done };
};


/***/ }),
/* 95 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var LIBRARY = __webpack_require__(25);
var $export = __webpack_require__(21);
var redefine = __webpack_require__(16);
var hide = __webpack_require__(12);
var Iterators = __webpack_require__(46);
var $iterCreate = __webpack_require__(96);
var setToStringTag = __webpack_require__(41);
var getPrototypeOf = __webpack_require__(97);
var ITERATOR = __webpack_require__(4)('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var returnThis = function () { return this; };

module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  $iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      setToStringTag(IteratorPrototype, TAG, true);
      // fix for some old engines
      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    hide(proto, ITERATOR, $default);
  }
  // Plug for library
  Iterators[NAME] = $default;
  Iterators[TAG] = returnThis;
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) redefine(proto, key, methods[key]);
    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};


/***/ }),
/* 96 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var create = __webpack_require__(59);
var descriptor = __webpack_require__(23);
var setToStringTag = __webpack_require__(41);
var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
__webpack_require__(12)(IteratorPrototype, __webpack_require__(4)('iterator'), function () { return this; });

module.exports = function (Constructor, NAME, next) {
  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });
  setToStringTag(Constructor, NAME + ' Iterator');
};


/***/ }),
/* 97 */
/***/ (function(module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
var has = __webpack_require__(15);
var toObject = __webpack_require__(31);
var IE_PROTO = __webpack_require__(42)('IE_PROTO');
var ObjectProto = Object.prototype;

module.exports = Object.getPrototypeOf || function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};


/***/ }),
/* 98 */
/***/ (function(module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
var anObject = __webpack_require__(5);
var aFunction = __webpack_require__(40);
var SPECIES = __webpack_require__(4)('species');
module.exports = function (O, D) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
};


/***/ }),
/* 99 */
/***/ (function(module, exports, __webpack_require__) {

var toInteger = __webpack_require__(30);
var defined = __webpack_require__(28);
// true  -> String#at
// false -> String#codePointAt
module.exports = function (TO_STRING) {
  return function (that, pos) {
    var s = String(defined(that));
    var i = toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};


/***/ }),
/* 100 */
/***/ (function(module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
var cof = __webpack_require__(27);
var TAG = __webpack_require__(4)('toStringTag');
// ES3 wrong here
var ARG = cof(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (e) { /* empty */ }
};

module.exports = function (it) {
  var O, T, B;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
    // builtinTag case
    : ARG ? cof(O)
    // ES3 arguments fallback
    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
};


/***/ }),
/* 101 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var regexpExec = __webpack_require__(48);
__webpack_require__(21)({
  target: 'RegExp',
  proto: true,
  forced: regexpExec !== /./.exec
}, {
  exec: regexpExec
});


/***/ }),
/* 102 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(10);

module.exports = function (method, arg) {
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call
    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);
  });
};


/***/ }),
/* 103 */
/***/ (function(module, exports, __webpack_require__) {

// 21.2.5.3 get RegExp.prototype.flags()
if (__webpack_require__(9) && /./g.flags != 'g') __webpack_require__(11).f(RegExp.prototype, 'flags', {
  configurable: true,
  get: __webpack_require__(33)
});


/***/ }),
/* 104 */
/***/ (function(module, exports) {

// 7.2.9 SameValue(x, y)
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};


/***/ }),
/* 105 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, module) {/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(36);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(6);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_2__);



!function (e, t) {
  "object" == typeof exports && "undefined" != typeof module ? module.exports = t() : "function" == typeof define && __webpack_require__(50) ? define(t) : (e = e || self).firebase = t();
}(undefined, function () {
  "use strict";

  var _i = function i(e, t) {
    return (_i = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (e, t) {
      e.__proto__ = t;
    } || function (e, t) {
      for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r]);
    })(e, t);
  };

  var _r = function r() {
    return (_r = Object.assign || function (e) {
      for (var t, r = 1, n = arguments.length; r < n; r++) for (var o in t = arguments[r]) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);

      return e;
    }).apply(this, arguments);
  };

  function d(e, t) {
    if (!(t instanceof Object)) return t;

    switch (t.constructor) {
      case Date:
        return new Date(t.getTime());

      case Object:
        void 0 === e && (e = {});
        break;

      case Array:
        e = [];
        break;

      default:
        return t;
    }

    for (var r in t) t.hasOwnProperty(r) && (e[r] = d(e[r], t[r]));

    return e;
  }

  var h = function (n) {
    function o(e, t) {
      var r = n.call(this, t) || this;
      return r.code = e, r.name = "FirebaseError", Object.setPrototypeOf(r, o.prototype), Error.captureStackTrace && Error.captureStackTrace(r, a.prototype.create), r;
    }

    return function (e, t) {
      function r() {
        this.constructor = e;
      }

      _i(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r());
    }(o, n), o;
  }(Error),
      a = function () {
    function e(e, t, r) {
      this.service = e, this.serviceName = t, this.errors = r;
    }

    return e.prototype.create = function (e) {
      for (var t = [], r = 1; r < arguments.length; r++) t[r - 1] = arguments[r];

      for (var n, o = t[0] || {}, i = this.service + "/" + e, a = this.errors[e], s = a ? (n = o, a.replace(v, function (e, t) {
        var r = n[t];
        return null != r ? r.toString() : "<" + t + "?>";
      })) : "Error", c = this.serviceName + ": " + s + " (" + i + ").", u = new h(i, c), l = 0, p = Object.keys(o); l < p.length; l++) {
        var f = p[l];
        "_" !== f.slice(-1) && (f in u && console.warn('Overwriting FirebaseError base field "' + f + '" can cause unexpected behavior.'), u[f] = o[f]);
      }

      return u;
    }, e;
  }();

  var v = /\{\$([^}]+)}/g,
      b = function b(e, t) {
    return Object.prototype.hasOwnProperty.call(e, t);
  };

  function n(e, t) {
    var r = new o(e, t);
    return r.subscribe.bind(r);
  }

  var s,
      e,
      o = function () {
    function e(e, t) {
      var r = this;
      this.observers = [], this.unsubscribes = [], this.observerCount = 0, this.task = Promise.resolve(), this.finalized = !1, this.onNoObservers = t, this.task.then(function () {
        e(r);
      }).catch(function (e) {
        r.error(e);
      });
    }

    return e.prototype.next = function (t) {
      this.forEachObserver(function (e) {
        e.next(t);
      });
    }, e.prototype.error = function (t) {
      this.forEachObserver(function (e) {
        e.error(t);
      }), this.close(t);
    }, e.prototype.complete = function () {
      this.forEachObserver(function (e) {
        e.complete();
      }), this.close();
    }, e.prototype.subscribe = function (e, t, r) {
      var n,
          o = this;
      if (void 0 === e && void 0 === t && void 0 === r) throw new Error("Missing Observer.");
      void 0 === (n = function (e, t) {
        if ("object" != typeof e || null === e) return !1;

        for (var r = 0, n = t; r < n.length; r++) {
          var o = n[r];
          if (o in e && "function" == typeof e[o]) return !0;
        }

        return !1;
      }(e, ["next", "error", "complete"]) ? e : {
        next: e,
        error: t,
        complete: r
      }).next && (n.next = c), void 0 === n.error && (n.error = c), void 0 === n.complete && (n.complete = c);
      var i = this.unsubscribeOne.bind(this, this.observers.length);
      return this.finalized && this.task.then(function () {
        try {
          o.finalError ? n.error(o.finalError) : n.complete();
        } catch (e) {}
      }), this.observers.push(n), i;
    }, e.prototype.unsubscribeOne = function (e) {
      void 0 !== this.observers && void 0 !== this.observers[e] && (delete this.observers[e], this.observerCount -= 1, 0 === this.observerCount && void 0 !== this.onNoObservers && this.onNoObservers(this));
    }, e.prototype.forEachObserver = function (e) {
      if (!this.finalized) for (var t = 0; t < this.observers.length; t++) this.sendOne(t, e);
    }, e.prototype.sendOne = function (e, t) {
      var r = this;
      this.task.then(function () {
        if (void 0 !== r.observers && void 0 !== r.observers[e]) try {
          t(r.observers[e]);
        } catch (e) {
          "undefined" != typeof console && console.error && console.error(e);
        }
      });
    }, e.prototype.close = function (e) {
      var t = this;
      this.finalized || (this.finalized = !0, void 0 !== e && (this.finalError = e), this.task.then(function () {
        t.observers = void 0, t.onNoObservers = void 0;
      }));
    }, e;
  }();

  function c() {}

  (e = s || (s = {}))[e.DEBUG = 0] = "DEBUG", e[e.VERBOSE = 1] = "VERBOSE", e[e.INFO = 2] = "INFO", e[e.WARN = 3] = "WARN", e[e.ERROR = 4] = "ERROR", e[e.SILENT = 5] = "SILENT";

  var t,
      u = s.INFO,
      l = function l(e, t) {
    for (var r = [], n = 2; n < arguments.length; n++) r[n - 2] = arguments[n];

    if (!(t < e.logLevel)) {
      var o = new Date().toISOString();

      switch (t) {
        case s.DEBUG:
        case s.VERBOSE:
          console.log.apply(console, ["[" + o + "]  " + e.name + ":"].concat(r));
          break;

        case s.INFO:
          console.info.apply(console, ["[" + o + "]  " + e.name + ":"].concat(r));
          break;

        case s.WARN:
          console.warn.apply(console, ["[" + o + "]  " + e.name + ":"].concat(r));
          break;

        case s.ERROR:
          console.error.apply(console, ["[" + o + "]  " + e.name + ":"].concat(r));
          break;

        default:
          throw new Error("Attempted to log a message with an invalid logType (value: " + t + ")");
      }
    }
  },
      p = function () {
    function e(e) {
      this.name = e, this._logLevel = u, this._logHandler = l;
    }

    return Object.defineProperty(e.prototype, "logLevel", {
      get: function get() {
        return this._logLevel;
      },
      set: function set(e) {
        if (!(e in s)) throw new TypeError("Invalid value assigned to `logLevel`");
        this._logLevel = e;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "logHandler", {
      get: function get() {
        return this._logHandler;
      },
      set: function set(e) {
        if ("function" != typeof e) throw new TypeError("Value assigned to `logHandler` must be a function");
        this._logHandler = e;
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.debug = function () {
      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];

      this._logHandler.apply(this, [this, s.DEBUG].concat(e));
    }, e.prototype.log = function () {
      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];

      this._logHandler.apply(this, [this, s.VERBOSE].concat(e));
    }, e.prototype.info = function () {
      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];

      this._logHandler.apply(this, [this, s.INFO].concat(e));
    }, e.prototype.warn = function () {
      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];

      this._logHandler.apply(this, [this, s.WARN].concat(e));
    }, e.prototype.error = function () {
      for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];

      this._logHandler.apply(this, [this, s.ERROR].concat(e));
    }, e;
  }(),
      f = ((t = {})["no-app"] = "No Firebase App '{$name}' has been created - call Firebase App.initializeApp()", t["bad-app-name"] = "Illegal App name: '{$name}", t["duplicate-app"] = "Firebase App named '{$name}' already exists", t["app-deleted"] = "Firebase App named '{$name}' already deleted", t["duplicate-service"] = "Firebase service named '{$name}' already registered", t["invalid-app-argument"] = "firebase.{$name}() takes either no argument or a Firebase App instance.", t),
      y = new a("app", "Firebase", f),
      g = "[DEFAULT]",
      m = [],
      E = function () {
    function e(e, t, r) {
      this.firebase_ = r, this.isDeleted_ = !1, this.services_ = {}, this.name_ = t.name, this.automaticDataCollectionEnabled_ = t.automaticDataCollectionEnabled || !1, this.options_ = d(void 0, e), this.INTERNAL = {
        getUid: function getUid() {
          return null;
        },
        getToken: function getToken() {
          return Promise.resolve(null);
        },
        addAuthTokenListener: function addAuthTokenListener(e) {
          m.push(e), setTimeout(function () {
            return e(null);
          }, 0);
        },
        removeAuthTokenListener: function removeAuthTokenListener(t) {
          m = m.filter(function (e) {
            return e !== t;
          });
        }
      };
    }

    return Object.defineProperty(e.prototype, "automaticDataCollectionEnabled", {
      get: function get() {
        return this.checkDestroyed_(), this.automaticDataCollectionEnabled_;
      },
      set: function set(e) {
        this.checkDestroyed_(), this.automaticDataCollectionEnabled_ = e;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "name", {
      get: function get() {
        return this.checkDestroyed_(), this.name_;
      },
      enumerable: !0,
      configurable: !0
    }), Object.defineProperty(e.prototype, "options", {
      get: function get() {
        return this.checkDestroyed_(), this.options_;
      },
      enumerable: !0,
      configurable: !0
    }), e.prototype.delete = function () {
      var s = this;
      return new Promise(function (e) {
        s.checkDestroyed_(), e();
      }).then(function () {
        s.firebase_.INTERNAL.removeApp(s.name_);

        for (var e = [], t = 0, r = Object.keys(s.services_); t < r.length; t++) for (var n = r[t], o = 0, i = Object.keys(s.services_[n]); o < i.length; o++) {
          var a = i[o];
          e.push(s.services_[n][a]);
        }

        return Promise.all(e.filter(function (e) {
          return "INTERNAL" in e;
        }).map(function (e) {
          return e.INTERNAL.delete();
        }));
      }).then(function () {
        s.isDeleted_ = !0, s.services_ = {};
      });
    }, e.prototype._getService = function (e, t) {
      if (void 0 === t && (t = g), this.checkDestroyed_(), this.services_[e] || (this.services_[e] = {}), !this.services_[e][t]) {
        var r = t !== g ? t : void 0,
            n = this.firebase_.INTERNAL.factories[e](this, this.extendApp.bind(this), r);
        this.services_[e][t] = n;
      }

      return this.services_[e][t];
    }, e.prototype.extendApp = function (e) {
      var t = this;
      d(this, e), e.INTERNAL && e.INTERNAL.addAuthTokenListener && (m.forEach(function (e) {
        t.INTERNAL.addAuthTokenListener(e);
      }), m = []);
    }, e.prototype.checkDestroyed_ = function () {
      if (this.isDeleted_) throw y.create("app-deleted", {
        name: this.name_
      });
    }, e;
  }();

  E.prototype.name && E.prototype.options || E.prototype.delete || console.log("dc");
  var _ = "6.2.4";
  var O = new p("@firebase/app");

  if ("object" == typeof self && self.self === self && void 0 !== self.firebase) {
    O.warn("\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  ");
    var N = self.firebase.SDK_VERSION;
    N && 0 <= N.indexOf("LITE") && O.warn("\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    ");
  }

  var w = function e() {
    var t = function (a) {
      var s = {},
          c = {},
          u = {},
          l = {
        __esModule: !0,
        initializeApp: function initializeApp(e, t) {
          if (void 0 === t && (t = {}), "object" != typeof t || null === t) {
            var r = t;
            t = {
              name: r
            };
          }

          var n = t;
          void 0 === n.name && (n.name = g);
          var o = n.name;
          if ("string" != typeof o || !o) throw y.create("bad-app-name", {
            name: String(o)
          });
          if (b(s, o)) throw y.create("duplicate-app", {
            name: o
          });
          var i = new a(e, n, l);
          return h(s[o] = i, "create"), i;
        },
        app: p,
        apps: null,
        SDK_VERSION: _,
        INTERNAL: {
          registerService: function registerService(r, e, t, n, o) {
            if (void 0 === o && (o = !1), c[r]) throw y.create("duplicate-service", {
              name: r
            });

            function i(e) {
              if (void 0 === e && (e = p()), "function" != typeof e[r]) throw y.create("invalid-app-argument", {
                name: r
              });
              return e[r]();
            }

            return c[r] = e, n && (u[r] = n, f().forEach(function (e) {
              n("create", e);
            })), void 0 !== t && d(i, t), l[r] = i, a.prototype[r] = function () {
              for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];

              return this._getService.bind(this, r).apply(this, o ? e : []);
            }, i;
          },
          removeApp: function removeApp(e) {
            h(s[e], "delete"), delete s[e];
          },
          factories: c,
          useAsService: i
        }
      };

      function p(e) {
        if (!b(s, e = e || g)) throw y.create("no-app", {
          name: e
        });
        return s[e];
      }

      function f() {
        return Object.keys(s).map(function (e) {
          return s[e];
        });
      }

      function h(e, t) {
        for (var r = 0, n = Object.keys(c); r < n.length; r++) {
          var o = i(0, n[r]);
          if (null === o) return;
          u[o] && u[o](t, e);
        }
      }

      function i(e, t) {
        return "serverAuth" === t ? null : t;
      }

      return l.default = l, Object.defineProperty(l, "apps", {
        get: f
      }), p.App = a, l;
    }(E);

    return t.INTERNAL = _r({}, t.INTERNAL, {
      createFirebaseNamespace: e,
      extendNamespace: function extendNamespace(e) {
        d(t, e);
      },
      createSubscribe: n,
      ErrorFactory: a,
      deepExtend: d
    }), t;
  }(),
      A = w.initializeApp;

  return w.initializeApp = function () {
    return function () {
      try {
        return "[object process]" === Object.prototype.toString.call(global.process);
      } catch (e) {
        return !1;
      }
    }() && O.warn('\n      Warning: This is a browser-targeted Firebase bundle but it appears it is being\n      run in a Node environment.  If running in a Node environment, make sure you\n      are using the bundle specified by the "main" field in package.json.\n      \n      If you are using Webpack, you can specify "main" as the first item in\n      "resolve.mainFields":\n      https://webpack.js.org/configuration/resolve/#resolvemainfields\n      \n      If using Rollup, use the rollup-plugin-node-resolve plugin and set "module"\n      to false and "main" to true:\n      https://github.com/rollup/rollup-plugin-node-resolve\n      '), A.apply(void 0, arguments);
  }, w;
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(17), __webpack_require__(38)(module)))

/***/ }),
/* 106 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, process) {/* harmony import */ var core_js_modules_es6_regexp_search__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(62);
/* harmony import */ var core_js_modules_es6_regexp_search__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_search__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_es6_regexp_constructor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(51);
/* harmony import */ var core_js_modules_es6_regexp_constructor__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_constructor__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(35);
/* harmony import */ var core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(49);
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(3);
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(1);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(36);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(6);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(65);
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(2);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_9__);










!function (t, e) {
  "object" == typeof exports && "undefined" != typeof module ? e(__webpack_require__(66)) : "function" == typeof define && __webpack_require__(50) ? define(["@firebase/app"], e) : e((t = t || self).firebase);
}(undefined, function (Dh) {
  "use strict";

  try {
    (function () {
      var o, t;
      Dh = Dh && Dh.hasOwnProperty("default") ? Dh.default : Dh, (t = o || (o = {}))[t.DEBUG = 0] = "DEBUG", t[t.VERBOSE = 1] = "VERBOSE", t[t.INFO = 2] = "INFO", t[t.WARN = 3] = "WARN", t[t.ERROR = 4] = "ERROR", t[t.SILENT = 5] = "SILENT";

      var e = o.INFO,
          n = function n(t, e) {
        for (var n = [], r = 2; r < arguments.length; r++) n[r - 2] = arguments[r];

        if (!(e < t.logLevel)) {
          var i = new Date().toISOString();

          switch (e) {
            case o.DEBUG:
            case o.VERBOSE:
              console.log.apply(console, ["[" + i + "]  " + t.name + ":"].concat(n));
              break;

            case o.INFO:
              console.info.apply(console, ["[" + i + "]  " + t.name + ":"].concat(n));
              break;

            case o.WARN:
              console.warn.apply(console, ["[" + i + "]  " + t.name + ":"].concat(n));
              break;

            case o.ERROR:
              console.error.apply(console, ["[" + i + "]  " + t.name + ":"].concat(n));
              break;

            default:
              throw new Error("Attempted to log a message with an invalid logType (value: " + e + ")");
          }
        }
      },
          r = function () {
        function t(t) {
          this.name = t, this._logLevel = e, this._logHandler = n;
        }

        return Object.defineProperty(t.prototype, "logLevel", {
          get: function get() {
            return this._logLevel;
          },
          set: function set(t) {
            if (!(t in o)) throw new TypeError("Invalid value assigned to `logLevel`");
            this._logLevel = t;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "logHandler", {
          get: function get() {
            return this._logHandler;
          },
          set: function set(t) {
            if ("function" != typeof t) throw new TypeError("Value assigned to `logHandler` must be a function");
            this._logHandler = t;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.debug = function () {
          for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];

          this._logHandler.apply(this, [this, o.DEBUG].concat(t));
        }, t.prototype.log = function () {
          for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];

          this._logHandler.apply(this, [this, o.VERBOSE].concat(t));
        }, t.prototype.info = function () {
          for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];

          this._logHandler.apply(this, [this, o.INFO].concat(t));
        }, t.prototype.warn = function () {
          for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];

          this._logHandler.apply(this, [this, o.WARN].concat(t));
        }, t.prototype.error = function () {
          for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];

          this._logHandler.apply(this, [this, o.ERROR].concat(t));
        }, t;
      }(),
          _i2 = function i(t, e) {
        return (_i2 = Object.setPrototypeOf || {
          __proto__: []
        } instanceof Array && function (t, e) {
          t.__proto__ = e;
        } || function (t, e) {
          for (var n in e) e.hasOwnProperty(n) && (t[n] = e[n]);
        })(t, e);
      };

      function s(t, e) {
        function n() {
          this.constructor = t;
        }

        _i2(t, e), t.prototype = null === e ? Object.create(e) : (n.prototype = e.prototype, new n());
      }

      function h(o, a, s, u) {
        return new (s || (s = Promise))(function (t, e) {
          function n(t) {
            try {
              i(u.next(t));
            } catch (t) {
              e(t);
            }
          }

          function r(t) {
            try {
              i(u.throw(t));
            } catch (t) {
              e(t);
            }
          }

          function i(e) {
            e.done ? t(e.value) : new s(function (t) {
              t(e.value);
            }).then(n, r);
          }

          i((u = u.apply(o, a || [])).next());
        });
      }

      function p(n, r) {
        var i,
            o,
            a,
            t,
            s = {
          label: 0,
          sent: function sent() {
            if (1 & a[0]) throw a[1];
            return a[1];
          },
          trys: [],
          ops: []
        };
        return t = {
          next: e(0),
          throw: e(1),
          return: e(2)
        }, "function" == typeof Symbol && (t[Symbol.iterator] = function () {
          return this;
        }), t;

        function e(e) {
          return function (t) {
            return function (e) {
              if (i) throw new TypeError("Generator is already executing.");

              for (; s;) try {
                if (i = 1, o && (a = 2 & e[0] ? o.return : e[0] ? o.throw || ((a = o.return) && a.call(o), 0) : o.next) && !(a = a.call(o, e[1])).done) return a;

                switch (o = 0, a && (e = [2 & e[0], a.value]), e[0]) {
                  case 0:
                  case 1:
                    a = e;
                    break;

                  case 4:
                    return s.label++, {
                      value: e[1],
                      done: !1
                    };

                  case 5:
                    s.label++, o = e[1], e = [0];
                    continue;

                  case 7:
                    e = s.ops.pop(), s.trys.pop();
                    continue;

                  default:
                    if (!(a = 0 < (a = s.trys).length && a[a.length - 1]) && (6 === e[0] || 2 === e[0])) {
                      s = 0;
                      continue;
                    }

                    if (3 === e[0] && (!a || e[1] > a[0] && e[1] < a[3])) {
                      s.label = e[1];
                      break;
                    }

                    if (6 === e[0] && s.label < a[1]) {
                      s.label = a[1], a = e;
                      break;
                    }

                    if (a && s.label < a[2]) {
                      s.label = a[2], s.ops.push(e);
                      break;
                    }

                    a[2] && s.ops.pop(), s.trys.pop();
                    continue;
                }

                e = r.call(n, s);
              } catch (t) {
                e = [6, t], o = 0;
              } finally {
                i = a = 0;
              }

              if (5 & e[0]) throw e[1];
              return {
                value: e[0] ? e[1] : void 0,
                done: !0
              };
            }([e, t]);
          };
        }
      }

      function a() {
        return "undefined" != typeof navigator && "string" == typeof navigator.userAgent ? navigator.userAgent : "";
      }

      var d = function (r) {
        function i(t, e) {
          var n = r.call(this, e) || this;
          return n.code = t, n.name = "FirebaseError", Object.setPrototypeOf(n, i.prototype), Error.captureStackTrace && Error.captureStackTrace(n, u.prototype.create), n;
        }

        return s(i, r), i;
      }(Error),
          u = function () {
        function t(t, e, n) {
          this.service = t, this.serviceName = e, this.errors = n;
        }

        return t.prototype.create = function (t) {
          for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];

          for (var r, i = e[0] || {}, o = this.service + "/" + t, a = this.errors[t], s = a ? (r = i, a.replace(m, function (t, e) {
            var n = r[e];
            return null != n ? n.toString() : "<" + e + "?>";
          })) : "Error", u = this.serviceName + ": " + s + " (" + o + ").", c = new d(o, u), h = 0, l = Object.keys(i); h < l.length; h++) {
            var f = l[h];
            "_" !== f.slice(-1) && (f in c && console.warn('Overwriting FirebaseError base field "' + f + '" can cause unexpected behavior.'), c[f] = i[f]);
          }

          return c;
        }, t;
      }();

      var c,
          m = /\{\$([^}]+)}/g,
          l = "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {},
          f = f || {},
          y = l;

      function g(t) {
        return "string" == typeof t;
      }

      function v(t) {
        return "number" == typeof t;
      }

      function b(t, e) {
        t = t.split("."), e = e || y;

        for (var n = 0; n < t.length; n++) if (null == (e = e[t[n]])) return null;

        return e;
      }

      function w() {}

      function E(t) {
        var e = typeof t;

        if ("object" == e) {
          if (!t) return "null";
          if (t instanceof Array) return "array";
          if (t instanceof Object) return e;
          var n = Object.prototype.toString.call(t);
          if ("[object Window]" == n) return "object";
          if ("[object Array]" == n || "number" == typeof t.length && void 0 !== t.splice && void 0 !== t.propertyIsEnumerable && !t.propertyIsEnumerable("splice")) return "array";
          if ("[object Function]" == n || void 0 !== t.call && void 0 !== t.propertyIsEnumerable && !t.propertyIsEnumerable("call")) return "function";
        } else if ("function" == e && void 0 === t.call) return "object";

        return e;
      }

      function S(t) {
        return "array" == E(t);
      }

      function T(t) {
        var e = E(t);
        return "array" == e || "object" == e && "number" == typeof t.length;
      }

      function I(t) {
        var e = typeof t;
        return "object" == e && null != t || "function" == e;
      }

      var C = "closure_uid_" + (1e9 * Math.random() >>> 0),
          D = 0;

      function N(t, e, n) {
        return t.call.apply(t.bind, arguments);
      }

      function A(e, n, t) {
        if (!e) throw Error();

        if (2 < arguments.length) {
          var r = Array.prototype.slice.call(arguments, 2);
          return function () {
            var t = Array.prototype.slice.call(arguments);
            return Array.prototype.unshift.apply(t, r), e.apply(n, t);
          };
        }

        return function () {
          return e.apply(n, arguments);
        };
      }

      function k(t, e, n) {
        return (k = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? N : A).apply(null, arguments);
      }

      function R(e, t) {
        var n = Array.prototype.slice.call(arguments, 1);
        return function () {
          var t = n.slice();
          return t.push.apply(t, arguments), e.apply(this, t);
        };
      }

      var M = Date.now || function () {
        return +new Date();
      };

      function O(t, o) {
        function e() {}

        e.prototype = o.prototype, t.N = o.prototype, t.prototype = new e(), (t.prototype.constructor = t).yb = function (t, e, n) {
          for (var r = Array(arguments.length - 2), i = 2; i < arguments.length; i++) r[i - 2] = arguments[i];

          return o.prototype[e].apply(t, r);
        };
      }

      function _() {
        this.j = this.j, this.i = this.i;
      }

      _.prototype.j = !1, _.prototype.la = function () {
        if (!this.j && (this.j = !0, this.G(), 0)) this[C] || (this[C] = ++D);
      }, _.prototype.G = function () {
        if (this.i) for (; this.i.length;) this.i.shift()();
      };
      var P = Array.prototype.indexOf ? function (t, e) {
        return Array.prototype.indexOf.call(t, e, void 0);
      } : function (t, e) {
        if (g(t)) return g(e) && 1 == e.length ? t.indexOf(e, 0) : -1;

        for (var n = 0; n < t.length; n++) if (n in t && t[n] === e) return n;

        return -1;
      },
          L = Array.prototype.forEach ? function (t, e, n) {
        Array.prototype.forEach.call(t, e, n);
      } : function (t, e, n) {
        for (var r = t.length, i = g(t) ? t.split("") : t, o = 0; o < r; o++) o in i && e.call(n, i[o], o, t);
      };

      function x(t) {
        return Array.prototype.concat.apply([], arguments);
      }

      function q(t) {
        var e = t.length;

        if (0 < e) {
          for (var n = Array(e), r = 0; r < e; r++) n[r] = t[r];

          return n;
        }

        return [];
      }

      function F(t) {
        return /^[\s\xa0]*$/.test(t);
      }

      var V,
          U = String.prototype.trim ? function (t) {
        return t.trim();
      } : function (t) {
        return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(t)[1];
      };

      function B(t, e) {
        return -1 != t.indexOf(e);
      }

      function Q(t, e) {
        return t < e ? -1 : e < t ? 1 : 0;
      }

      t: {
        var K = y.navigator;

        if (K) {
          var j = K.userAgent;

          if (j) {
            V = j;
            break t;
          }
        }

        V = "";
      }

      function G(t, e, n) {
        for (var r in t) e.call(n, t[r], r, t);
      }

      function W(t) {
        var e,
            n = {};

        for (e in t) n[e] = t[e];

        return n;
      }

      var z = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");

      function H(t, e) {
        for (var n, r, i = 1; i < arguments.length; i++) {
          for (n in r = arguments[i]) t[n] = r[n];

          for (var o = 0; o < z.length; o++) n = z[o], Object.prototype.hasOwnProperty.call(r, n) && (t[n] = r[n]);
        }
      }

      function Y(t) {
        return Y[" "](t), t;
      }

      Y[" "] = w;
      var X,
          J,
          $ = B(V, "Opera"),
          Z = B(V, "Trident") || B(V, "MSIE"),
          tt = B(V, "Edge"),
          et = tt || Z,
          nt = B(V, "Gecko") && !(B(V.toLowerCase(), "webkit") && !B(V, "Edge")) && !(B(V, "Trident") || B(V, "MSIE")) && !B(V, "Edge"),
          rt = B(V.toLowerCase(), "webkit") && !B(V, "Edge");

      function it() {
        var t = y.document;
        return t ? t.documentMode : void 0;
      }

      t: {
        var ot = "",
            at = (J = V, nt ? /rv:([^\);]+)(\)|;)/.exec(J) : tt ? /Edge\/([\d\.]+)/.exec(J) : Z ? /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(J) : rt ? /WebKit\/(\S+)/.exec(J) : $ ? /(?:Version)[ \/]?(\S+)/.exec(J) : void 0);

        if (at && (ot = at ? at[1] : ""), Z) {
          var st = it();

          if (null != st && st > parseFloat(ot)) {
            X = String(st);
            break t;
          }
        }

        X = ot;
      }

      var ut,
          ct = {};

      function ht(s) {
        return t = s, e = function e() {
          for (var t = 0, e = U(String(X)).split("."), n = U(String(s)).split("."), r = Math.max(e.length, n.length), i = 0; 0 == t && i < r; i++) {
            var o = e[i] || "",
                a = n[i] || "";

            do {
              if (o = /(\d*)(\D*)(.*)/.exec(o) || ["", "", "", ""], a = /(\d*)(\D*)(.*)/.exec(a) || ["", "", "", ""], 0 == o[0].length && 0 == a[0].length) break;
              t = Q(0 == o[1].length ? 0 : parseInt(o[1], 10), 0 == a[1].length ? 0 : parseInt(a[1], 10)) || Q(0 == o[2].length, 0 == a[2].length) || Q(o[2], a[2]), o = o[3], a = a[3];
            } while (0 == t);
          }

          return 0 <= t;
        }, n = ct, Object.prototype.hasOwnProperty.call(n, t) ? n[t] : n[t] = e(t);
        var t, e, n;
      }

      var lt = y.document;
      ut = lt && Z ? it() || ("CSS1Compat" == lt.compatMode ? parseInt(X, 10) : 5) : void 0;

      var ft = !Z || 9 <= Number(ut),
          pt = Z && !ht("9"),
          dt = function () {
        if (!y.addEventListener || !Object.defineProperty) return !1;
        var t = !1,
            e = Object.defineProperty({}, "passive", {
          get: function get() {
            t = !0;
          }
        });

        try {
          y.addEventListener("test", w, e), y.removeEventListener("test", w, e);
        } catch (t) {}

        return t;
      }();

      function mt(t, e) {
        this.type = t, this.a = this.target = e, this.Ja = !0;
      }

      function yt(t, e) {
        if (mt.call(this, t ? t.type : ""), this.relatedTarget = this.a = this.target = null, this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0, this.key = "", this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1, this.pointerId = 0, this.pointerType = "", this.c = null, t) {
          var n = this.type = t.type,
              r = t.changedTouches && t.changedTouches.length ? t.changedTouches[0] : null;

          if (this.target = t.target || t.srcElement, this.a = e, e = t.relatedTarget) {
            if (nt) {
              t: {
                try {
                  Y(e.nodeName);
                  var i = !0;
                  break t;
                } catch (t) {}

                i = !1;
              }

              i || (e = null);
            }
          } else "mouseover" == n ? e = t.fromElement : "mouseout" == n && (e = t.toElement);

          this.relatedTarget = e, this.screenY = r ? (this.clientX = void 0 !== r.clientX ? r.clientX : r.pageX, this.clientY = void 0 !== r.clientY ? r.clientY : r.pageY, this.screenX = r.screenX || 0, r.screenY || 0) : (this.clientX = void 0 !== t.clientX ? t.clientX : t.pageX, this.clientY = void 0 !== t.clientY ? t.clientY : t.pageY, this.screenX = t.screenX || 0, t.screenY || 0), this.button = t.button, this.key = t.key || "", this.ctrlKey = t.ctrlKey, this.altKey = t.altKey, this.shiftKey = t.shiftKey, this.metaKey = t.metaKey, this.pointerId = t.pointerId || 0, this.pointerType = g(t.pointerType) ? t.pointerType : gt[t.pointerType] || "", (this.c = t).defaultPrevented && this.b();
        }
      }

      mt.prototype.b = function () {
        this.Ja = !1;
      }, O(yt, mt);
      var gt = {
        2: "touch",
        3: "pen",
        4: "mouse"
      };

      yt.prototype.b = function () {
        yt.N.b.call(this);
        var t = this.c;
        if (t.preventDefault) t.preventDefault();else if (t.returnValue = !1, pt) try {
          (t.ctrlKey || 112 <= t.keyCode && t.keyCode <= 123) && (t.keyCode = -1);
        } catch (t) {}
      };

      var vt = "closure_listenable_" + (1e6 * Math.random() | 0),
          bt = 0;

      function wt(t, e, n, r, i) {
        this.listener = t, this.proxy = null, this.src = e, this.type = n, this.capture = !!r, this.da = i, this.key = ++bt, this.X = this.Z = !1;
      }

      function Et(t) {
        t.X = !0, t.listener = null, t.proxy = null, t.src = null, t.da = null;
      }

      function St(t) {
        this.src = t, this.a = {}, this.b = 0;
      }

      function Tt(t, e) {
        var n = e.type;

        if (n in t.a) {
          var r,
              i = t.a[n],
              o = P(i, e);
          (r = 0 <= o) && Array.prototype.splice.call(i, o, 1), r && (Et(e), 0 == t.a[n].length && (delete t.a[n], t.b--));
        }
      }

      function It(t, e, n, r) {
        for (var i = 0; i < t.length; ++i) {
          var o = t[i];
          if (!o.X && o.listener == e && o.capture == !!n && o.da == r) return i;
        }

        return -1;
      }

      St.prototype.add = function (t, e, n, r, i) {
        var o = t.toString();
        (t = this.a[o]) || (t = this.a[o] = [], this.b++);
        var a = It(t, e, r, i);
        return -1 < a ? (e = t[a], n || (e.Z = !1)) : ((e = new wt(e, this.src, o, !!r, i)).Z = n, t.push(e)), e;
      };

      var Ct = "closure_lm_" + (1e6 * Math.random() | 0),
          Dt = {};

      function Nt(t, e, n, r, i) {
        if (r && r.once) return function t(e, n, r, i, o) {
          if (S(n)) {
            for (var a = 0; a < n.length; a++) t(e, n[a], r, i, o);

            return null;
          }

          r = Lt(r);
          return e && e[vt] ? e.Ba(n, r, I(i) ? !!i.capture : !!i, o) : At(e, n, r, !0, i, o);
        }(t, e, n, r, i);

        if (S(e)) {
          for (var o = 0; o < e.length; o++) Nt(t, e[o], n, r, i);

          return null;
        }

        return n = Lt(n), t && t[vt] ? t.Aa(e, n, I(r) ? !!r.capture : !!r, i) : At(t, e, n, !1, r, i);
      }

      function At(t, e, n, r, i, o) {
        if (!e) throw Error("Invalid event type");
        var a = I(i) ? !!i.capture : !!i;
        if (a && !ft) return null;

        var s,
            u,
            c = _t(t);

        if (c || (t[Ct] = c = new St(t)), (n = c.add(e, n, r, a, o)).proxy) return n;
        if (s = Ot, r = u = ft ? function (t) {
          return s.call(u.src, u.listener, t);
        } : function (t) {
          if (!(t = s.call(u.src, u.listener, t))) return t;
        }, (n.proxy = r).src = t, r.listener = n, t.addEventListener) dt || (i = a), void 0 === i && (i = !1), t.addEventListener(e.toString(), r, i);else if (t.attachEvent) t.attachEvent(Rt(e.toString()), r);else {
          if (!t.addListener || !t.removeListener) throw Error("addEventListener and attachEvent are unavailable.");
          t.addListener(r);
        }
        return n;
      }

      function kt(t) {
        if (!v(t) && t && !t.X) {
          var e = t.src;
          if (e && e[vt]) Tt(e.c, t);else {
            var n = t.type,
                r = t.proxy;
            e.removeEventListener ? e.removeEventListener(n, r, t.capture) : e.detachEvent ? e.detachEvent(Rt(n), r) : e.addListener && e.removeListener && e.removeListener(r), (n = _t(e)) ? (Tt(n, t), 0 == n.b && (n.src = null, e[Ct] = null)) : Et(t);
          }
        }
      }

      function Rt(t) {
        return t in Dt ? Dt[t] : Dt[t] = "on" + t;
      }

      function Mt(t, e) {
        var n = t.listener,
            r = t.da || t.src;
        return t.Z && kt(t), n.call(r, e);
      }

      function Ot(t, e) {
        return !!t.X || (ft ? Mt(t, new yt(e, this)) : Mt(t, e = new yt(e || b("window.event"), this)));
      }

      function _t(t) {
        return (t = t[Ct]) instanceof St ? t : null;
      }

      var Pt = "__closure_events_fn_" + (1e9 * Math.random() >>> 0);

      function Lt(e) {
        return "function" == E(e) ? e : (e[Pt] || (e[Pt] = function (t) {
          return e.handleEvent(t);
        }), e[Pt]);
      }

      function xt() {
        _.call(this), this.c = new St(this), (this.J = this).B = null;
      }

      function qt(t, e, n, r) {
        if (!(e = t.c.a[String(e)])) return !0;
        e = e.concat();

        for (var i = !0, o = 0; o < e.length; ++o) {
          var a = e[o];

          if (a && !a.X && a.capture == n) {
            var s = a.listener,
                u = a.da || a.src;
            a.Z && Tt(t.c, a), i = !1 !== s.call(u, r) && i;
          }
        }

        return i && 0 != r.Ja;
      }

      O(xt, _), xt.prototype[vt] = !0, (c = xt.prototype).addEventListener = function (t, e, n, r) {
        Nt(this, t, e, n, r);
      }, c.removeEventListener = function (t, e, n, r) {
        !function t(e, n, r, i, o) {
          if (S(n)) for (var a = 0; a < n.length; a++) t(e, n[a], r, i, o);else i = I(i) ? !!i.capture : !!i, r = Lt(r), e && e[vt] ? (e = e.c, (n = String(n).toString()) in e.a && -1 < (r = It(a = e.a[n], r, i, o)) && (Et(a[r]), Array.prototype.splice.call(a, r, 1), 0 == a.length && (delete e.a[n], e.b--))) : e && (e = _t(e)) && (n = e.a[n.toString()], e = -1, n && (e = It(n, r, i, o)), (r = -1 < e ? n[e] : null) && kt(r));
        }(this, t, e, n, r);
      }, c.dispatchEvent = function (t) {
        var e,
            n = this.B;
        if (n) for (e = []; n; n = n.B) e.push(n);
        n = this.J;
        var r = t.type || t;
        if (g(t)) t = new mt(t, n);else if (t instanceof mt) t.target = t.target || n;else {
          var i = t;
          H(t = new mt(r, n), i);
        }
        if (i = !0, e) for (var o = e.length - 1; 0 <= o; o--) {
          var a = t.a = e[o];
          i = qt(a, r, !0, t) && i;
        }
        if (i = qt(a = t.a = n, r, !0, t) && i, i = qt(a, r, !1, t) && i, e) for (o = 0; o < e.length; o++) i = qt(a = t.a = e[o], r, !1, t) && i;
        return i;
      }, c.G = function () {
        if (xt.N.G.call(this), this.c) {
          var t,
              e = this.c;

          for (t in e.a) {
            for (var n = e.a[t], r = 0; r < n.length; r++) Et(n[r]);

            delete e.a[t], e.b--;
          }
        }

        this.B = null;
      }, c.Aa = function (t, e, n, r) {
        return this.c.add(String(t), e, !1, n, r);
      }, c.Ba = function (t, e, n, r) {
        return this.c.add(String(t), e, !0, n, r);
      };
      var Ft = y.JSON.stringify;

      function Vt(t, e) {
        this.c = t, this.f = e, this.b = 0, this.a = null;
      }

      function Ut() {
        this.b = this.a = null;
      }

      Vt.prototype.get = function () {
        if (0 < this.b) {
          this.b--;
          var t = this.a;
          this.a = t.next, t.next = null;
        } else t = this.c();

        return t;
      };

      var Bt,
          Qt = new Vt(function () {
        return new Kt();
      }, function (t) {
        t.reset();
      });

      function Kt() {
        this.next = this.b = this.a = null;
      }

      function jt(t) {
        y.setTimeout(function () {
          throw t;
        }, 0);
      }

      function Gt(t, e) {
        var n;
        Bt || (n = y.Promise.resolve(void 0), Bt = function Bt() {
          n.then(Ht);
        }), Wt || (Bt(), Wt = !0), zt.add(t, e);
      }

      Ut.prototype.add = function (t, e) {
        var n = Qt.get();
        n.set(t, e), this.b ? this.b.next = n : this.a = n, this.b = n;
      }, Kt.prototype.set = function (t, e) {
        this.a = t, this.b = e, this.next = null;
      };
      var Wt = !(Kt.prototype.reset = function () {
        this.next = this.b = this.a = null;
      }),
          zt = new Ut();

      function Ht() {
        for (var t; r = n = void 0, r = null, (n = zt).a && (r = n.a, n.a = n.a.next, n.a || (n.b = null), r.next = null), t = r;) {
          try {
            t.a.call(t.b);
          } catch (t) {
            jt(t);
          }

          var e = Qt;
          e.f(t), e.b < 100 && (e.b++, t.next = e.a, e.a = t);
        }

        var n, r;
        Wt = !1;
      }

      function Yt(t, e) {
        xt.call(this), this.b = t || 1, this.a = e || y, this.f = k(this.gb, this), this.g = M();
      }

      function Xt(t) {
        t.ba = !1, t.L && (t.a.clearTimeout(t.L), t.L = null);
      }

      function Jt(t, e, n) {
        if ("function" == E(t)) n && (t = k(t, n));else {
          if (!t || "function" != typeof t.handleEvent) throw Error("Invalid listener argument");
          t = k(t.handleEvent, t);
        }
        return 2147483647 < Number(e) ? -1 : y.setTimeout(t, e || 0);
      }

      function $t(t, e, n) {
        _.call(this), this.f = null != n ? k(t, n) : t, this.c = e, this.b = k(this.ab, this), this.a = [];
      }

      function Zt(t) {
        t.U = Jt(t.b, t.c), t.f.apply(null, t.a);
      }

      function te(t) {
        _.call(this), this.b = t, this.a = {};
      }

      O(Yt, xt), (c = Yt.prototype).ba = !1, c.L = null, c.gb = function () {
        if (this.ba) {
          var t = M() - this.g;
          0 < t && t < .8 * this.b ? this.L = this.a.setTimeout(this.f, this.b - t) : (this.L && (this.a.clearTimeout(this.L), this.L = null), this.dispatchEvent("tick"), this.ba && (Xt(this), this.start()));
        }
      }, c.start = function () {
        this.ba = !0, this.L || (this.L = this.a.setTimeout(this.f, this.b), this.g = M());
      }, c.G = function () {
        Yt.N.G.call(this), Xt(this), delete this.a;
      }, O($t, _), (c = $t.prototype).ea = !1, c.U = null, c.Ua = function (t) {
        this.a = arguments, this.U ? this.ea = !0 : Zt(this);
      }, c.G = function () {
        $t.N.G.call(this), this.U && (y.clearTimeout(this.U), this.U = null, this.ea = !1, this.a = []);
      }, c.ab = function () {
        this.U = null, this.ea && (this.ea = !1, Zt(this));
      }, O(te, _);
      var ee = [];

      function ne(t, e, n, r) {
        S(n) || (n && (ee[0] = n.toString()), n = ee);

        for (var i = 0; i < n.length; i++) {
          var o = Nt(e, n[i], r || t.handleEvent, !1, t.b || t);
          if (!o) break;
          t.a[o.key] = o;
        }
      }

      function re(t) {
        G(t.a, function (t, e) {
          this.a.hasOwnProperty(e) && kt(t);
        }, t), t.a = {};
      }

      function ie() {}

      te.prototype.G = function () {
        te.N.G.call(this), re(this);
      }, te.prototype.handleEvent = function () {
        throw Error("EventHandler.handleEvent not implemented");
      };
      var oe = new xt();

      function ae(t) {
        mt.call(this, "serverreachability", t);
      }

      function se(t) {
        oe.dispatchEvent(new ae(oe, t));
      }

      function ue(t) {
        mt.call(this, "statevent", t);
      }

      function ce(t) {
        oe.dispatchEvent(new ue(oe, t));
      }

      function he(t) {
        mt.call(this, "timingevent", t);
      }

      function le(t, e) {
        if ("function" != E(t)) throw Error("Fn must not be null and must be a function");
        return y.setTimeout(function () {
          t();
        }, e);
      }

      O(ae, mt), O(ue, mt), O(he, mt);
      var fe = {
        NO_ERROR: 0,
        hb: 1,
        ob: 2,
        nb: 3,
        kb: 4,
        mb: 5,
        pb: 6,
        Ma: 7,
        TIMEOUT: 8,
        sb: 9
      },
          pe = {
        jb: "complete",
        wb: "success",
        Na: "error",
        Ma: "abort",
        ub: "ready",
        vb: "readystatechange",
        TIMEOUT: "timeout",
        qb: "incrementaldata",
        tb: "progress",
        lb: "downloadprogress",
        xb: "uploadprogress"
      };

      function de() {}

      function me(t) {
        var e;
        return (e = t.a) || (e = t.a = {}), e;
      }

      function ye() {}

      de.prototype.a = null;
      var ge,
          ve = {
        OPEN: "a",
        ib: "b",
        Na: "c",
        rb: "d"
      };

      function be() {
        mt.call(this, "d");
      }

      function we() {
        mt.call(this, "c");
      }

      function Ee() {}

      function Se(t, e, n) {
        this.g = t, this.W = e, this.V = n || 1, this.I = new te(this), this.O = Te, t = et ? 125 : void 0, this.P = new Yt(t), this.h = null, this.b = !1, this.l = this.D = this.f = this.F = this.v = this.R = this.i = null, this.j = [], this.a = null, this.A = 0, this.c = this.w = null, this.o = -1, this.m = !1, this.J = 0, this.B = null, this.s = this.S = this.H = !1;
      }

      O(be, mt), O(we, mt), O(Ee, de), ge = new Ee();
      var Te = 45e3,
          Ie = {},
          Ce = {};

      function De(t, e, n) {
        t.F = 1, t.f = Je(je(e)), t.l = n, t.H = !0, Ae(t, null);
      }

      function Ne(t, e, n, r) {
        t.F = 1, t.f = Je(je(e)), t.l = null, t.H = n, Ae(t, r);
      }

      function Ae(t, e) {
        t.v = M(), Me(t), t.D = je(t.f), Xe(t.D, "t", t.V), t.A = 0, t.a = t.g.$(t.g.Y() ? e : null), 0 < t.J && (t.B = new $t(k(t.Ka, t, t.a), t.J)), ne(t.I, t.a, "readystatechange", t.eb), e = t.h ? W(t.h) : {}, t.l ? (t.w || (t.w = "POST"), e["Content-Type"] = "application/x-www-form-urlencoded", t.a.ca(t.D, t.w, t.l, e)) : (t.w = "GET", t.a.ca(t.D, t.w, null, e)), se(1);
      }

      function ke(t, e, n) {
        for (var r = !0; !t.m && t.A < n.length;) {
          var i = Re(t, n);

          if (i == Ce) {
            4 == e && (t.c = 4, ce(14), r = !1);
            break;
          }

          if (i == Ie) {
            t.c = 4, ce(15), r = !1;
            break;
          }

          xe(t, i);
        }

        4 == e && 0 == n.length && (t.c = 1, ce(16), r = !1), t.b = t.b && r, r || (Le(t), Pe(t));
      }

      function Re(t, e) {
        var n = t.A,
            r = e.indexOf("\n", n);
        return -1 == r ? Ce : (n = Number(e.substring(n, r)), isNaN(n) ? Ie : (r += 1) + n > e.length ? Ce : (e = e.substr(r, n), t.A = r + n, e));
      }

      function Me(t) {
        t.R = M() + t.O, Oe(t, t.O);
      }

      function Oe(t, e) {
        if (null != t.i) throw Error("WatchDog timer not null");
        t.i = le(k(t.bb, t), e);
      }

      function _e(t) {
        t.i && (y.clearTimeout(t.i), t.i = null);
      }

      function Pe(t) {
        t.g.Da() || t.m || t.g.na(t);
      }

      function Le(t) {
        _e(t);

        var e = t.B;
        e && "function" == typeof e.la && e.la(), t.B = null, Xt(t.P), re(t.I), t.a && (e = t.a, t.a = null, e.abort(), e.la());
      }

      function xe(t, e) {
        try {
          t.g.Ga(t, e), se(4);
        } catch (t) {}
      }

      function qe(t, e) {
        if (t.forEach && "function" == typeof t.forEach) t.forEach(e, void 0);else if (T(t) || g(t)) L(t, e, void 0);else {
          if (t.K && "function" == typeof t.K) var n = t.K();else if (t.C && "function" == typeof t.C) n = void 0;else if (T(t) || g(t)) {
            n = [];

            for (var r = t.length, i = 0; i < r; i++) n.push(i);
          } else for (i in n = [], r = 0, t) n[r++] = i;

          i = (r = function (t) {
            if (t.C && "function" == typeof t.C) return t.C();
            if (g(t)) return t.split("");

            if (T(t)) {
              for (var e = [], n = t.length, r = 0; r < n; r++) e.push(t[r]);

              return e;
            }

            for (r in e = [], n = 0, t) e[n++] = t[r];

            return e;
          }(t)).length;

          for (var o = 0; o < i; o++) e.call(void 0, r[o], n && n[o], t);
        }
      }

      function Fe(t, e) {
        this.b = {}, this.a = [], this.c = 0;
        var n = arguments.length;

        if (1 < n) {
          if (n % 2) throw Error("Uneven number of arguments");

          for (var r = 0; r < n; r += 2) this.set(arguments[r], arguments[r + 1]);
        } else if (t) if (t instanceof Fe) for (n = t.K(), r = 0; r < n.length; r++) this.set(n[r], t.get(n[r]));else for (r in t) this.set(r, t[r]);
      }

      function Ve(t, e) {
        Be(t.b, e) && (delete t.b[e], t.c--, t.a.length > 2 * t.c && Ue(t));
      }

      function Ue(t) {
        if (t.c != t.a.length) {
          for (var e = 0, n = 0; e < t.a.length;) {
            var r = t.a[e];
            Be(t.b, r) && (t.a[n++] = r), e++;
          }

          t.a.length = n;
        }

        if (t.c != t.a.length) {
          var i = {};

          for (n = e = 0; e < t.a.length;) Be(i, r = t.a[e]) || (i[t.a[n++] = r] = 1), e++;

          t.a.length = n;
        }
      }

      function Be(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e);
      }

      (c = Se.prototype).setTimeout = function (t) {
        this.O = t;
      }, c.eb = function (t) {
        t = t.target;
        var e = this.B;
        e && 3 == jn(t) ? e.Ua() : this.Ka(t);
      }, c.Ka = function (t) {
        try {
          if (t == this.a) t: {
            var e = jn(this.a),
                n = this.a.ya(),
                r = this.a.T();

            if (!(e < 3 || 3 == e && !et && !this.a.aa())) {
              this.m || 4 != e || 7 == n || se(8 == n || r <= 0 ? 3 : 2), _e(this);
              var i = this.a.T();
              this.o = i;
              var o = this.a.aa();

              if (this.b = 200 == i) {
                if (this.S && !this.s) {
                  e: {
                    if (this.a) {
                      var a = Gn(this.a, "X-HTTP-Initial-Response");

                      if (a && !F(a)) {
                        var s = a;
                        break e;
                      }
                    }

                    s = null;
                  }

                  if (!s) {
                    this.b = !1, this.c = 3, ce(12), Le(this), Pe(this);
                    break t;
                  }

                  this.s = !0, xe(this, s);
                }

                this.H ? (ke(this, e, o), et && this.b && 3 == e && (ne(this.I, this.P, "tick", this.cb), this.P.start())) : xe(this, o), 4 == e && Le(this), this.b && !this.m && (4 == e ? this.g.na(this) : (this.b = !1, Me(this)));
              } else 400 == i && 0 < o.indexOf("Unknown SID") ? (this.c = 3, ce(12)) : (this.c = 0, ce(13)), Le(this), Pe(this);
            }
          }
        } catch (t) {}
      }, c.cb = function () {
        if (this.a) {
          var t = jn(this.a),
              e = this.a.aa();
          this.A < e.length && (_e(this), ke(this, t, e), this.b && 4 != t && Me(this));
        }
      }, c.cancel = function () {
        this.m = !0, Le(this);
      }, c.bb = function () {
        this.i = null;
        var t = M();
        0 <= t - this.R ? (2 != this.F && (se(3), ce(17)), Le(this), this.c = 2, Pe(this)) : Oe(this, this.R - t);
      }, (c = Fe.prototype).C = function () {
        Ue(this);

        for (var t = [], e = 0; e < this.a.length; e++) t.push(this.b[this.a[e]]);

        return t;
      }, c.K = function () {
        return Ue(this), this.a.concat();
      }, c.get = function (t, e) {
        return Be(this.b, t) ? this.b[t] : e;
      }, c.set = function (t, e) {
        Be(this.b, t) || (this.c++, this.a.push(t)), this.b[t] = e;
      }, c.forEach = function (t, e) {
        for (var n = this.K(), r = 0; r < n.length; r++) {
          var i = n[r],
              o = this.get(i);
          t.call(e, o, i, this);
        }
      };
      var Qe = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;

      function Ke(t, e) {
        var n;
        this.b = this.j = this.f = "", this.i = null, this.g = this.a = "", this.h = !1, t instanceof Ke ? (this.h = void 0 !== e ? e : t.h, Ge(this, t.f), this.j = t.j, We(this, t.b), ze(this, t.i), this.a = t.a, He(this, fn(t.c)), this.g = t.g) : t && (n = String(t).match(Qe)) ? (this.h = !!e, Ge(this, n[1] || "", !0), this.j = $e(n[2] || ""), We(this, n[3] || "", !0), ze(this, n[4]), this.a = $e(n[5] || "", !0), He(this, n[6] || "", !0), this.g = $e(n[7] || "")) : (this.h = !!e, this.c = new sn(null, this.h));
      }

      function je(t) {
        return new Ke(t);
      }

      function Ge(t, e, n) {
        t.f = n ? $e(e, !0) : e, t.f && (t.f = t.f.replace(/:$/, ""));
      }

      function We(t, e, n) {
        t.b = n ? $e(e, !0) : e;
      }

      function ze(t, e) {
        if (e) {
          if (e = Number(e), isNaN(e) || e < 0) throw Error("Bad port number " + e);
          t.i = e;
        } else t.i = null;
      }

      function He(t, e, n) {
        var r, i;
        e instanceof sn ? (t.c = e, r = t.c, (i = t.h) && !r.f && (un(r), r.c = null, r.a.forEach(function (t, e) {
          var n = e.toLowerCase();
          e != n && (cn(this, e), ln(this, n, t));
        }, r)), r.f = i) : (n || (e = Ze(e, on)), t.c = new sn(e, t.h));
      }

      function Ye(t, e, n) {
        t.c.set(e, n);
      }

      function Xe(t, e, n) {
        S(n) || (n = [String(n)]), ln(t.c, e, n);
      }

      function Je(t) {
        return Ye(t, "zx", Math.floor(2147483648 * Math.random()).toString(36) + Math.abs(Math.floor(2147483648 * Math.random()) ^ M()).toString(36)), t;
      }

      function $e(t, e) {
        return t ? e ? decodeURI(t.replace(/%25/g, "%2525")) : decodeURIComponent(t) : "";
      }

      function Ze(t, e, n) {
        return g(t) ? (t = encodeURI(t).replace(e, tn), n && (t = t.replace(/%25([0-9a-fA-F]{2})/g, "%$1")), t) : null;
      }

      function tn(t) {
        return "%" + ((t = t.charCodeAt(0)) >> 4 & 15).toString(16) + (15 & t).toString(16);
      }

      Ke.prototype.toString = function () {
        var t = [],
            e = this.f;
        e && t.push(Ze(e, en, !0), ":");
        var n = this.b;
        return (n || "file" == e) && (t.push("//"), (e = this.j) && t.push(Ze(e, en, !0), "@"), t.push(encodeURIComponent(String(n)).replace(/%25([0-9a-fA-F]{2})/g, "%$1")), null != (n = this.i) && t.push(":", String(n))), (n = this.a) && (this.b && "/" != n.charAt(0) && t.push("/"), t.push(Ze(n, "/" == n.charAt(0) ? rn : nn, !0))), (n = this.c.toString()) && t.push("?", n), (n = this.g) && t.push("#", Ze(n, an)), t.join("");
      }, Ke.prototype.resolve = function (t) {
        var e = je(this),
            n = !!t.f;
        n ? Ge(e, t.f) : n = !!t.j, n ? e.j = t.j : n = !!t.b, n ? We(e, t.b) : n = null != t.i;
        var r = t.a;
        if (n) ze(e, t.i);else if (n = !!t.a) {
          if ("/" != r.charAt(0)) if (this.b && !this.a) r = "/" + r;else {
            var i = e.a.lastIndexOf("/");
            -1 != i && (r = e.a.substr(0, i + 1) + r);
          }
          if (".." == (i = r) || "." == i) r = "";else if (B(i, "./") || B(i, "/.")) {
            r = 0 == i.lastIndexOf("/", 0), i = i.split("/");

            for (var o = [], a = 0; a < i.length;) {
              var s = i[a++];
              "." == s ? r && a == i.length && o.push("") : ".." == s ? ((1 < o.length || 1 == o.length && "" != o[0]) && o.pop(), r && a == i.length && o.push("")) : (o.push(s), r = !0);
            }

            r = o.join("/");
          } else r = i;
        }
        return n ? e.a = r : n = "" !== t.c.toString(), n ? He(e, fn(t.c)) : n = !!t.g, n && (e.g = t.g), e;
      };
      var en = /[#\/\?@]/g,
          nn = /[#\?:]/g,
          rn = /[#\?]/g,
          on = /[#\?@]/g,
          an = /#/g;

      function sn(t, e) {
        this.b = this.a = null, this.c = t || null, this.f = !!e;
      }

      function un(n) {
        n.a || (n.a = new Fe(), n.b = 0, n.c && function (t, e) {
          if (t) {
            t = t.split("&");

            for (var n = 0; n < t.length; n++) {
              var r = t[n].indexOf("="),
                  i = null;

              if (0 <= r) {
                var o = t[n].substring(0, r);
                i = t[n].substring(r + 1);
              } else o = t[n];

              e(o, i ? decodeURIComponent(i.replace(/\+/g, " ")) : "");
            }
          }
        }(n.c, function (t, e) {
          n.add(decodeURIComponent(t.replace(/\+/g, " ")), e);
        }));
      }

      function cn(t, e) {
        un(t), e = pn(t, e), Be(t.a.b, e) && (t.c = null, t.b -= t.a.get(e).length, Ve(t.a, e));
      }

      function hn(t, e) {
        return un(t), e = pn(t, e), Be(t.a.b, e);
      }

      function ln(t, e, n) {
        cn(t, e), 0 < n.length && (t.c = null, t.a.set(pn(t, e), q(n)), t.b += n.length);
      }

      function fn(t) {
        var e = new sn();
        return e.c = t.c, t.a && (e.a = new Fe(t.a), e.b = t.b), e;
      }

      function pn(t, e) {
        return e = String(e), t.f && (e = e.toLowerCase()), e;
      }

      function dn(t) {
        this.a = t, this.b = this.h = null, this.g = !1, this.i = null, this.c = -1, this.l = this.f = null;
      }

      function mn(t) {
        var e = t.a.F.a;
        if (null != e) ce(4), e ? (ce(10), rr(t.a, t, !1)) : (ce(11), rr(t.a, t, !0));else {
          t.b = new Se(t, void 0, void 0), t.b.h = t.h, e = ur(e = t.a, e.Y() ? t.f : null, t.i), ce(4), Xe(e, "TYPE", "xmlhttp");
          var n = t.a.j,
              r = t.a.I;
          n && r && Ye(e, n, r), Ne(t.b, e, !1, t.f);
        }
      }

      function yn() {
        this.a = this.b = null;
      }

      function gn() {
        this.a = new Fe();
      }

      function vn(t) {
        var e = typeof t;
        return "object" == e && t || "function" == e ? "o" + (t[C] || (t[C] = ++D)) : e.charAt(0) + t;
      }

      function bn(t, e) {
        this.b = t, this.a = e;
      }

      function wn(t) {
        this.g = t || En, t = y.PerformanceNavigationTiming ? 0 < (t = y.performance.getEntriesByType("navigation")).length && ("hq" == t[0].nextHopProtocol || "h2" == t[0].nextHopProtocol) : !!(y.ka && y.ka.Ea && y.ka.Ea() && y.ka.Ea().zb), this.f = t ? this.g : 1, this.a = null, 1 < this.f && (this.a = new gn()), this.b = null, this.c = [];
      }

      (c = sn.prototype).add = function (t, e) {
        un(this), this.c = null, t = pn(this, t);
        var n = this.a.get(t);
        return n || this.a.set(t, n = []), n.push(e), this.b += 1, this;
      }, c.forEach = function (n, r) {
        un(this), this.a.forEach(function (t, e) {
          L(t, function (t) {
            n.call(r, t, e, this);
          }, this);
        }, this);
      }, c.K = function () {
        un(this);

        for (var t = this.a.C(), e = this.a.K(), n = [], r = 0; r < e.length; r++) for (var i = t[r], o = 0; o < i.length; o++) n.push(e[r]);

        return n;
      }, c.C = function (t) {
        un(this);
        var e = [];
        if (g(t)) hn(this, t) && (e = x(e, this.a.get(pn(this, t))));else {
          t = this.a.C();

          for (var n = 0; n < t.length; n++) e = x(e, t[n]);
        }
        return e;
      }, c.set = function (t, e) {
        return un(this), this.c = null, hn(this, t = pn(this, t)) && (this.b -= this.a.get(t).length), this.a.set(t, [e]), this.b += 1, this;
      }, c.get = function (t, e) {
        return t && 0 < (t = this.C(t)).length ? String(t[0]) : e;
      }, c.toString = function () {
        if (this.c) return this.c;
        if (!this.a) return "";

        for (var t = [], e = this.a.K(), n = 0; n < e.length; n++) {
          var r = e[n],
              i = encodeURIComponent(String(r));
          r = this.C(r);

          for (var o = 0; o < r.length; o++) {
            var a = i;
            "" !== r[o] && (a += "=" + encodeURIComponent(String(r[o]))), t.push(a);
          }
        }

        return this.c = t.join("&");
      }, O(function () {}, function () {}), (c = dn.prototype).M = null, c.$ = function (t) {
        return this.a.$(t);
      }, c.abort = function () {
        this.b && (this.b.cancel(), this.b = null), this.c = -1;
      }, c.Da = function () {
        return !1;
      }, c.Ga = function (t, e) {
        if (this.c = t.o, 0 == this.M) {
          if (!this.a.o && (t = t.a)) {
            var n = Gn(t, "X-Client-Wire-Protocol");
            this.l = n || null, this.a.j && (t = Gn(t, "X-HTTP-Session-Id")) && (this.a.I = t);
          }

          if (e) {
            try {
              var r = this.a.ja.a.parse(e);
            } catch (t) {
              return (e = this.a).m = this.c, void ar(e, 2);
            }

            this.f = r[0];
          } else (e = this.a).m = this.c, ar(e, 2);
        } else 1 == this.M && (this.g ? ce(6) : "11111" == e ? (ce(5), this.g = !0, (!Z || 10 <= Number(ut)) && (this.c = 200, this.b.cancel(), ce(11), rr(this.a, this, !0))) : (ce(7), this.g = !1));
      }, c.na = function () {
        if (this.c = this.b.o, this.b.b) 0 == this.M ? (this.M = 1, mn(this)) : 1 == this.M && (this.g ? (ce(11), rr(this.a, this, !0)) : (ce(10), rr(this.a, this, !1)));else {
          0 == this.M ? ce(8) : 1 == this.M && ce(9);
          var t = this.a;
          t.m = this.c, ar(t, 2);
        }
      }, c.Y = function () {
        return this.a.Y();
      }, c.ma = function () {
        return this.a.ma();
      }, gn.prototype.add = function (t) {
        this.a.set(vn(t), t);
      }, gn.prototype.C = function () {
        return this.a.C();
      };
      var En = 10;

      function Sn(t, e) {
        !t.a && (B(e, "spdy") || B(e, "quic") || B(e, "h2")) && (t.f = t.g, t.a = new gn(), t.b && (Dn(t, t.b), t.b = null));
      }

      function Tn(t) {
        return !!t.b || !!t.a && t.a.a.c >= t.f;
      }

      function In(t) {
        return t.b ? 1 : t.a ? t.a.a.c : 0;
      }

      function Cn(t, e) {
        return t = t.b ? t.b == e : !!t.a && (e = vn(e), Be(t.a.a.b, e));
      }

      function Dn(t, e) {
        t.a ? t.a.add(e) : t.b = e;
      }

      function Nn(t, e) {
        var n;
        t.b && t.b == e ? t.b = null : ((n = t.a) && (n = vn(e), n = Be(t.a.a.b, n)), n && Ve(t.a.a, vn(e)));
      }

      function An(t) {
        if (null != t.b) return t.c.concat(t.b.j);
        if (null == t.a || 0 == t.a.a.c) return q(t.c);
        var e = t.c;
        return L(t.a.C(), function (t) {
          e = e.concat(t.j);
        }), e;
      }

      function kn() {}

      function Rn() {
        this.a = new kn();
      }

      function Mn(t, r, e) {
        var i = e || "";

        try {
          qe(t, function (t, e) {
            var n = t;
            I(t) && (n = Ft(t)), r.push(i + e + "=" + encodeURIComponent(n));
          });
        } catch (t) {
          throw r.push(i + "type=" + encodeURIComponent("_badmap")), t;
        }
      }

      function On(t, e, n, r, i) {
        try {
          e.onload = null, e.onerror = null, e.onabort = null, e.ontimeout = null, i(r);
        } catch (t) {}
      }

      wn.prototype.cancel = function () {
        var t;
        this.c = An(this), this.b ? (this.b.cancel(), this.b = null) : this.a && 0 != this.a.a.c && (L(this.a.C(), function (t) {
          t.cancel();
        }), (t = this.a.a).b = {}, t.a.length = 0, t.c = 0);
      }, kn.prototype.stringify = function (t) {
        return y.JSON.stringify(t, void 0);
      }, kn.prototype.parse = function (t) {
        return y.JSON.parse(t, void 0);
      };
      var _n = y.JSON.parse;

      function Pn(t) {
        xt.call(this), this.headers = new Fe(), this.H = t || null, this.b = !1, this.s = this.a = null, this.A = "", this.h = 0, this.f = "", this.g = this.w = this.l = this.v = !1, this.o = 0, this.m = null, this.I = Ln, this.D = this.F = !1;
      }

      O(Pn, xt);
      var Ln = "",
          xn = /^https?$/i,
          qn = ["POST", "PUT"];

      function Fn(t) {
        return "content-type" == t.toLowerCase();
      }

      function Vn(t, e) {
        t.b = !1, t.a && (t.g = !0, t.a.abort(), t.g = !1), t.f = e, t.h = 5, Un(t), Qn(t);
      }

      function Un(t) {
        t.v || (t.v = !0, t.dispatchEvent("complete"), t.dispatchEvent("error"));
      }

      function Bn(t) {
        if (t.b && void 0 !== f && (!t.s[1] || 4 != jn(t) || 2 != t.T())) if (t.l && 4 == jn(t)) Jt(t.Fa, 0, t);else if (t.dispatchEvent("readystatechange"), 4 == jn(t)) {
          t.b = !1;

          try {
            var e,
                n = t.T();

            t: switch (n) {
              case 200:
              case 201:
              case 202:
              case 204:
              case 206:
              case 304:
              case 1223:
                var r = !0;
                break t;

              default:
                r = !1;
            }

            if (!(e = r)) {
              var i;

              if (i = 0 === n) {
                var o = String(t.A).match(Qe)[1] || null;

                if (!o && y.self && y.self.location) {
                  var a = y.self.location.protocol;
                  o = a.substr(0, a.length - 1);
                }

                i = !xn.test(o ? o.toLowerCase() : "");
              }

              e = i;
            }

            e ? (t.dispatchEvent("complete"), t.dispatchEvent("success")) : (t.h = 6, t.f = t.za() + " [" + t.T() + "]", Un(t));
          } finally {
            Qn(t);
          }
        }
      }

      function Qn(t, e) {
        if (t.a) {
          Kn(t);
          var n = t.a,
              r = t.s[0] ? w : null;
          t.a = null, t.s = null, e || t.dispatchEvent("ready");

          try {
            n.onreadystatechange = r;
          } catch (t) {}
        }
      }

      function Kn(t) {
        t.a && t.D && (t.a.ontimeout = null), t.m && (y.clearTimeout(t.m), t.m = null);
      }

      function jn(t) {
        return t.a ? t.a.readyState : 0;
      }

      function Gn(t, e) {
        return t.a ? t.a.getResponseHeader(e) : null;
      }

      function Wn(t, e, n) {
        t: {
          for (r in n) {
            var r = !1;
            break t;
          }

          r = !0;
        }

        if (r) return t;
        var i;

        if (i = "", G(n, function (t, e) {
          i += e, i += ":", i += t, i += "\r\n";
        }), n = i, g(t)) {
          if (e = encodeURIComponent(String(e)), e += n = null != n ? "=" + encodeURIComponent(String(n)) : "") {
            if ((n = t.indexOf("#")) < 0 && (n = t.length), (r = t.indexOf("?")) < 0 || n < r) {
              r = n;
              var o = "";
            } else o = t.substring(r + 1, n);

            n = (t = [t.substr(0, r), o, t.substr(n)])[1], t[1] = e ? n ? n + "&" + e : e : n, t = t[0] + (t[1] ? "?" + t[1] : "") + t[2];
          }

          return t;
        }

        return Ye(t, e, n), t;
      }

      function zn(t) {
        this.f = [], this.F = new yn(), this.ga = this.pa = this.B = this.ha = this.a = this.I = this.j = this.V = this.g = this.J = this.i = null, this.Ra = this.P = 0, this.Pa = !!b("internalChannelParams.failFast", t), this.ia = this.w = this.s = this.l = this.h = this.c = null, this.oa = !0, this.m = this.ra = this.O = -1, this.S = this.v = this.A = 0, this.Oa = b("internalChannelParams.baseRetryDelayMs", t) || 5e3, this.Sa = b("internalChannelParams.retryDelaySeedMs", t) || 1e4, this.Qa = b("internalChannelParams.forwardChannelMaxRetries", t) || 2, this.qa = b("internalChannelParams.forwardChannelRequestTimeoutMs", t) || 2e4, this.La = t && t.Ab || void 0, this.D = void 0, this.R = t && t.supportsCrossDomainXhr || !1, this.H = "", this.b = new wn(t && t.concurrentRequestLimit), this.ja = new Rn(), this.o = !t || void 0 === t.backgroundChannelTest || t.backgroundChannelTest, (this.W = t && t.fastHandshake || !1) && !this.o && (this.o = !0), t && t.forceLongPolling && (this.oa = !1), this.fa = void 0;
      }

      function Hn(t) {
        if (Yn(t), 3 == t.u) {
          var e = t.P++,
              n = je(t.B);
          Ye(n, "SID", t.H), Ye(n, "RID", e), Ye(n, "TYPE", "terminate"), Zn(t, n), (e = new Se(t, e, void 0)).F = 2, e.f = Je(je(n)), n = !1, y.navigator && y.navigator.sendBeacon && (n = y.navigator.sendBeacon(e.f.toString(), "")), !n && y.Image && (new Image().src = e.f, n = !0), n || (e.a = e.g.$(null), e.a.ca(e.f)), e.v = M(), Me(e);
        }

        sr(t);
      }

      function Yn(t) {
        t.w && (t.w.abort(), t.w = null), t.a && (t.a.cancel(), t.a = null), t.l && (y.clearTimeout(t.l), t.l = null), ir(t), t.b.cancel(), t.h && (v(t.h) && y.clearTimeout(t.h), t.h = null);
      }

      function Xn(t, e) {
        t.f.push(new bn(t.Ra++, e)), 3 == t.u && Jn(t);
      }

      function Jn(t) {
        Tn(t.b) || t.h || (t.h = !0, Gt(t.Ia, t), t.A = 0);
      }

      function $n(t, e) {
        var n;
        n = e ? e.W : t.P++;
        var r = je(t.B);
        Ye(r, "SID", t.H), Ye(r, "RID", n), Ye(r, "AID", t.O), Zn(t, r), t.g && t.i && Wn(r, t.g, t.i), n = new Se(t, n, t.A + 1), null === t.g && (n.h = t.i), e && (t.f = e.j.concat(t.f)), e = tr(t, n, 1e3), n.setTimeout(Math.round(.5 * t.qa) + Math.round(.5 * t.qa * Math.random())), Dn(t.b, n), De(n, r, e);
      }

      function Zn(t, n) {
        t.c && qe({}, function (t, e) {
          Ye(n, e, t);
        });
      }

      function tr(t, e, n) {
        n = Math.min(t.f.length, n);
        var r = t.c ? k(t.c.Ta, t.c, t) : null;

        t: for (var i = t.f, o = -1;;) {
          var a = ["count=" + n];
          -1 == o ? 0 < n ? (o = i[0].b, a.push("ofs=" + o)) : o = 0 : a.push("ofs=" + o);

          for (var s = !0, u = 0; u < n; u++) {
            var c = i[u].b,
                h = i[u].a;
            if ((c -= o) < 0) o = Math.max(0, i[u].b - 100), s = !1;else try {
              Mn(h, a, "req" + c + "_");
            } catch (t) {
              r && r(h);
            }
          }

          if (s) {
            r = a.join("&");
            break t;
          }
        }

        return t = t.f.splice(0, n), e.j = t, r;
      }

      function er(t) {
        t.a || t.l || (t.S = 1, Gt(t.Ha, t), t.v = 0);
      }

      function nr(t) {
        return !(t.a || t.l || 3 <= t.v) && (t.S++, t.l = le(k(t.Ha, t), or(t, t.v)), t.v++, !0);
      }

      function rr(t, e, n) {
        var r = e.l;
        r && Sn(t.b, r), t.ia = t.oa && n, t.m = e.c, t.B = ur(t, null, t.ha), Jn(t);
      }

      function ir(t) {
        null != t.s && (y.clearTimeout(t.s), t.s = null);
      }

      function or(t, e) {
        var n = t.Oa + Math.floor(Math.random() * t.Sa);
        return t.ma() || (n *= 2), n * e;
      }

      function ar(t, e) {
        if (2 == e) {
          var n = null;
          t.c && (n = null);
          var r = k(t.fb, t);
          n || (n = new Ke("//www.google.com/images/cleardot.gif"), y.location && "http" == y.location.protocol || Ge(n, "https"), Je(n)), function (t, e) {
            var n = new ie();

            if (y.Image) {
              var r = new Image();
              r.onload = R(On, n, r, "TestLoadImage: loaded", !0, e), r.onerror = R(On, n, r, "TestLoadImage: error", !1, e), r.onabort = R(On, n, r, "TestLoadImage: abort", !1, e), r.ontimeout = R(On, n, r, "TestLoadImage: timeout", !1, e), y.setTimeout(function () {
                r.ontimeout && r.ontimeout();
              }, 1e4), r.src = t;
            } else e(!1);
          }(n.toString(), r);
        } else ce(2);

        t.u = 0, t.c && t.c.ta(e), sr(t), Yn(t);
      }

      function sr(t) {
        t.u = 0, t.m = -1, t.c && (0 == An(t.b).length && 0 == t.f.length || (t.b.c.length = 0, q(t.f), t.f.length = 0), t.c.sa());
      }

      function ur(t, e, n) {
        var r,
            i,
            o,
            a,
            s,
            u,
            c = (r = n) instanceof Ke ? je(r) : new Ke(r, void 0);
        if ("" != c.b) e && We(c, e + "." + c.b), ze(c, c.i);else {
          var h,
              l = y.location;
          h = e ? e + "." + l.hostname : l.hostname, i = l.protocol, o = h, a = +l.port, s = n, u = new Ke(null, void 0), i && Ge(u, i), o && We(u, o), a && ze(u, a), s && (u.a = s), c = u;
        }
        return t.V && G(t.V, function (t, e) {
          Ye(c, e, t);
        }), e = t.j, n = t.I, e && n && Ye(c, e, n), Ye(c, "VER", t.wa), Zn(t, c), c;
      }

      function cr() {}

      function hr() {
        if (Z && !(10 <= Number(ut))) throw Error("Environmental error: no available transport.");
      }

      function lr(t, e) {
        xt.call(this), this.a = new zn(e), this.g = t, this.m = e && e.testUrl ? e.testUrl : function (t) {
          for (var e = t, n = 1; n < arguments.length; n++) {
            var r,
                i = arguments[n];
            0 == i.lastIndexOf("/", 0) ? e = i : ((r = "" == e) || (r = 0 <= (r = e.length - 1) && e.indexOf("/", r) == r), e += r ? i : "/" + i);
          }

          return e;
        }(this.g, "test"), this.b = e && e.messageUrlParams || null, t = e && e.messageHeaders || null, e && e.clientProtocolHeaderRequired && (t ? t["X-Client-Protocol"] = "webchannel" : t = {
          "X-Client-Protocol": "webchannel"
        }), this.a.i = t, t = e && e.initMessageHeaders || null, e && e.messageContentType && (t ? t["X-WebChannel-Content-Type"] = e.messageContentType : t = {
          "X-WebChannel-Content-Type": e.messageContentType
        }), e && e.xa && (t ? t["X-WebChannel-Client-Profile"] = e.xa : t = {
          "X-WebChannel-Client-Profile": e.xa
        }), this.a.J = t, (t = e && e.httpHeadersOverwriteParam) && !F(t) && (this.a.g = t), this.l = e && e.supportsCrossDomainXhr || !1, this.h = e && e.sendRawJson || !1, (e = e && e.httpSessionIdParam) && !F(e) && (this.a.j = e, null !== (t = this.b) && e in t && e in (t = this.b) && delete t[e]), this.f = new dr(this);
      }

      function fr(t) {
        be.call(this);
        var e = t.__sm__;

        if (e) {
          t: {
            for (var n in e) {
              t = n;
              break t;
            }

            t = void 0;
          }

          (this.c = t) ? (t = this.c, this.data = null !== e && t in e ? e[t] : void 0) : this.data = e;
        } else this.data = t;
      }

      function pr() {
        we.call(this), this.status = 1;
      }

      function dr(t) {
        this.a = t;
      }

      (c = Pn.prototype).ca = function (t, e, n, r) {
        if (this.a) throw Error("[goog.net.XhrIo] Object is active with another request=" + this.A + "; newUri=" + t);
        e = e ? e.toUpperCase() : "GET", this.A = t, this.f = "", this.h = 0, this.v = !1, this.b = !0, this.a = new XMLHttpRequest(), this.s = this.H ? me(this.H) : me(ge), this.a.onreadystatechange = k(this.Fa, this);

        try {
          this.w = !0, this.a.open(e, String(t), !0), this.w = !1;
        } catch (t) {
          return void Vn(this, t);
        }

        t = n || "";
        var i,
            o = new Fe(this.headers);
        r && qe(r, function (t, e) {
          o.set(e, t);
        }), r = function (t) {
          t: {
            for (var e = Fn, n = t.length, r = g(t) ? t.split("") : t, i = 0; i < n; i++) if (i in r && e.call(void 0, r[i], i, t)) {
              e = i;
              break t;
            }

            e = -1;
          }

          return e < 0 ? null : g(t) ? t.charAt(e) : t[e];
        }(o.K()), n = y.FormData && t instanceof y.FormData, !(0 <= P(qn, e)) || r || n || o.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8"), o.forEach(function (t, e) {
          this.a.setRequestHeader(e, t);
        }, this), this.I && (this.a.responseType = this.I), "withCredentials" in this.a && this.a.withCredentials !== this.F && (this.a.withCredentials = this.F);

        try {
          Kn(this), 0 < this.o && ((this.D = (i = this.a, Z && ht(9) && v(i.timeout) && void 0 !== i.ontimeout)) ? (this.a.timeout = this.o, this.a.ontimeout = k(this.Ca, this)) : this.m = Jt(this.Ca, this.o, this)), this.l = !0, this.a.send(t), this.l = !1;
        } catch (t) {
          Vn(this, t);
        }
      }, c.Ca = function () {
        void 0 !== f && this.a && (this.f = "Timed out after " + this.o + "ms, aborting", this.h = 8, this.dispatchEvent("timeout"), this.abort(8));
      }, c.abort = function (t) {
        this.a && this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1, this.h = t || 7, this.dispatchEvent("complete"), this.dispatchEvent("abort"), Qn(this));
      }, c.G = function () {
        this.a && (this.b && (this.b = !1, this.g = !0, this.a.abort(), this.g = !1), Qn(this, !0)), Pn.N.G.call(this);
      }, c.Fa = function () {
        this.j || (this.w || this.l || this.g ? Bn(this) : this.$a());
      }, c.$a = function () {
        Bn(this);
      }, c.T = function () {
        try {
          return 2 < jn(this) ? this.a.status : -1;
        } catch (t) {
          return -1;
        }
      }, c.za = function () {
        try {
          return 2 < jn(this) ? this.a.statusText : "";
        } catch (t) {
          return "";
        }
      }, c.aa = function () {
        try {
          return this.a ? this.a.responseText : "";
        } catch (t) {
          return "";
        }
      }, c.Va = function (t) {
        if (this.a) {
          var e = this.a.responseText;
          return t && 0 == e.indexOf(t) && (e = e.substring(t.length)), _n(e);
        }
      }, c.ya = function () {
        return this.h;
      }, c.Ya = function () {
        return g(this.f) ? this.f : String(this.f);
      }, (c = zn.prototype).wa = 8, c.u = 1, c.Da = function () {
        return 0 == this.u;
      }, c.Ia = function (t) {
        if (this.h) if (this.h = null, 1 == this.u) {
          if (!t) {
            this.P = Math.floor(1e5 * Math.random());
            var e,
                n = new Se(this, t = this.P++, void 0),
                r = this.i;
            if (this.J && (r ? H(r = W(r), this.J) : r = this.J), null === this.g && (n.h = r), this.W) t: {
              for (var i = e = 0; i < this.f.length; i++) {
                var o = this.f[i];
                if (void 0 === (o = "__data__" in o.a && g(o = o.a.__data__) ? o.length : void 0)) break;

                if (4096 < (e += o)) {
                  e = i;
                  break t;
                }

                if (4096 === e || i === this.f.length - 1) {
                  e = i + 1;
                  break t;
                }
              }

              e = 1e3;
            } else e = 1e3;
            e = tr(this, n, e), Ye(i = je(this.B), "RID", t), Ye(i, "CVER", 22), this.o && this.j && Ye(i, "X-HTTP-Session-Id", this.j), Zn(this, i), this.g && r && Wn(i, this.g, r), Dn(this.b, n), this.W ? (Ye(i, "$req", e), Ye(i, "SID", "null"), n.S = !0, De(n, i, null)) : De(n, i, e), this.u = 2;
          }
        } else 3 == this.u && (t ? $n(this, t) : 0 == this.f.length || Tn(this.b) || $n(this));
      }, c.Ha = function () {
        this.l = null, this.a = new Se(this, "rpc", this.S), null === this.g && (this.a.h = this.i), this.a.J = 0;
        var t = je(this.pa);
        Ye(t, "RID", "rpc"), Ye(t, "SID", this.H), Ye(t, "CI", this.ia ? "0" : "1"), Ye(t, "AID", this.O), Zn(this, t), Ye(t, "TYPE", "xmlhttp"), this.g && this.i && Wn(t, this.g, this.i), this.D && this.a.setTimeout(this.D), Ne(this.a, t, !0, this.ga);
      }, c.Ga = function (t, e) {
        if (0 != this.u && (this.a == t || Cn(this.b, t))) if (this.m = t.o, !t.s && Cn(this.b, t) && 3 == this.u) {
          try {
            var n = this.ja.a.parse(e);
          } catch (t) {
            n = null;
          }

          if (S(n) && 3 == n.length) {
            if (0 == (e = n)[0]) {
              t: if (!this.l) {
                if (this.a) {
                  if (!(this.a.v + 3e3 < t.v)) break t;
                  ir(this), this.a.cancel(), this.a = null;
                }

                nr(this), ce(18);
              }
            } else this.ra = e[1], 0 < this.ra - this.O && e[2] < 37500 && this.ia && 0 == this.v && !this.s && (this.s = le(k(this.Za, this), 6e3));

            if (In(this.b) <= 1 && this.fa) {
              try {
                this.fa();
              } catch (t) {}

              this.fa = void 0;
            }
          } else ar(this, 11);
        } else if ((t.s || this.a == t) && ir(this), !F(e)) for (e = n = this.ja.a.parse(e), n = 0; n < e.length; n++) {
          var r = e[n];
          if (this.O = r[0], r = r[1], 2 == this.u) {
            if ("c" == r[0]) {
              this.H = r[1], this.ga = r[2];
              var i = r[3];
              null != i && (this.wa = i), null != (r = r[5]) && v(r) && 0 < r && (this.D = 1.5 * r), this.o && (r = t.a) && ((i = Gn(r, "X-Client-Wire-Protocol")) && Sn(this.b, i), this.j && (r = Gn(r, "X-HTTP-Session-Id"))) && (this.I = r, Ye(this.B, this.j, r)), this.u = 3, this.c && this.c.va(), r = t, this.pa = ur(this, this.Y() ? this.ga : null, this.ha), r.s ? (Nn(this.b, r), (i = this.D) && r.setTimeout(i), r.i && (_e(r), Me(r)), this.a = r) : er(this), 0 < this.f.length && Jn(this);
            } else "stop" != r[0] && "close" != r[0] || ar(this, 7);
          } else 3 == this.u && ("stop" == r[0] || "close" == r[0] ? "stop" == r[0] ? ar(this, 7) : Hn(this) : "noop" != r[0] && this.c && this.c.ua(r), this.v = 0);
        }
      }, c.Za = function () {
        null != this.s && (this.s = null, this.a.cancel(), this.a = null, nr(this), ce(19));
      }, c.na = function (t) {
        var e,
            n,
            r = null;

        if (this.a == t) {
          ir(this), this.a = null;
          var i = 2;
        } else {
          if (!Cn(this.b, t)) return;
          r = t.j, Nn(this.b, t), i = 1;
        }

        if (this.m = t.o, 0 != this.u) if (t.b) 1 == i ? (r = M() - t.v, oe.dispatchEvent(new he(oe, t.l ? t.l.length : 0, r, this.A)), Jn(this)) : er(this);else {
          var o = t.c;
          if (3 == o || 0 == o && 0 < this.m || (1 != i || (n = t, In((e = this).b) >= e.b.f - (e.h ? 1 : 0) || (e.h ? (e.f = n.j.concat(e.f), 0) : 1 == e.u || 2 == e.u || e.A >= (e.Pa ? 0 : e.Qa) || (e.h = le(k(e.Ia, e, n), or(e, e.A)), e.A++, 0)))) && (2 != i || !nr(this))) switch (r && 0 < r.length && (t = this.b, t.c = t.c.concat(r)), o) {
            case 1:
              ar(this, 5);
              break;

            case 4:
              ar(this, 10);
              break;

            case 3:
              ar(this, 6);
              break;

            default:
              ar(this, 2);
          }
        }
      }, c.fb = function (t) {
        ce(t ? 2 : 1);
      }, c.$ = function (t) {
        if (t && !this.R) throw Error("Can't create secondary domain capable XhrIo object.");
        return (t = new Pn(this.La)).F = this.R, t;
      }, c.ma = function () {
        return !!this.c && !0;
      }, c.Y = function () {
        return this.R;
      }, (c = cr.prototype).va = function () {}, c.ua = function () {}, c.ta = function () {}, c.sa = function () {}, c.Ta = function () {}, hr.prototype.a = function (t, e) {
        return new lr(t, e);
      }, O(lr, xt), (c = lr.prototype).addEventListener = function (t, e, n, r) {
        lr.N.addEventListener.call(this, t, e, n, r);
      }, c.removeEventListener = function (t, e, n, r) {
        lr.N.removeEventListener.call(this, t, e, n, r);
      }, c.Wa = function () {
        this.a.c = this.f, this.l && (this.a.R = !0);
        var t = this.a,
            e = this.m,
            n = this.g,
            r = this.b || void 0;
        ce(0), t.ha = n, t.V = r || {}, t.o && (t.F.b = [], t.F.a = !1), t.w = new dn(t), null === t.g && (t.w.h = t.i), n = e, t.g && t.i && (n = Wn(e, t.g, t.i)), (t = t.w).i = n, e = ur(t.a, null, t.i), ce(3), null != (n = t.a.F.b) ? (t.f = n[0], t.M = 1, mn(t)) : (Xe(e, "MODE", "init"), !t.a.o && t.a.j && Xe(e, "X-HTTP-Session-Id", t.a.j), t.b = new Se(t, void 0, void 0), t.b.h = t.h, Ne(t.b, e, !1, null), t.M = 0);
      }, c.close = function () {
        Hn(this.a);
      }, c.Xa = function (t) {
        if (g(t)) {
          var e = {};
          e.__data__ = t, Xn(this.a, e);
        } else this.h ? ((e = {}).__data__ = Ft(t), Xn(this.a, e)) : Xn(this.a, t);
      }, c.G = function () {
        this.a.c = null, delete this.f, Hn(this.a), delete this.a, lr.N.G.call(this);
      }, O(fr, be), O(pr, we), O(dr, cr), dr.prototype.va = function () {
        this.a.dispatchEvent("a");
      }, dr.prototype.ua = function (t) {
        this.a.dispatchEvent(new fr(t));
      }, dr.prototype.ta = function (t) {
        this.a.dispatchEvent(new pr(t));
      }, dr.prototype.sa = function () {
        this.a.dispatchEvent("b");
      };
      var mr = R(function (t, e) {
        function n() {}

        n.prototype = t.prototype;
        var r = new n();
        return t.apply(r, Array.prototype.slice.call(arguments, 1)), r;
      }, hr);
      hr.prototype.createWebChannel = hr.prototype.a, lr.prototype.send = lr.prototype.Xa, lr.prototype.open = lr.prototype.Wa, lr.prototype.close = lr.prototype.close, fe.NO_ERROR = 0, fe.TIMEOUT = 8, fe.HTTP_ERROR = 6, pe.COMPLETE = "complete", (ye.EventType = ve).OPEN = "a", ve.CLOSE = "b", ve.ERROR = "c", ve.MESSAGE = "d", xt.prototype.listen = xt.prototype.Aa, Pn.prototype.listenOnce = Pn.prototype.Ba, Pn.prototype.getLastError = Pn.prototype.Ya, Pn.prototype.getLastErrorCode = Pn.prototype.ya, Pn.prototype.getStatus = Pn.prototype.T, Pn.prototype.getStatusText = Pn.prototype.za, Pn.prototype.getResponseJson = Pn.prototype.Va, Pn.prototype.getResponseText = Pn.prototype.aa, Pn.prototype.send = Pn.prototype.ca;
      var yr,
          gr,
          vr = {
        createWebChannelTransport: mr,
        ErrorCode: fe,
        EventType: pe,
        WebChannel: ye,
        XhrIo: Pn
      },
          br = vr.createWebChannelTransport,
          wr = vr.ErrorCode,
          Er = vr.EventType,
          Sr = vr.WebChannel,
          Tr = vr.XhrIo,
          Ir = Dh.SDK_VERSION,
          Cr = new r("@firebase/firestore");

      function Dr() {
        return Cr.logLevel === o.DEBUG ? yr.DEBUG : Cr.logLevel === o.SILENT ? yr.SILENT : yr.ERROR;
      }

      function Nr(t) {
        switch (t) {
          case yr.DEBUG:
            Cr.logLevel = o.DEBUG;
            break;

          case yr.ERROR:
            Cr.logLevel = o.ERROR;
            break;

          case yr.SILENT:
            Cr.logLevel = o.SILENT;
            break;

          default:
            Cr.error("Firestore (" + Ir + "): Invalid value passed to `setLogLevel`");
        }
      }

      function Ar(t, e) {
        for (var n = [], r = 2; r < arguments.length; r++) n[r - 2] = arguments[r];

        if (Cr.logLevel <= o.DEBUG) {
          var i = n.map(Rr);
          Cr.debug.apply(Cr, ["Firestore (" + Ir + ") [" + t + "]: " + e].concat(i));
        }
      }

      function kr(t) {
        for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];

        if (Cr.logLevel <= o.ERROR) {
          var r = e.map(Rr);
          Cr.error.apply(Cr, ["Firestore (" + Ir + "): " + t].concat(r));
        }
      }

      function Rr(e) {
        if ("string" == typeof e) return e;

        var t = _r.getPlatform();

        try {
          return t.formatJSON(e);
        } catch (t) {
          return e;
        }
      }

      function Mr(t) {
        var e = "FIRESTORE (" + Ir + ") INTERNAL ASSERTION FAILED: " + t;
        throw kr(e), new Error(e);
      }

      function Or(t, e) {
        t || Mr(e);
      }

      (gr = yr || (yr = {}))[gr.DEBUG = 0] = "DEBUG", gr[gr.ERROR = 1] = "ERROR", gr[gr.SILENT = 2] = "SILENT";

      var _r = function () {
        function e() {}

        return e.setPlatform = function (t) {
          e.platform && Mr("Platform already defined"), e.platform = t;
        }, e.getPlatform = function () {
          return e.platform || Mr("Platform not set"), e.platform;
        }, e;
      }();

      function Pr() {
        return _r.getPlatform().emptyByteString;
      }

      var Lr = {
        OK: "ok",
        CANCELLED: "cancelled",
        UNKNOWN: "unknown",
        INVALID_ARGUMENT: "invalid-argument",
        DEADLINE_EXCEEDED: "deadline-exceeded",
        NOT_FOUND: "not-found",
        ALREADY_EXISTS: "already-exists",
        PERMISSION_DENIED: "permission-denied",
        UNAUTHENTICATED: "unauthenticated",
        RESOURCE_EXHAUSTED: "resource-exhausted",
        FAILED_PRECONDITION: "failed-precondition",
        ABORTED: "aborted",
        OUT_OF_RANGE: "out-of-range",
        UNIMPLEMENTED: "unimplemented",
        INTERNAL: "internal",
        UNAVAILABLE: "unavailable",
        DATA_LOSS: "data-loss"
      },
          xr = function (r) {
        function t(t, e) {
          var n = r.call(this, e) || this;
          return n.code = t, n.message = e, n.name = "FirebaseError", n.toString = function () {
            return n.name + ": [code=" + n.code + "]: " + n.message;
          }, n;
        }

        return s(t, r), t;
      }(Error);

      function qr(t, e) {
        function n() {
          var t = "This constructor is private.";
          throw e && (t += " ", t += e), new xr(Lr.INVALID_ARGUMENT, t);
        }

        for (var r in n.prototype = t.prototype, t) t.hasOwnProperty(r) && (n[r] = t[r]);

        return n;
      }

      function Fr(t, e) {
        return Object.prototype.hasOwnProperty.call(t, e);
      }

      function Vr(t, e) {
        return void 0 !== t ? t : e;
      }

      function Ur(t, e) {
        for (var n in t) if (Object.prototype.hasOwnProperty.call(t, n)) {
          var r = Number(n);
          isNaN(r) || e(r, t[n]);
        }
      }

      function Br(t, e) {
        for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && e(n, t[n]);
      }

      function Qr(t) {
        for (var e in Or(null != t && "object" == typeof t, "isEmpty() expects object parameter."), t) if (Object.prototype.hasOwnProperty.call(t, e)) return !1;

        return !0;
      }

      function Kr(t, e) {
        if (0 !== e.length) throw new xr(Lr.INVALID_ARGUMENT, "Function " + t + "() does not support arguments, but was called with " + ai(e.length, "argument") + ".");
      }

      function jr(t, e, n) {
        if (e.length !== n) throw new xr(Lr.INVALID_ARGUMENT, "Function " + t + "() requires " + ai(n, "argument") + ", but was called with " + ai(e.length, "argument") + ".");
      }

      function Gr(t, e, n) {
        if (e.length < n) throw new xr(Lr.INVALID_ARGUMENT, "Function " + t + "() requires at least " + ai(n, "argument") + ", but was called with " + ai(e.length, "argument") + ".");
      }

      function Wr(t, e, n, r) {
        if (e.length < n || e.length > r) throw new xr(Lr.INVALID_ARGUMENT, "Function " + t + "() requires between " + n + " and " + r + " arguments, but was called with " + ai(e.length, "argument") + ".");
      }

      function zr(t, e, n, r) {
        Zr(t, e, oi(n) + " argument", r);
      }

      function Hr(t, e, n, r) {
        void 0 !== r && zr(t, e, n, r);
      }

      function Yr(t, e, n, r) {
        Zr(t, e, n + " option", r);
      }

      function Xr(t, e, n, r) {
        void 0 !== r && Yr(t, e, n, r);
      }

      function Jr(t, e, n, r, i) {
        void 0 !== r && function (t, e, n, r, i) {
          if (!(r instanceof Array)) throw new xr(Lr.INVALID_ARGUMENT, "Function " + t + "() requires its " + e + " option to be an array, but it was: " + ei(r));

          for (var o = 0; o < r.length; ++o) if (!i(r[o])) throw new xr(Lr.INVALID_ARGUMENT, "Function " + t + "() requires all " + e + " elements to be " + n + ", but the value at index " + o + " was: " + ei(r[o]));
        }(t, e, n, r, i);
      }

      function $r(t, e, n, r, i) {
        void 0 !== r && function (t, e, n, r, i) {
          for (var o = [], a = 0, s = i; a < s.length; a++) {
            var u = s[a];
            if (u === r) return;
            o.push(ei(u));
          }

          var c = ei(r);
          throw new xr(Lr.INVALID_ARGUMENT, "Invalid value " + c + " provided to function " + t + '() for option "' + n + '". Acceptable values: ' + o.join(", "));
        }(t, 0, n, r, i);
      }

      function Zr(t, e, n, r) {
        if (!("object" === e ? ti(r) : "non-empty string" === e ? "string" == typeof r && "" !== r : typeof r === e)) {
          var i = ei(r);
          throw new xr(Lr.INVALID_ARGUMENT, "Function " + t + "() requires its " + n + " to be of type " + e + ", but it was: " + i);
        }
      }

      function ti(t) {
        return "object" == typeof t && null !== t && (Object.getPrototypeOf(t) === Object.prototype || null === Object.getPrototypeOf(t));
      }

      function ei(t) {
        if (void 0 === t) return "undefined";
        if (null === t) return "null";
        if ("string" == typeof t) return 20 < t.length && (t = t.substring(0, 20) + "..."), JSON.stringify(t);
        if ("number" == typeof t || "boolean" == typeof t) return "" + t;
        if ("object" != typeof t) return "function" == typeof t ? "a function" : Mr("Unknown wrong type: " + typeof t);
        if (t instanceof Array) return "an array";

        var e = function (t) {
          if (t.constructor) {
            var e = /function\s+([^\s(]+)\s*\(/.exec(t.constructor.toString());
            if (e && 1 < e.length) return e[1];
          }

          return null;
        }(t);

        return e ? "a custom " + e + " object" : "an object";
      }

      function ni(t, e, n) {
        if (void 0 === n) throw new xr(Lr.INVALID_ARGUMENT, "Function " + t + "() requires a valid " + oi(e) + " argument, but it was undefined.");
      }

      function ri(n, t, r) {
        Br(t, function (t, e) {
          if (r.indexOf(t) < 0) throw new xr(Lr.INVALID_ARGUMENT, "Unknown option '" + t + "' passed to function " + n + "(). Available options: " + r.join(", "));
        });
      }

      function ii(t, e, n, r) {
        var i = ei(r);
        return new xr(Lr.INVALID_ARGUMENT, "Function " + t + "() requires its " + oi(n) + " argument to be a " + e + ", but it was: " + i);
      }

      function oi(t) {
        switch (t) {
          case 1:
            return "first";

          case 2:
            return "second";

          case 3:
            return "third";

          default:
            return t + "th";
        }
      }

      function ai(t, e) {
        return t + " " + e + (1 === t ? "" : "s");
      }

      var si = function () {
        function t() {}

        return t.newId = function () {
          for (var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", e = "", n = 0; n < 20; n++) e += t.charAt(Math.floor(Math.random() * t.length));

          return Or(20 === e.length, "Invalid auto ID: " + e), e;
        }, t;
      }();

      function ui(t, e) {
        return t < e ? -1 : e < t ? 1 : 0;
      }

      function ci(t, e) {
        if (t.length !== e.length) return !1;

        for (var n = 0; n < t.length; n++) if (!t[n].isEqual(e[n])) return !1;

        return !0;
      }

      function hi(t) {
        return t + "\0";
      }

      function li() {
        if ("undefined" == typeof Uint8Array) throw new xr(Lr.UNIMPLEMENTED, "Uint8Arrays are not available in this environment.");
      }

      function fi() {
        if (!_r.getPlatform().base64Available) throw new xr(Lr.UNIMPLEMENTED, "Blobs are unavailable in Firestore in this environment.");
      }

      var pi,
          di,
          mi = function () {
        function e(t) {
          fi(), this._binaryString = t;
        }

        return e.fromBase64String = function (t) {
          jr("Blob.fromBase64String", arguments, 1), zr("Blob.fromBase64String", "string", 1, t), fi();

          try {
            return new e(_r.getPlatform().atob(t));
          } catch (t) {
            throw new xr(Lr.INVALID_ARGUMENT, "Failed to construct Blob from Base64 string: " + t);
          }
        }, e.fromUint8Array = function (t) {
          if (jr("Blob.fromUint8Array", arguments, 1), li(), !(t instanceof Uint8Array)) throw ii("Blob.fromUint8Array", "Uint8Array", 1, t);
          return new e(Array.prototype.map.call(t, function (t) {
            return String.fromCharCode(t);
          }).join(""));
        }, e.prototype.toBase64 = function () {
          return jr("Blob.toBase64", arguments, 0), fi(), _r.getPlatform().btoa(this._binaryString);
        }, e.prototype.toUint8Array = function () {
          jr("Blob.toUint8Array", arguments, 0), li();

          for (var t = new Uint8Array(this._binaryString.length), e = 0; e < this._binaryString.length; e++) t[e] = this._binaryString.charCodeAt(e);

          return t;
        }, e.prototype.toString = function () {
          return "Blob(base64: " + this.toBase64() + ")";
        }, e.prototype.isEqual = function (t) {
          return this._binaryString === t._binaryString;
        }, e.prototype._compareTo = function (t) {
          return ui(this._binaryString, t._binaryString);
        }, e;
      }(),
          yi = qr(mi, "Use Blob.fromUint8Array() or Blob.fromBase64String() instead."),
          gi = function gi(t, e, n, r, i) {
        this.databaseId = t, this.persistenceKey = e, this.host = n, this.ssl = r, this.forceLongPolling = i;
      },
          vi = "(default)",
          bi = function () {
        function e(t, e) {
          this.projectId = t, this.database = e || vi;
        }

        return Object.defineProperty(e.prototype, "isDefaultDatabase", {
          get: function get() {
            return this.database === vi;
          },
          enumerable: !0,
          configurable: !0
        }), e.prototype.isEqual = function (t) {
          return t instanceof e && t.projectId === this.projectId && t.database === this.database;
        }, e.prototype.compareTo = function (t) {
          return ui(this.projectId, t.projectId) || ui(this.database, t.database);
        }, e;
      }(),
          wi = function () {
        function t(t, e) {
          var n = this;
          this.previousValue = t, e && (e.sequenceNumberHandler = function (t) {
            return n.setPreviousValue(t);
          }, this.writeNewSequenceNumber = function (t) {
            return e.writeSequenceNumber(t);
          });
        }

        return t.prototype.setPreviousValue = function (t) {
          return this.previousValue = Math.max(t, this.previousValue), this.previousValue;
        }, t.prototype.next = function () {
          var t = ++this.previousValue;
          return this.writeNewSequenceNumber && this.writeNewSequenceNumber(t), t;
        }, t.INVALID = -1, t;
      }(),
          Ei = "__name__",
          Si = function () {
        function n(t, e, n) {
          this.init(t, e, n);
        }

        return n.prototype.init = function (t, e, n) {
          void 0 === e ? e = 0 : e > t.length && Mr("offset " + e + " out of range " + t.length), void 0 === n ? n = t.length - e : n > t.length - e && Mr("length " + n + " out of range " + (t.length - e)), this.segments = t, this.offset = e, this.len = n;
        }, n.prototype.construct = function (t, e, n) {
          var r = Object.create(Object.getPrototypeOf(this));
          return r.init(t, e, n), r;
        }, Object.defineProperty(n.prototype, "length", {
          get: function get() {
            return this.len;
          },
          enumerable: !0,
          configurable: !0
        }), n.prototype.isEqual = function (t) {
          return 0 === n.comparator(this, t);
        }, n.prototype.child = function (t) {
          var e = this.segments.slice(this.offset, this.limit());
          return t instanceof n ? t.forEach(function (t) {
            e.push(t);
          }) : "string" == typeof t ? e.push(t) : Mr("Unknown parameter type for Path.child(): " + t), this.construct(e);
        }, n.prototype.limit = function () {
          return this.offset + this.length;
        }, n.prototype.popFirst = function (t) {
          return t = void 0 === t ? 1 : t, Or(this.length >= t, "Can't call popFirst() with less segments"), this.construct(this.segments, this.offset + t, this.length - t);
        }, n.prototype.popLast = function () {
          return Or(!this.isEmpty(), "Can't call popLast() on empty path"), this.construct(this.segments, this.offset, this.length - 1);
        }, n.prototype.firstSegment = function () {
          return Or(!this.isEmpty(), "Can't call firstSegment() on empty path"), this.segments[this.offset];
        }, n.prototype.lastSegment = function () {
          return this.get(this.length - 1);
        }, n.prototype.get = function (t) {
          return Or(t < this.length, "Index out of range"), this.segments[this.offset + t];
        }, n.prototype.isEmpty = function () {
          return 0 === this.length;
        }, n.prototype.isPrefixOf = function (t) {
          if (t.length < this.length) return !1;

          for (var e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;

          return !0;
        }, n.prototype.isImmediateParentOf = function (t) {
          if (this.length + 1 !== t.length) return !1;

          for (var e = 0; e < this.length; e++) if (this.get(e) !== t.get(e)) return !1;

          return !0;
        }, n.prototype.forEach = function (t) {
          for (var e = this.offset, n = this.limit(); e < n; e++) t(this.segments[e]);
        }, n.prototype.toArray = function () {
          return this.segments.slice(this.offset, this.limit());
        }, n.comparator = function (t, e) {
          for (var n = Math.min(t.length, e.length), r = 0; r < n; r++) {
            var i = t.get(r),
                o = e.get(r);
            if (i < o) return -1;
            if (o < i) return 1;
          }

          return t.length < e.length ? -1 : t.length > e.length ? 1 : 0;
        }, n;
      }(),
          Ti = function (t) {
        function e() {
          return null !== t && t.apply(this, arguments) || this;
        }

        return s(e, t), e.prototype.canonicalString = function () {
          return this.toArray().join("/");
        }, e.prototype.toString = function () {
          return this.canonicalString();
        }, e.fromString = function (t) {
          if (0 <= t.indexOf("//")) throw new xr(Lr.INVALID_ARGUMENT, "Invalid path (" + t + "). Paths must not contain // in them.");
          return new e(t.split("/").filter(function (t) {
            return 0 < t.length;
          }));
        }, e.EMPTY_PATH = new e([]), e;
      }(Si),
          Ii = /^[_a-zA-Z][_a-zA-Z0-9]*$/,
          Ci = function (t) {
        function u() {
          return null !== t && t.apply(this, arguments) || this;
        }

        return s(u, t), u.isValidIdentifier = function (t) {
          return Ii.test(t);
        }, u.prototype.canonicalString = function () {
          return this.toArray().map(function (t) {
            return t = t.replace("\\", "\\\\").replace("`", "\\`"), u.isValidIdentifier(t) || (t = "`" + t + "`"), t;
          }).join(".");
        }, u.prototype.toString = function () {
          return this.canonicalString();
        }, u.prototype.isKeyField = function () {
          return 1 === this.length && this.get(0) === Ei;
        }, u.keyField = function () {
          return new u([Ei]);
        }, u.fromServerFormat = function (t) {
          for (var e = [], n = "", r = 0, i = function i() {
            if (0 === n.length) throw new xr(Lr.INVALID_ARGUMENT, "Invalid field path (" + t + "). Paths must not be empty, begin with '.', end with '.', or contain '..'");
            e.push(n), n = "";
          }, o = !1; r < t.length;) {
            var a = t[r];

            if ("\\" === a) {
              if (r + 1 === t.length) throw new xr(Lr.INVALID_ARGUMENT, "Path has trailing escape character: " + t);
              var s = t[r + 1];
              if ("\\" !== s && "." !== s && "`" !== s) throw new xr(Lr.INVALID_ARGUMENT, "Path has invalid escape sequence: " + t);
              n += s, r += 2;
            } else "`" === a ? o = !o : "." !== a || o ? n += a : i(), r++;
          }

          if (i(), o) throw new xr(Lr.INVALID_ARGUMENT, "Unterminated ` in path: " + t);
          return new u(e);
        }, u.EMPTY_PATH = new u([]), u;
      }(Si),
          Di = function () {
        function e(t) {
          this.path = t, Or(e.isDocumentKey(t), "Invalid DocumentKey with an odd number of segments: " + t.toArray().join("/"));
        }

        return e.prototype.hasCollectionId = function (t) {
          return 2 <= this.path.length && this.path.get(this.path.length - 2) === t;
        }, e.prototype.isEqual = function (t) {
          return null !== t && 0 === Ti.comparator(this.path, t.path);
        }, e.prototype.toString = function () {
          return this.path.toString();
        }, e.comparator = function (t, e) {
          return Ti.comparator(t.path, e.path);
        }, e.isDocumentKey = function (t) {
          return t.length % 2 == 0;
        }, e.fromSegments = function (t) {
          return new e(new Ti(t.slice()));
        }, e.fromPathString = function (t) {
          return new e(Ti.fromString(t));
        }, e.EMPTY = new e(new Ti([])), e;
      }(),
          Ni = function Ni() {
        var n = this;
        this.promise = new Promise(function (t, e) {
          n.resolve = t, n.reject = e;
        });
      };

      (di = pi || (pi = {})).All = "all", di.ListenStreamIdle = "listen_stream_idle", di.ListenStreamConnectionBackoff = "listen_stream_connection_backoff", di.WriteStreamIdle = "write_stream_idle", di.WriteStreamConnectionBackoff = "write_stream_connection_backoff", di.OnlineStateTimeout = "online_state_timeout", di.ClientMetadataRefresh = "client_metadata_refresh", di.LruGarbageCollection = "lru_garbage_collection";

      var Ai = function () {
        function a(t, e, n, r, i) {
          this.asyncQueue = t, this.timerId = e, this.targetTimeMs = n, this.op = r, this.removalCallback = i, this.deferred = new Ni(), this.then = this.deferred.promise.then.bind(this.deferred.promise), this.catch = this.deferred.promise.catch.bind(this.deferred.promise), this.deferred.promise.catch(function (t) {});
        }

        return a.createAndSchedule = function (t, e, n, r, i) {
          var o = new a(t, e, Date.now() + n, r, i);
          return o.start(n), o;
        }, a.prototype.start = function (t) {
          var e = this;
          this.timerHandle = setTimeout(function () {
            return e.handleDelayElapsed();
          }, t);
        }, a.prototype.skipDelay = function () {
          return this.handleDelayElapsed();
        }, a.prototype.cancel = function (t) {
          null !== this.timerHandle && (this.clearTimeout(), this.deferred.reject(new xr(Lr.CANCELLED, "Operation cancelled" + (t ? ": " + t : ""))));
        }, a.prototype.handleDelayElapsed = function () {
          var e = this;
          this.asyncQueue.enqueueAndForget(function () {
            return null !== e.timerHandle ? (e.clearTimeout(), e.op().then(function (t) {
              return e.deferred.resolve(t);
            })) : Promise.resolve();
          });
        }, a.prototype.clearTimeout = function () {
          null !== this.timerHandle && (this.removalCallback(this), clearTimeout(this.timerHandle), this.timerHandle = null);
        }, a;
      }(),
          ki = function () {
        function t() {
          this.tail = Promise.resolve(), this.delayedOperations = [], this.operationInProgress = !1;
        }

        return t.prototype.enqueueAndForget = function (t) {
          this.enqueue(t);
        }, t.prototype.enqueue = function (t) {
          var n = this;
          this.verifyNotFailed();
          var e = this.tail.then(function () {
            return n.operationInProgress = !0, t().catch(function (t) {
              n.failure = t, n.operationInProgress = !1;
              var e = t.stack || t.message || "";
              throw kr("INTERNAL UNHANDLED ERROR: ", e), e.indexOf("Firestore Test Simulated Error") < 0 && setTimeout(function () {
                throw t;
              }, 0), t;
            }).then(function (t) {
              return n.operationInProgress = !1, t;
            });
          });
          return this.tail = e;
        }, t.prototype.enqueueAfterDelay = function (t, e, n) {
          var r = this;
          this.verifyNotFailed(), Or(0 <= e, "Attempted to schedule an operation with a negative delay of " + e), Or(!this.containsDelayedOperation(t), "Attempted to schedule multiple operations with timer id " + t + ".");
          var i = Ai.createAndSchedule(this, t, e, n, function (t) {
            return r.removeDelayedOperation(t);
          });
          return this.delayedOperations.push(i), i;
        }, t.prototype.verifyNotFailed = function () {
          this.failure && Mr("AsyncQueue is already failed: " + (this.failure.stack || this.failure.message));
        }, t.prototype.verifyOperationInProgress = function () {
          Or(this.operationInProgress, "verifyOpInProgress() called when no op in progress on this queue.");
        }, t.prototype.drain = function () {
          return this.enqueue(function () {
            return Promise.resolve();
          });
        }, t.prototype.containsDelayedOperation = function (t) {
          for (var e = 0, n = this.delayedOperations; e < n.length; e++) {
            if (n[e].timerId === t) return !0;
          }

          return !1;
        }, t.prototype.runDelayedOperationsEarly = function (r) {
          var i = this;
          return this.drain().then(function () {
            Or(r === pi.All || i.containsDelayedOperation(r), "Attempted to drain to missing operation " + r), i.delayedOperations.sort(function (t, e) {
              return t.targetTimeMs - e.targetTimeMs;
            });

            for (var t = 0, e = i.delayedOperations; t < e.length; t++) {
              var n = e[t];
              if (n.skipDelay(), r !== pi.All && n.timerId === r) break;
            }

            return i.drain();
          });
        }, t.prototype.removeDelayedOperation = function (t) {
          var e = this.delayedOperations.indexOf(t);
          Or(0 <= e, "Delayed operation not found."), this.delayedOperations.splice(e, 1);
        }, t;
      }(),
          Ri = "",
          Mi = "",
          Oi = "",
          _i = "";

      function Pi(t) {
        for (var e = "", n = 0; n < t.length; n++) 0 < e.length && (e = xi(e)), e = Li(t.get(n), e);

        return xi(e);
      }

      function Li(t, e) {
        for (var n = e, r = t.length, i = 0; i < r; i++) {
          var o = t.charAt(i);

          switch (o) {
            case "\0":
              n += Ri + Oi;
              break;

            case Ri:
              n += Ri + _i;
              break;

            default:
              n += o;
          }
        }

        return n;
      }

      function xi(t) {
        return t + Ri + Mi;
      }

      function qi(t) {
        var e = t.length;
        if (Or(2 <= e, "Invalid path " + t), 2 === e) return Or(t.charAt(0) === Ri && t.charAt(1) === Mi, "Non-empty path " + t + " had length 2"), Ti.EMPTY_PATH;

        for (var n = e - 2, r = [], i = "", o = 0; o < e;) {
          var a = t.indexOf(Ri, o);

          switch ((a < 0 || n < a) && Mr('Invalid encoded resource path: "' + t + '"'), t.charAt(a + 1)) {
            case Mi:
              var s = t.substring(o, a),
                  u = void 0;
              0 === i.length ? u = s : (u = i += s, i = ""), r.push(u);
              break;

            case Oi:
              i += t.substring(o, a), i += "\0";
              break;

            case _i:
              i += t.substring(o, a + 1);
              break;

            default:
              Mr('Invalid encoded resource path: "' + t + '"');
          }

          o = a + 2;
        }

        return new Ti(r);
      }

      var Fi = function () {
        function n(t, e) {
          if (this.seconds = t, (this.nanoseconds = e) < 0) throw new xr(Lr.INVALID_ARGUMENT, "Timestamp nanoseconds out of range: " + e);
          if (1e9 <= e) throw new xr(Lr.INVALID_ARGUMENT, "Timestamp nanoseconds out of range: " + e);
          if (t < -62135596800) throw new xr(Lr.INVALID_ARGUMENT, "Timestamp seconds out of range: " + t);
          if (253402300800 <= t) throw new xr(Lr.INVALID_ARGUMENT, "Timestamp seconds out of range: " + t);
        }

        return n.now = function () {
          return n.fromMillis(Date.now());
        }, n.fromDate = function (t) {
          return n.fromMillis(t.getTime());
        }, n.fromMillis = function (t) {
          var e = Math.floor(t / 1e3);
          return new n(e, 1e6 * (t - 1e3 * e));
        }, n.prototype.toDate = function () {
          return new Date(this.toMillis());
        }, n.prototype.toMillis = function () {
          return 1e3 * this.seconds + this.nanoseconds / 1e6;
        }, n.prototype._compareTo = function (t) {
          return this.seconds === t.seconds ? ui(this.nanoseconds, t.nanoseconds) : ui(this.seconds, t.seconds);
        }, n.prototype.isEqual = function (t) {
          return t.seconds === this.seconds && t.nanoseconds === this.nanoseconds;
        }, n.prototype.toString = function () {
          return "Timestamp(seconds=" + this.seconds + ", nanoseconds=" + this.nanoseconds + ")";
        }, n;
      }(),
          Vi = function () {
        function n(t) {
          this.timestamp = t;
        }

        return n.fromMicroseconds = function (t) {
          var e = Math.floor(t / 1e6);
          return new n(new Fi(e, t % 1e6 * 1e3));
        }, n.fromTimestamp = function (t) {
          return new n(t);
        }, n.forDeletedDoc = function () {
          return n.MIN;
        }, n.prototype.compareTo = function (t) {
          return this.timestamp._compareTo(t.timestamp);
        }, n.prototype.isEqual = function (t) {
          return this.timestamp.isEqual(t.timestamp);
        }, n.prototype.toMicroseconds = function () {
          return 1e6 * this.timestamp.seconds + this.timestamp.nanoseconds / 1e3;
        }, n.prototype.toString = function () {
          return "SnapshotVersion(" + this.timestamp.toString() + ")";
        }, n.prototype.toTimestamp = function () {
          return this.timestamp;
        }, n.MIN = new n(new Fi(0, 0)), n;
      }(),
          Ui = function () {
        function n(t, e) {
          this.comparator = t, this.root = e || Qi.EMPTY;
        }

        return n.prototype.insert = function (t, e) {
          return new n(this.comparator, this.root.insert(t, e, this.comparator).copy(null, null, Qi.BLACK, null, null));
        }, n.prototype.remove = function (t) {
          return new n(this.comparator, this.root.remove(t, this.comparator).copy(null, null, Qi.BLACK, null, null));
        }, n.prototype.get = function (t) {
          for (var e = this.root; !e.isEmpty();) {
            var n = this.comparator(t, e.key);
            if (0 === n) return e.value;
            n < 0 ? e = e.left : 0 < n && (e = e.right);
          }

          return null;
        }, n.prototype.indexOf = function (t) {
          for (var e = 0, n = this.root; !n.isEmpty();) {
            var r = this.comparator(t, n.key);
            if (0 === r) return e + n.left.size;
            n = r < 0 ? n.left : (e += n.left.size + 1, n.right);
          }

          return -1;
        }, n.prototype.isEmpty = function () {
          return this.root.isEmpty();
        }, Object.defineProperty(n.prototype, "size", {
          get: function get() {
            return this.root.size;
          },
          enumerable: !0,
          configurable: !0
        }), n.prototype.minKey = function () {
          return this.root.minKey();
        }, n.prototype.maxKey = function () {
          return this.root.maxKey();
        }, n.prototype.inorderTraversal = function (t) {
          return this.root.inorderTraversal(t);
        }, n.prototype.forEach = function (n) {
          this.inorderTraversal(function (t, e) {
            return n(t, e), !1;
          });
        }, n.prototype.toString = function () {
          var n = [];
          return this.inorderTraversal(function (t, e) {
            return n.push(t + ":" + e), !1;
          }), "{" + n.join(", ") + "}";
        }, n.prototype.reverseTraversal = function (t) {
          return this.root.reverseTraversal(t);
        }, n.prototype.getIterator = function () {
          return new Bi(this.root, null, this.comparator, !1);
        }, n.prototype.getIteratorFrom = function (t) {
          return new Bi(this.root, t, this.comparator, !1);
        }, n.prototype.getReverseIterator = function () {
          return new Bi(this.root, null, this.comparator, !0);
        }, n.prototype.getReverseIteratorFrom = function (t) {
          return new Bi(this.root, t, this.comparator, !0);
        }, n;
      }(),
          Bi = function () {
        function t(t, e, n, r) {
          this.isReverse = r, this.nodeStack = [];

          for (var i = 1; !t.isEmpty();) if (i = e ? n(t.key, e) : 1, r && (i *= -1), i < 0) t = this.isReverse ? t.left : t.right;else {
            if (0 === i) {
              this.nodeStack.push(t);
              break;
            }

            this.nodeStack.push(t), t = this.isReverse ? t.right : t.left;
          }
        }

        return t.prototype.getNext = function () {
          Or(0 < this.nodeStack.length, "getNext() called on iterator when hasNext() is false.");
          var t = this.nodeStack.pop(),
              e = {
            key: t.key,
            value: t.value
          };
          if (this.isReverse) for (t = t.left; !t.isEmpty();) this.nodeStack.push(t), t = t.right;else for (t = t.right; !t.isEmpty();) this.nodeStack.push(t), t = t.left;
          return e;
        }, t.prototype.hasNext = function () {
          return 0 < this.nodeStack.length;
        }, t.prototype.peek = function () {
          if (0 === this.nodeStack.length) return null;
          var t = this.nodeStack[this.nodeStack.length - 1];
          return {
            key: t.key,
            value: t.value
          };
        }, t;
      }(),
          Qi = function () {
        function o(t, e, n, r, i) {
          this.key = t, this.value = e, this.color = null != n ? n : o.RED, this.left = null != r ? r : o.EMPTY, this.right = null != i ? i : o.EMPTY, this.size = this.left.size + 1 + this.right.size;
        }

        return o.prototype.copy = function (t, e, n, r, i) {
          return new o(null != t ? t : this.key, null != e ? e : this.value, null != n ? n : this.color, null != r ? r : this.left, null != i ? i : this.right);
        }, o.prototype.isEmpty = function () {
          return !1;
        }, o.prototype.inorderTraversal = function (t) {
          return this.left.inorderTraversal(t) || t(this.key, this.value) || this.right.inorderTraversal(t);
        }, o.prototype.reverseTraversal = function (t) {
          return this.right.reverseTraversal(t) || t(this.key, this.value) || this.left.reverseTraversal(t);
        }, o.prototype.min = function () {
          return this.left.isEmpty() ? this : this.left.min();
        }, o.prototype.minKey = function () {
          return this.min().key;
        }, o.prototype.maxKey = function () {
          return this.right.isEmpty() ? this.key : this.right.maxKey();
        }, o.prototype.insert = function (t, e, n) {
          var r = this,
              i = n(t, r.key);
          return (r = i < 0 ? r.copy(null, null, null, r.left.insert(t, e, n), null) : 0 === i ? r.copy(null, e, null, null, null) : r.copy(null, null, null, null, r.right.insert(t, e, n))).fixUp();
        }, o.prototype.removeMin = function () {
          if (this.left.isEmpty()) return o.EMPTY;
          var t = this;
          return t.left.isRed() || t.left.left.isRed() || (t = t.moveRedLeft()), (t = t.copy(null, null, null, t.left.removeMin(), null)).fixUp();
        }, o.prototype.remove = function (t, e) {
          var n,
              r = this;
          if (e(t, r.key) < 0) r.left.isEmpty() || r.left.isRed() || r.left.left.isRed() || (r = r.moveRedLeft()), r = r.copy(null, null, null, r.left.remove(t, e), null);else {
            if (r.left.isRed() && (r = r.rotateRight()), r.right.isEmpty() || r.right.isRed() || r.right.left.isRed() || (r = r.moveRedRight()), 0 === e(t, r.key)) {
              if (r.right.isEmpty()) return o.EMPTY;
              n = r.right.min(), r = r.copy(n.key, n.value, null, null, r.right.removeMin());
            }

            r = r.copy(null, null, null, null, r.right.remove(t, e));
          }
          return r.fixUp();
        }, o.prototype.isRed = function () {
          return this.color;
        }, o.prototype.fixUp = function () {
          var t = this;
          return t.right.isRed() && !t.left.isRed() && (t = t.rotateLeft()), t.left.isRed() && t.left.left.isRed() && (t = t.rotateRight()), t.left.isRed() && t.right.isRed() && (t = t.colorFlip()), t;
        }, o.prototype.moveRedLeft = function () {
          var t = this.colorFlip();
          return t.right.left.isRed() && (t = (t = (t = t.copy(null, null, null, null, t.right.rotateRight())).rotateLeft()).colorFlip()), t;
        }, o.prototype.moveRedRight = function () {
          var t = this.colorFlip();
          return t.left.left.isRed() && (t = (t = t.rotateRight()).colorFlip()), t;
        }, o.prototype.rotateLeft = function () {
          var t = this.copy(null, null, o.RED, null, this.right.left);
          return this.right.copy(null, null, this.color, t, null);
        }, o.prototype.rotateRight = function () {
          var t = this.copy(null, null, o.RED, this.left.right, null);
          return this.left.copy(null, null, this.color, null, t);
        }, o.prototype.colorFlip = function () {
          var t = this.left.copy(null, null, !this.left.color, null, null),
              e = this.right.copy(null, null, !this.right.color, null, null);
          return this.copy(null, null, !this.color, t, e);
        }, o.prototype.checkMaxDepth = function () {
          var t = this.check();
          return Math.pow(2, t) <= this.size + 1;
        }, o.prototype.check = function () {
          if (this.isRed() && this.left.isRed()) throw Mr("Red node has red child(" + this.key + "," + this.value + ")");
          if (this.right.isRed()) throw Mr("Right child of (" + this.key + "," + this.value + ") is red");
          var t = this.left.check();
          if (t !== this.right.check()) throw Mr("Black depths differ");
          return t + (this.isRed() ? 0 : 1);
        }, o.EMPTY = null, o.RED = !0, o.BLACK = !1, o;
      }(),
          Ki = function () {
        function t() {
          this.size = 0;
        }

        return t.prototype.copy = function (t, e, n, r, i) {
          return this;
        }, t.prototype.insert = function (t, e, n) {
          return new Qi(t, e);
        }, t.prototype.remove = function (t, e) {
          return this;
        }, t.prototype.isEmpty = function () {
          return !0;
        }, t.prototype.inorderTraversal = function (t) {
          return !1;
        }, t.prototype.reverseTraversal = function (t) {
          return !1;
        }, t.prototype.minKey = function () {
          return null;
        }, t.prototype.maxKey = function () {
          return null;
        }, t.prototype.isRed = function () {
          return !1;
        }, t.prototype.checkMaxDepth = function () {
          return !0;
        }, t.prototype.check = function () {
          return 0;
        }, t;
      }();

      Qi.EMPTY = new Ki();

      var ji = function () {
        function o(t) {
          this.comparator = t, this.data = new Ui(this.comparator);
        }

        return o.fromMapKeys = function (t) {
          var e = new o(t.comparator);
          return t.forEach(function (t) {
            e = e.add(t);
          }), e;
        }, o.prototype.has = function (t) {
          return null !== this.data.get(t);
        }, o.prototype.first = function () {
          return this.data.minKey();
        }, o.prototype.last = function () {
          return this.data.maxKey();
        }, Object.defineProperty(o.prototype, "size", {
          get: function get() {
            return this.data.size;
          },
          enumerable: !0,
          configurable: !0
        }), o.prototype.indexOf = function (t) {
          return this.data.indexOf(t);
        }, o.prototype.forEach = function (n) {
          this.data.inorderTraversal(function (t, e) {
            return n(t), !1;
          });
        }, o.prototype.forEachInRange = function (t, e) {
          for (var n = this.data.getIteratorFrom(t[0]); n.hasNext();) {
            var r = n.getNext();
            if (0 <= this.comparator(r.key, t[1])) return;
            e(r.key);
          }
        }, o.prototype.forEachWhile = function (t, e) {
          var n;

          for (n = void 0 !== e ? this.data.getIteratorFrom(e) : this.data.getIterator(); n.hasNext();) {
            if (!t(n.getNext().key)) return;
          }
        }, o.prototype.firstAfterOrEqual = function (t) {
          var e = this.data.getIteratorFrom(t);
          return e.hasNext() ? e.getNext().key : null;
        }, o.prototype.getIterator = function () {
          return new Gi(this.data.getIterator());
        }, o.prototype.getIteratorFrom = function (t) {
          return new Gi(this.data.getIteratorFrom(t));
        }, o.prototype.add = function (t) {
          return this.copy(this.data.remove(t).insert(t, !0));
        }, o.prototype.delete = function (t) {
          return this.has(t) ? this.copy(this.data.remove(t)) : this;
        }, o.prototype.isEmpty = function () {
          return this.data.isEmpty();
        }, o.prototype.unionWith = function (t) {
          var e = this;
          return t.forEach(function (t) {
            e = e.add(t);
          }), e;
        }, o.prototype.isEqual = function (t) {
          if (!(t instanceof o)) return !1;
          if (this.size !== t.size) return !1;

          for (var e = this.data.getIterator(), n = t.data.getIterator(); e.hasNext();) {
            var r = e.getNext().key,
                i = n.getNext().key;
            if (0 !== this.comparator(r, i)) return !1;
          }

          return !0;
        }, o.prototype.toArray = function () {
          var e = [];
          return this.forEach(function (t) {
            e.push(t);
          }), e;
        }, o.prototype.toString = function () {
          var e = [];
          return this.forEach(function (t) {
            return e.push(t);
          }), "SortedSet(" + e.toString() + ")";
        }, o.prototype.copy = function (t) {
          var e = new o(this.comparator);
          return e.data = t, e;
        }, o;
      }(),
          Gi = function () {
        function t(t) {
          this.iter = t;
        }

        return t.prototype.getNext = function () {
          return this.iter.getNext().key;
        }, t.prototype.hasNext = function () {
          return this.iter.hasNext();
        }, t;
      }(),
          Wi = new Ui(Di.comparator);

      function zi() {
        return Wi;
      }

      function Hi() {
        return zi();
      }

      var Yi = new Ui(Di.comparator);

      function Xi() {
        return Yi;
      }

      var Ji = new Ui(Di.comparator);

      function $i() {
        return Ji;
      }

      var Zi = new ji(Di.comparator);

      function to() {
        for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];

        for (var n = Zi, r = 0, i = t; r < i.length; r++) {
          var o = i[r];
          n = n.add(o);
        }

        return n;
      }

      var eo = new ji(ui);

      function no() {
        return eo;
      }

      var ro = function () {
        function t(t, e, n, r) {
          this.batchId = t, this.localWriteTime = e, this.baseMutations = n, Or(0 < (this.mutations = r).length, "Cannot create an empty mutation batch");
        }

        return t.prototype.applyToRemoteDocument = function (t, e, n) {
          e && Or(e.key.isEqual(t), "applyToRemoteDocument: key " + t + " should match maybeDoc key\n        " + e.key);
          var r = n.mutationResults;
          Or(r.length === this.mutations.length, "Mismatch between mutations length\n      (" + this.mutations.length + ") and mutation results length\n      (" + r.length + ").");

          for (var i = 0; i < this.mutations.length; i++) {
            var o = this.mutations[i];

            if (o.key.isEqual(t)) {
              var a = r[i];
              e = o.applyToRemoteDocument(e, a);
            }
          }

          return e;
        }, t.prototype.applyToLocalView = function (t, e) {
          e && Or(e.key.isEqual(t), "applyToLocalDocument: key " + t + " should match maybeDoc key\n        " + e.key);

          for (var n = 0, r = this.baseMutations; n < r.length; n++) {
            (s = r[n]).key.isEqual(t) && (e = s.applyToLocalView(e, e, this.localWriteTime));
          }

          for (var i = e, o = 0, a = this.mutations; o < a.length; o++) {
            var s;
            (s = a[o]).key.isEqual(t) && (e = s.applyToLocalView(e, i, this.localWriteTime));
          }

          return e;
        }, t.prototype.applyToLocalDocumentSet = function (n) {
          var r = this,
              i = n;
          return this.mutations.forEach(function (t) {
            var e = r.applyToLocalView(t.key, n.get(t.key));
            e && (i = i.insert(t.key, e));
          }), i;
        }, t.prototype.keys = function () {
          return this.mutations.reduce(function (t, e) {
            return t.add(e.key);
          }, to());
        }, t.prototype.isEqual = function (t) {
          return this.batchId === t.batchId && ci(this.mutations, t.mutations) && ci(this.baseMutations, t.baseMutations);
        }, t;
      }(),
          io = function () {
        function s(t, e, n, r, i) {
          this.batch = t, this.commitVersion = e, this.mutationResults = n, this.streamToken = r, this.docVersions = i;
        }

        return s.from = function (t, e, n, r) {
          Or(t.mutations.length === n.length, "Mutations sent " + t.mutations.length + " must equal results received " + n.length);

          for (var i = $i(), o = t.mutations, a = 0; a < o.length; a++) i = i.insert(o[a].key, n[a].version);

          return new s(t, e, n, r, i);
        }, s;
      }(),
          oo = function () {
        function a(t) {
          var e = this;
          this.nextCallback = null, this.catchCallback = null, this.result = void 0, this.error = void 0, this.isDone = !1, this.callbackAttached = !1, t(function (t) {
            e.isDone = !0, e.result = t, e.nextCallback && e.nextCallback(t);
          }, function (t) {
            e.isDone = !0, e.error = t, e.catchCallback && e.catchCallback(t);
          });
        }

        return a.prototype.catch = function (t) {
          return this.next(void 0, t);
        }, a.prototype.next = function (r, i) {
          var o = this;
          return this.callbackAttached && Mr("Called next() or catch() twice for PersistencePromise"), this.callbackAttached = !0, this.isDone ? this.error ? this.wrapFailure(i, this.error) : this.wrapSuccess(r, this.result) : new a(function (e, n) {
            o.nextCallback = function (t) {
              o.wrapSuccess(r, t).next(e, n);
            }, o.catchCallback = function (t) {
              o.wrapFailure(i, t).next(e, n);
            };
          });
        }, a.prototype.toPromise = function () {
          var n = this;
          return new Promise(function (t, e) {
            n.next(t, e);
          });
        }, a.prototype.wrapUserFunction = function (t) {
          try {
            var e = t();
            return e instanceof a ? e : a.resolve(e);
          } catch (t) {
            return a.reject(t);
          }
        }, a.prototype.wrapSuccess = function (t, e) {
          return t ? this.wrapUserFunction(function () {
            return t(e);
          }) : a.resolve(e);
        }, a.prototype.wrapFailure = function (t, e) {
          return t ? this.wrapUserFunction(function () {
            return t(e);
          }) : a.reject(e);
        }, a.resolve = function (n) {
          return new a(function (t, e) {
            t(n);
          });
        }, a.reject = function (n) {
          return new a(function (t, e) {
            e(n);
          });
        }, a.waitFor = function (t) {
          return new a(function (e, n) {
            var r = 0,
                i = 0,
                o = !1;
            t.forEach(function (t) {
              ++r, t.next(function () {
                ++i, o && i === r && e();
              }, function (t) {
                return n(t);
              });
            }), o = !0, i === r && e();
          });
        }, a.or = function (t) {
          for (var n = a.resolve(!1), e = function e(_e2) {
            n = n.next(function (t) {
              return t ? a.resolve(t) : _e2();
            });
          }, r = 0, i = t; r < i.length; r++) {
            e(i[r]);
          }

          return n;
        }, a.forEach = function (t, n) {
          var r = this,
              i = [];
          return t.forEach(function (t, e) {
            i.push(n.call(r, t, e));
          }), this.waitFor(i);
        }, a;
      }(),
          ao = function () {
        function i(t, e, n, r) {
          this.userId = t, this.serializer = e, this.indexManager = n, this.referenceDelegate = r, this.documentKeysByBatchId = {};
        }

        return i.forUser = function (t, e, n, r) {
          return Or("" !== t.uid, "UserID must not be an empty string."), new i(t.isAuthenticated() ? t.uid : "", e, n, r);
        }, i.prototype.checkEmpty = function (t) {
          var r = !0,
              e = IDBKeyRange.bound([this.userId, Number.NEGATIVE_INFINITY], [this.userId, Number.POSITIVE_INFINITY]);
          return ho(t).iterate({
            index: Jo.userMutationsIndex,
            range: e
          }, function (t, e, n) {
            r = !1, n.done();
          }).next(function () {
            return r;
          });
        }, i.prototype.acknowledgeBatch = function (e, t, n) {
          return this.getMutationQueueMetadata(e).next(function (t) {
            return t.lastStreamToken = co(n), fo(e).put(t);
          });
        }, i.prototype.getLastStreamToken = function (t) {
          return this.getMutationQueueMetadata(t).next(function (t) {
            return t.lastStreamToken;
          });
        }, i.prototype.setLastStreamToken = function (e, n) {
          return this.getMutationQueueMetadata(e).next(function (t) {
            return t.lastStreamToken = co(n), fo(e).put(t);
          });
        }, i.prototype.addMutationBatch = function (u, c, h, l) {
          var f = this,
              p = lo(u),
              d = ho(u);
          return d.add({}).next(function (t) {
            Or("number" == typeof t, "Auto-generated key is not a number");
            var e = new ro(t, c, h, l),
                n = f.serializer.toDbMutationBatch(f.userId, e);
            f.documentKeysByBatchId[t] = e.keys();

            for (var r = [], i = 0, o = l; i < o.length; i++) {
              var a = o[i],
                  s = $o.key(f.userId, a.key.path, t);
              r.push(d.put(n)), r.push(p.put(s, $o.PLACEHOLDER)), r.push(f.indexManager.addToCollectionParentIndex(u, a.key.path.popLast()));
            }

            return oo.waitFor(r).next(function () {
              return e;
            });
          });
        }, i.prototype.lookupMutationBatch = function (t, e) {
          var n = this;
          return ho(t).get(e).next(function (t) {
            return t ? (Or(t.userId === n.userId, "Unexpected user '" + t.userId + "' for mutation batch " + e), n.serializer.fromDbMutationBatch(t)) : null;
          });
        }, i.prototype.lookupMutationKeys = function (t, n) {
          var r = this;
          return this.documentKeysByBatchId[n] ? oo.resolve(this.documentKeysByBatchId[n]) : this.lookupMutationBatch(t, n).next(function (t) {
            if (t) {
              var e = t.keys();
              return r.documentKeysByBatchId[n] = e;
            }

            return null;
          });
        }, i.prototype.getNextMutationBatchAfterBatchId = function (t, e) {
          var r = this,
              i = e + 1,
              n = IDBKeyRange.lowerBound([this.userId, i]),
              o = null;
          return ho(t).iterate({
            index: Jo.userMutationsIndex,
            range: n
          }, function (t, e, n) {
            e.userId === r.userId && (Or(e.batchId >= i, "Should have found mutation after " + i), o = r.serializer.fromDbMutationBatch(e)), n.done();
          }).next(function () {
            return o;
          });
        }, i.prototype.getAllMutationBatches = function (t) {
          var e = this,
              n = IDBKeyRange.bound([this.userId, -1], [this.userId, Number.POSITIVE_INFINITY]);
          return ho(t).loadAll(Jo.userMutationsIndex, n).next(function (t) {
            return t.map(function (t) {
              return e.serializer.fromDbMutationBatch(t);
            });
          });
        }, i.prototype.getAllMutationBatchesAffectingDocumentKey = function (s, u) {
          var c = this,
              t = $o.prefixForPath(this.userId, u.path),
              e = IDBKeyRange.lowerBound(t),
              h = [];
          return lo(s).iterate({
            range: e
          }, function (e, t, n) {
            var r = e[0],
                i = e[1],
                o = e[2],
                a = qi(i);
            if (r === c.userId && u.path.isEqual(a)) return ho(s).get(o).next(function (t) {
              if (!t) throw Mr("Dangling document-mutation reference found: " + e + " which points to " + o);
              Or(t.userId === c.userId, "Unexpected user '" + t.userId + "' for mutation batch " + o), h.push(c.serializer.fromDbMutationBatch(t));
            });
            n.done();
          }).next(function () {
            return h;
          });
        }, i.prototype.getAllMutationBatchesAffectingDocumentKeys = function (r, t) {
          var u = this,
              c = new ji(ui),
              i = [];
          return t.forEach(function (s) {
            var t = $o.prefixForPath(u.userId, s.path),
                e = IDBKeyRange.lowerBound(t),
                n = lo(r).iterate({
              range: e
            }, function (t, e, n) {
              var r = t[0],
                  i = t[1],
                  o = t[2],
                  a = qi(i);
              r === u.userId && s.path.isEqual(a) ? c = c.add(o) : n.done();
            });
            i.push(n);
          }), oo.waitFor(i).next(function () {
            return u.lookupMutationBatches(r, c);
          });
        }, i.prototype.getAllMutationBatchesAffectingQuery = function (t, e) {
          var s = this;
          Or(!e.isDocumentQuery(), "Document queries shouldn't go down this path"), Or(!e.isCollectionGroupQuery(), "CollectionGroup queries should be handled in LocalDocumentsView");
          var u = e.path,
              c = u.length + 1,
              n = $o.prefixForPath(this.userId, u),
              r = IDBKeyRange.lowerBound(n),
              h = new ji(ui);
          return lo(t).iterate({
            range: r
          }, function (t, e, n) {
            var r = t[0],
                i = t[1],
                o = t[2],
                a = qi(i);
            r === s.userId && u.isPrefixOf(a) ? a.length === c && (h = h.add(o)) : n.done();
          }).next(function () {
            return s.lookupMutationBatches(t, h);
          });
        }, i.prototype.lookupMutationBatches = function (t, e) {
          var n = this,
              r = [],
              i = [];
          return e.forEach(function (e) {
            i.push(ho(t).get(e).next(function (t) {
              if (null === t) throw Mr("Dangling document-mutation reference found, which points to " + e);
              Or(t.userId === n.userId, "Unexpected user '" + t.userId + "' for mutation batch " + e), r.push(n.serializer.fromDbMutationBatch(t));
            }));
          }), oo.waitFor(i).next(function () {
            return r;
          });
        }, i.prototype.removeMutationBatch = function (e, n) {
          var r = this;
          return uo(e.simpleDbTransaction, this.userId, n).next(function (t) {
            return r.removeCachedMutationKeys(n.batchId), oo.forEach(t, function (t) {
              return r.referenceDelegate.removeMutationReference(e, t);
            });
          });
        }, i.prototype.removeCachedMutationKeys = function (t) {
          delete this.documentKeysByBatchId[t];
        }, i.prototype.performConsistencyCheck = function (n) {
          var o = this;
          return this.checkEmpty(n).next(function (t) {
            if (!t) return oo.resolve();
            var e = IDBKeyRange.lowerBound($o.prefixForUser(o.userId)),
                i = [];
            return lo(n).iterate({
              range: e
            }, function (t, e, n) {
              if (t[0] === o.userId) {
                var r = qi(t[1]);
                i.push(r);
              } else n.done();
            }).next(function () {
              Or(0 === i.length, "Document leak -- detected dangling mutation references when queue is empty. Dangling keys: " + i.map(function (t) {
                return t.canonicalString();
              }));
            });
          });
        }, i.prototype.containsKey = function (t, e) {
          return so(t, this.userId, e);
        }, i.prototype.getMutationQueueMetadata = function (t) {
          var e = this;
          return fo(t).get(this.userId).next(function (t) {
            return t || new Xo(e.userId, -1, "");
          });
        }, i;
      }();

      function so(t, o, e) {
        var n = $o.prefixForPath(o, e.path),
            a = n[1],
            r = IDBKeyRange.lowerBound(n),
            s = !1;
        return lo(t).iterate({
          range: r,
          keysOnly: !0
        }, function (t, e, n) {
          var r = t[0],
              i = t[1];
          t[2];
          r === o && i === a && (s = !0), n.done();
        }).next(function () {
          return s;
        });
      }

      function uo(t, e, n) {
        var r = t.store(Jo.store),
            i = t.store($o.store),
            o = [],
            a = IDBKeyRange.only(n.batchId),
            s = 0,
            u = r.iterate({
          range: a
        }, function (t, e, n) {
          return s++, n.delete();
        });
        o.push(u.next(function () {
          Or(1 === s, "Dangling document-mutation reference found: Missing batch " + n.batchId);
        }));

        for (var c = [], h = 0, l = n.mutations; h < l.length; h++) {
          var f = l[h],
              p = $o.key(e, f.key.path, n.batchId);
          o.push(i.delete(p)), c.push(f.key);
        }

        return oo.waitFor(o).next(function () {
          return c;
        });
      }

      function co(t) {
        return t instanceof Uint8Array ? (Or("YES" === process.env.USE_MOCK_PERSISTENCE, "Persisting non-string stream tokens is only supported with mock persistence."), t.toString()) : t;
      }

      function ho(t) {
        return Na.getStore(t, Jo.store);
      }

      function lo(t) {
        return Na.getStore(t, $o.store);
      }

      function fo(t) {
        return Na.getStore(t, Xo.store);
      }

      var po, mo;
      (mo = po || (po = {}))[mo.QueryCache = 0] = "QueryCache", mo[mo.SyncEngine = 1] = "SyncEngine";

      var yo = function () {
        function t(t, e) {
          Or((1 & (this.generatorId = t)) === t, "Generator ID " + t + " contains more than 1 reserved bits"), this.seek(void 0 !== e ? e : this.generatorId);
        }

        return t.prototype.next = function () {
          var t = this.nextId;
          return this.nextId += 2, t;
        }, t.prototype.after = function (t) {
          return this.seek(t + 2), this.next();
        }, t.prototype.seek = function (t) {
          Or((1 & t) === this.generatorId, "Cannot supply target ID from different generator ID"), this.nextId = t;
        }, t.forQueryCache = function () {
          return new t(po.QueryCache, 2);
        }, t.forSyncEngine = function () {
          return new t(po.SyncEngine);
        }, t;
      }(),
          go = "SimpleDb",
          vo = function () {
        function s(t) {
          this.db = t, 12.2 === s.getIOSVersion(a()) && kr("Firestore persistence suffers from a bug in iOS 12.2 Safari that may cause your app to stop working. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.");
        }

        return s.openOrCreate = function (o, t, a) {
          return Or(s.isAvailable(), "IndexedDB not supported in current environment."), Ar(go, "Opening database:", o), new oo(function (n, r) {
            var i = window.indexedDB.open(o, t);
            i.onsuccess = function (t) {
              var e = t.target.result;
              n(new s(e));
            }, i.onblocked = function () {
              r(new xr(Lr.FAILED_PRECONDITION, "Cannot upgrade IndexedDB schema while another tab is open. Close all tabs that access Firestore and reload this page to proceed."));
            }, i.onerror = function (t) {
              var e = t.target.error;
              "VersionError" === e.name ? r(new xr(Lr.FAILED_PRECONDITION, "A newer version of the Firestore SDK was previously used and so the persisted data is not compatible with the version of the SDK you are now using. The SDK will operate with persistence disabled. If you need persistence, please re-upgrade to a newer version of the SDK or else clear the persisted IndexedDB data for your app to start fresh.")) : r(e);
            }, i.onupgradeneeded = function (t) {
              Ar(go, 'Database "' + o + '" requires upgrade from version:', t.oldVersion);
              var e = t.target.result,
                  n = new wo(i.transaction);
              a.createOrUpgrade(e, n, t.oldVersion, Wo).next(function () {
                Ar(go, "Database upgrade to version " + Wo + " complete");
              });
            };
          }).toPromise();
        }, s.delete = function (t) {
          return Ar(go, "Removing database:", t), So(window.indexedDB.deleteDatabase(t)).toPromise();
        }, s.isAvailable = function () {
          if ("undefined" == typeof window || null == window.indexedDB) return !1;
          if (void 0 === window.navigator) return "YES" === process.env.USE_MOCK_PERSISTENCE;
          var t = a(),
              e = s.getIOSVersion(t),
              n = 0 < e && e < 10,
              r = s.getAndroidVersion(t),
              i = 0 < r && r < 4.5;
          return !(0 < t.indexOf("MSIE ") || 0 < t.indexOf("Trident/") || 0 < t.indexOf("Edge/") || n || i);
        }, s.getStore = function (t, e) {
          return t.store(e);
        }, s.getIOSVersion = function (t) {
          var e = t.match(/i(?:phone|pad|pod) os ([\d_]+)/i),
              n = e ? e[1].split("_").slice(0, 2).join(".") : "-1";
          return Number(n);
        }, s.getAndroidVersion = function (t) {
          var e = t.match(/Android ([\d.]+)/i),
              n = e ? e[1].split(".").slice(0, 2).join(".") : "-1";
          return Number(n);
        }, s.prototype.setVersionChangeListener = function (e) {
          this.db.onversionchange = function (t) {
            return e(t);
          };
        }, s.prototype.runTransaction = function (t, e, n) {
          var r = wo.open(this.db, t, e),
              i = n(r).catch(function (t) {
            return r.abort(t), oo.reject(t);
          }).toPromise();
          return i.catch(function () {}), r.completionPromise.then(function () {
            return i;
          });
        }, s.prototype.close = function () {
          this.db.close();
        }, s;
      }(),
          bo = function () {
        function t(t) {
          this.dbCursor = t, this.shouldStop = !1, this.nextKey = null;
        }

        return Object.defineProperty(t.prototype, "isDone", {
          get: function get() {
            return this.shouldStop;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "skipToKey", {
          get: function get() {
            return this.nextKey;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "cursor", {
          set: function set(t) {
            this.dbCursor = t;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.done = function () {
          this.shouldStop = !0;
        }, t.prototype.skip = function (t) {
          this.nextKey = t;
        }, t.prototype.delete = function () {
          return So(this.dbCursor.delete());
        }, t;
      }(),
          wo = function () {
        function r(t) {
          var n = this;
          this.transaction = t, this.aborted = !1, this.completionDeferred = new Ni(), this.transaction.oncomplete = function () {
            n.completionDeferred.resolve();
          }, this.transaction.onabort = function () {
            t.error ? n.completionDeferred.reject(t.error) : n.completionDeferred.resolve();
          }, this.transaction.onerror = function (t) {
            var e = Io(t.target.error);
            n.completionDeferred.reject(e);
          };
        }

        return r.open = function (t, e, n) {
          return new r(t.transaction(n, e));
        }, Object.defineProperty(r.prototype, "completionPromise", {
          get: function get() {
            return this.completionDeferred.promise;
          },
          enumerable: !0,
          configurable: !0
        }), r.prototype.abort = function (t) {
          t && this.completionDeferred.reject(t), this.aborted || (Ar(go, "Aborting transaction:", t ? t.message : "Client-initiated abort"), this.aborted = !0, this.transaction.abort());
        }, r.prototype.store = function (t) {
          var e = this.transaction.objectStore(t);
          return Or(!!e, "Object store not part of transaction: " + t), new Eo(e);
        }, r;
      }(),
          Eo = function () {
        function t(t) {
          this.store = t;
        }

        return t.prototype.put = function (t, e) {
          return So(void 0 !== e ? (Ar(go, "PUT", this.store.name, t, e), this.store.put(e, t)) : (Ar(go, "PUT", this.store.name, "<auto-key>", t), this.store.put(t)));
        }, t.prototype.add = function (t) {
          return Ar(go, "ADD", this.store.name, t, t), So(this.store.add(t));
        }, t.prototype.get = function (e) {
          var n = this;
          return So(this.store.get(e)).next(function (t) {
            return void 0 === t && (t = null), Ar(go, "GET", n.store.name, e, t), t;
          });
        }, t.prototype.delete = function (t) {
          return Ar(go, "DELETE", this.store.name, t), So(this.store.delete(t));
        }, t.prototype.count = function () {
          return Ar(go, "COUNT", this.store.name), So(this.store.count());
        }, t.prototype.loadAll = function (t, e) {
          var n = this.cursor(this.options(t, e)),
              r = [];
          return this.iterateCursor(n, function (t, e) {
            r.push(e);
          }).next(function () {
            return r;
          });
        }, t.prototype.deleteAll = function (t, e) {
          Ar(go, "DELETE ALL", this.store.name);
          var n = this.options(t, e);
          n.keysOnly = !1;
          var r = this.cursor(n);
          return this.iterateCursor(r, function (t, e, n) {
            return n.delete();
          });
        }, t.prototype.iterate = function (t, e) {
          var n;
          e ? n = t : (n = {}, e = t);
          var r = this.cursor(n);
          return this.iterateCursor(r, e);
        }, t.prototype.iterateSerial = function (i) {
          var t = this.cursor({});
          return new oo(function (n, r) {
            t.onerror = function (t) {
              var e = Io(t.target.error);
              r(e);
            }, t.onsuccess = function (t) {
              var e = t.target.result;
              e ? i(e.primaryKey, e.value).next(function (t) {
                t ? e.continue() : n();
              }) : n();
            };
          });
        }, t.prototype.iterateCursor = function (t, a) {
          var s = [];
          return new oo(function (o, e) {
            t.onerror = function (t) {
              e(t.target.error);
            }, t.onsuccess = function (t) {
              var e = t.target.result;

              if (e) {
                var n = new bo(e),
                    r = a(e.primaryKey, e.value, n);

                if (r instanceof oo) {
                  var i = r.catch(function (t) {
                    return n.done(), oo.reject(t);
                  });
                  s.push(i);
                }

                n.isDone ? o() : null === n.skipToKey ? e.continue() : e.continue(n.skipToKey);
              } else o();
            };
          }).next(function () {
            return oo.waitFor(s);
          });
        }, t.prototype.options = function (t, e) {
          var n = void 0;
          return void 0 !== t && ("string" == typeof t ? n = t : (Or(void 0 === e, "3rd argument must not be defined if 2nd is a range."), e = t)), {
            index: n,
            range: e
          };
        }, t.prototype.cursor = function (t) {
          var e = "next";

          if (t.reverse && (e = "prev"), t.index) {
            var n = this.store.index(t.index);
            return t.keysOnly ? n.openKeyCursor(t.range, e) : n.openCursor(t.range, e);
          }

          return this.store.openCursor(t.range, e);
        }, t;
      }();

      function So(t) {
        return new oo(function (n, r) {
          t.onsuccess = function (t) {
            var e = t.target.result;
            n(e);
          }, t.onerror = function (t) {
            var e = Io(t.target.error);
            r(e);
          };
        });
      }

      var To = !1;

      function Io(t) {
        var e = vo.getIOSVersion(a());

        if (12.2 <= e && e < 13) {
          var n = "An internal error was encountered in the Indexed Database server";

          if (0 <= t.message.indexOf(n)) {
            var r = new xr("internal", "IOS_INDEXEDDB_BUG1: IndexedDb has thrown '" + n + "'. This is likely due to an unavoidable bug in iOS. See https://stackoverflow.com/q/56496296/110915 for details and a potential workaround.");
            return To || (To = !0, setTimeout(function () {
              throw r;
            }, 0)), r;
          }
        }

        return t;
      }

      var Co = function () {
        function t(t, e) {
          this.referenceDelegate = t, this.serializer = e, this.targetIdGenerator = yo.forQueryCache();
        }

        return t.prototype.allocateTargetId = function (e) {
          var n = this;
          return this.retrieveMetadata(e).next(function (t) {
            return t.highestTargetId = n.targetIdGenerator.after(t.highestTargetId), n.saveMetadata(e, t).next(function () {
              return t.highestTargetId;
            });
          });
        }, t.prototype.getLastRemoteSnapshotVersion = function (t) {
          return this.retrieveMetadata(t).next(function (t) {
            return Vi.fromTimestamp(new Fi(t.lastRemoteSnapshotVersion.seconds, t.lastRemoteSnapshotVersion.nanoseconds));
          });
        }, t.prototype.getHighestSequenceNumber = function (t) {
          return Ao(t.simpleDbTransaction);
        }, t.prototype.setTargetsMetadata = function (e, n, r) {
          var i = this;
          return this.retrieveMetadata(e).next(function (t) {
            return t.highestListenSequenceNumber = n, r && (t.lastRemoteSnapshotVersion = r.toTimestamp()), n > t.highestListenSequenceNumber && (t.highestListenSequenceNumber = n), i.saveMetadata(e, t);
          });
        }, t.prototype.addQueryData = function (e, n) {
          var r = this;
          return this.saveQueryData(e, n).next(function () {
            return r.retrieveMetadata(e).next(function (t) {
              return t.targetCount += 1, r.updateMetadataFromQueryData(n, t), r.saveMetadata(e, t);
            });
          });
        }, t.prototype.updateQueryData = function (t, e) {
          return this.saveQueryData(t, e);
        }, t.prototype.removeQueryData = function (e, t) {
          var n = this;
          return this.removeMatchingKeysForTargetId(e, t.targetId).next(function () {
            return Do(e).delete(t.targetId);
          }).next(function () {
            return n.retrieveMetadata(e);
          }).next(function (t) {
            return Or(0 < t.targetCount, "Removing from an empty query cache"), t.targetCount -= 1, n.saveMetadata(e, t);
          });
        }, t.prototype.removeTargets = function (r, i, o) {
          var a = this,
              s = 0,
              u = [];
          return Do(r).iterate(function (t, e) {
            var n = a.serializer.fromDbTarget(e);
            n.sequenceNumber <= i && void 0 === o[n.targetId] && (s++, u.push(a.removeQueryData(r, n)));
          }).next(function () {
            return oo.waitFor(u);
          }).next(function () {
            return s;
          });
        }, t.prototype.forEachTarget = function (t, r) {
          var i = this;
          return Do(t).iterate(function (t, e) {
            var n = i.serializer.fromDbTarget(e);
            r(n);
          });
        }, t.prototype.retrieveMetadata = function (t) {
          return No(t.simpleDbTransaction);
        }, t.prototype.saveMetadata = function (t, e) {
          return (n = t, Na.getStore(n, oa.store)).put(oa.key, e);
          var n;
        }, t.prototype.saveQueryData = function (t, e) {
          return Do(t).put(this.serializer.toDbTarget(e));
        }, t.prototype.updateMetadataFromQueryData = function (t, e) {
          var n = !1;
          return t.targetId > e.highestTargetId && (e.highestTargetId = t.targetId, n = !0), t.sequenceNumber > e.highestListenSequenceNumber && (e.highestListenSequenceNumber = t.sequenceNumber, n = !0), n;
        }, t.prototype.getQueryCount = function (t) {
          return this.retrieveMetadata(t).next(function (t) {
            return t.targetCount;
          });
        }, t.prototype.getQueryData = function (t, i) {
          var o = this,
              e = i.canonicalId(),
              n = IDBKeyRange.bound([e, Number.NEGATIVE_INFINITY], [e, Number.POSITIVE_INFINITY]),
              a = null;
          return Do(t).iterate({
            range: n,
            index: ra.queryTargetsIndexName
          }, function (t, e, n) {
            var r = o.serializer.fromDbTarget(e);
            i.isEqual(r.query) && (a = r, n.done());
          }).next(function () {
            return a;
          });
        }, t.prototype.addMatchingKeys = function (n, t, r) {
          var i = this,
              o = [],
              a = ko(n);
          return t.forEach(function (t) {
            var e = Pi(t.path);
            o.push(a.put(new ia(r, e))), o.push(i.referenceDelegate.addReference(n, t));
          }), oo.waitFor(o);
        }, t.prototype.removeMatchingKeys = function (n, t, r) {
          var i = this,
              o = ko(n);
          return oo.forEach(t, function (t) {
            var e = Pi(t.path);
            return oo.waitFor([o.delete([r, e]), i.referenceDelegate.removeReference(n, t)]);
          });
        }, t.prototype.removeMatchingKeysForTargetId = function (t, e) {
          var n = ko(t),
              r = IDBKeyRange.bound([e], [e + 1], !1, !0);
          return n.delete(r);
        }, t.prototype.getMatchingKeysForTargetId = function (t, e) {
          var n = IDBKeyRange.bound([e], [e + 1], !1, !0),
              r = ko(t),
              o = to();
          return r.iterate({
            range: n,
            keysOnly: !0
          }, function (t, e, n) {
            var r = qi(t[1]),
                i = new Di(r);
            o = o.add(i);
          }).next(function () {
            return o;
          });
        }, t.prototype.containsKey = function (t, e) {
          var n = Pi(e.path),
              r = IDBKeyRange.bound([n], [hi(n)], !1, !0),
              i = 0;
          return ko(t).iterate({
            index: ia.documentTargetsIndex,
            keysOnly: !0,
            range: r
          }, function (t, e, n) {
            var r = t[0];
            t[1];
            0 !== r && (i++, n.done());
          }).next(function () {
            return 0 < i;
          });
        }, t.prototype.getQueryDataForTarget = function (t, e) {
          var n = this;
          return Do(t).get(e).next(function (t) {
            return t ? n.serializer.fromDbTarget(t) : null;
          });
        }, t;
      }();

      function Do(t) {
        return Na.getStore(t, ra.store);
      }

      function No(t) {
        return vo.getStore(t, oa.store).get(oa.key).next(function (t) {
          return Or(null !== t, "Missing metadata row."), t;
        });
      }

      function Ao(t) {
        return No(t).next(function (t) {
          return t.highestListenSequenceNumber;
        });
      }

      function ko(t) {
        return Na.getStore(t, ia.store);
      }

      var Ro = function () {
        function t(t, e) {
          this.key = t, this.version = e;
        }

        return t.compareByKey = function (t, e) {
          return Di.comparator(t.key, e.key);
        }, t;
      }(),
          Mo = function (a) {
        function e(t, e, n, r, i) {
          var o = a.call(this, t, e) || this;
          return o.data = n, o.proto = i, o.hasLocalMutations = !!r.hasLocalMutations, o.hasCommittedMutations = !!r.hasCommittedMutations, o;
        }

        return s(e, a), e.prototype.field = function (t) {
          return this.data.field(t);
        }, e.prototype.fieldValue = function (t) {
          var e = this.field(t);
          return e ? e.value() : void 0;
        }, e.prototype.value = function () {
          return this.data.value();
        }, e.prototype.isEqual = function (t) {
          return t instanceof e && this.key.isEqual(t.key) && this.version.isEqual(t.version) && this.data.isEqual(t.data) && this.hasLocalMutations === t.hasLocalMutations && this.hasCommittedMutations === t.hasCommittedMutations;
        }, e.prototype.toString = function () {
          return "Document(" + this.key + ", " + this.version + ", " + this.data.toString() + ", {hasLocalMutations: " + this.hasLocalMutations + "}), {hasCommittedMutations: " + this.hasCommittedMutations + "})";
        }, Object.defineProperty(e.prototype, "hasPendingWrites", {
          get: function get() {
            return this.hasLocalMutations || this.hasCommittedMutations;
          },
          enumerable: !0,
          configurable: !0
        }), e.compareByField = function (t, e, n) {
          var r = e.field(t),
              i = n.field(t);
          return void 0 !== r && void 0 !== i ? r.compareTo(i) : Mr("Trying to compare documents on fields that don't exist");
        }, e;
      }(Ro),
          Oo = function (i) {
        function e(t, e, n) {
          var r = i.call(this, t, e) || this;
          return r.hasCommittedMutations = !(!n || !n.hasCommittedMutations), r;
        }

        return s(e, i), e.prototype.toString = function () {
          return "NoDocument(" + this.key + ", " + this.version + ")";
        }, Object.defineProperty(e.prototype, "hasPendingWrites", {
          get: function get() {
            return this.hasCommittedMutations;
          },
          enumerable: !0,
          configurable: !0
        }), e.prototype.isEqual = function (t) {
          return t instanceof e && t.hasCommittedMutations === this.hasCommittedMutations && t.version.isEqual(this.version) && t.key.isEqual(this.key);
        }, e;
      }(Ro),
          _o = function (n) {
        function e(t, e) {
          return n.call(this, t, e) || this;
        }

        return s(e, n), e.prototype.toString = function () {
          return "UnknownDocument(" + this.key + ", " + this.version + ")";
        }, Object.defineProperty(e.prototype, "hasPendingWrites", {
          get: function get() {
            return !0;
          },
          enumerable: !0,
          configurable: !0
        }), e.prototype.isEqual = function (t) {
          return t instanceof e && t.version.isEqual(this.version) && t.key.isEqual(this.key);
        }, e;
      }(Ro),
          Po = function () {
        function t(t) {
          this.mapKeyFn = t, this.inner = {};
        }

        return t.prototype.get = function (t) {
          var e = this.mapKeyFn(t),
              n = this.inner[e];
          if (void 0 !== n) for (var r = 0, i = n; r < i.length; r++) {
            var o = i[r],
                a = o[0],
                s = o[1];
            if (a.isEqual(t)) return s;
          }
        }, t.prototype.has = function (t) {
          return void 0 !== this.get(t);
        }, t.prototype.set = function (t, e) {
          var n = this.mapKeyFn(t),
              r = this.inner[n];

          if (void 0 !== r) {
            for (var i = 0; i < r.length; i++) if (r[i][0].isEqual(t)) return void (r[i] = [t, e]);

            r.push([t, e]);
          } else this.inner[n] = [[t, e]];
        }, t.prototype.delete = function (t) {
          var e = this.mapKeyFn(t),
              n = this.inner[e];
          if (void 0 === n) return !1;

          for (var r = 0; r < n.length; r++) if (n[r][0].isEqual(t)) return 1 === n.length ? delete this.inner[e] : n.splice(r, 1), !0;

          return !1;
        }, t.prototype.forEach = function (s) {
          Br(this.inner, function (t, e) {
            for (var n = 0, r = e; n < r.length; n++) {
              var i = r[n],
                  o = i[0],
                  a = i[1];
              s(o, a);
            }
          });
        }, t.prototype.isEmpty = function () {
          return Qr(this.inner);
        }, t;
      }(),
          Lo = function () {
        function t() {
          this.changes = zi(), this.documentSizes = new Po(function (t) {
            return t.toString();
          });
        }

        return t.prototype.addEntry = function (t) {
          var e = this.assertChanges();
          this.changes = e.insert(t.key, t);
        }, t.prototype.getEntry = function (t, e) {
          var n = this,
              r = this.assertChanges().get(e);
          return r ? oo.resolve(r) : this.getFromCache(t, e).next(function (t) {
            return null === t ? (n.documentSizes.set(e, 0), null) : (n.documentSizes.set(e, t.size), t.maybeDocument);
          });
        }, t.prototype.getEntries = function (t, e) {
          var n = this;
          return this.getAllFromCache(t, e).next(function (t) {
            var e = t.maybeDocuments;
            return t.sizeMap.forEach(function (t, e) {
              n.documentSizes.set(t, e);
            }), e;
          });
        }, t.prototype.apply = function (t) {
          var e = this.applyChanges(t);
          return this.changes = null, e;
        }, t.prototype.assertChanges = function () {
          return Or(null !== this.changes, "Changes have already been applied."), this.changes;
        }, t;
      }(),
          xo = "The remote document changelog no longer contains all changes for all local query views. It may be necessary to rebuild these views.",
          qo = function () {
        function t(t, e, n) {
          this.serializer = t, this.indexManager = e, this.keepDocumentChangeLog = n, this._lastProcessedDocumentChangeId = 0;
        }

        return Object.defineProperty(t.prototype, "lastProcessedDocumentChangeId", {
          get: function get() {
            return this._lastProcessedDocumentChangeId;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.start = function (t) {
          var e = vo.getStore(t, ua.store);
          return this.synchronizeLastDocumentChangeId(e);
        }, t.prototype.addEntries = function (t, e, n) {
          var r = [];

          if (0 < e.length) {
            for (var i = Uo(t), o = to(), a = 0, s = e; a < s.length; a++) {
              var u = s[a],
                  c = u.key,
                  h = u.doc;
              r.push(i.put(Qo(c), h)), o = o.add(c), r.push(this.indexManager.addToCollectionParentIndex(t, c.path.popLast()));
            }

            this.keepDocumentChangeLog && r.push(Bo(t).put({
              changes: this.serializer.toDbResourcePaths(o)
            })), r.push(this.updateSize(t, n));
          }

          return oo.waitFor(r);
        }, t.prototype.removeEntry = function (t, e) {
          var n = Uo(t),
              r = Qo(e);
          return n.get(r).next(function (t) {
            return t ? n.delete(r).next(function () {
              return Ko(t);
            }) : oo.resolve(0);
          });
        }, t.prototype.getEntry = function (t, e) {
          var n = this;
          return Uo(t).get(Qo(e)).next(function (t) {
            return t ? n.serializer.fromDbRemoteDocument(t) : null;
          });
        }, t.prototype.getSizedEntry = function (t, e) {
          var n = this;
          return Uo(t).get(Qo(e)).next(function (t) {
            return t ? {
              maybeDocument: n.serializer.fromDbRemoteDocument(t),
              size: Ko(t)
            } : null;
          });
        }, t.prototype.getEntries = function (t, e) {
          var n = this,
              r = Hi();
          return this.forEachDbEntry(t, e, function (t, e) {
            r = e ? r.insert(t, n.serializer.fromDbRemoteDocument(e)) : r.insert(t, null);
          }).next(function () {
            return r;
          });
        }, t.prototype.getSizedEntries = function (t, e) {
          var n = this,
              r = Hi(),
              i = new Ui(Di.comparator);
          return this.forEachDbEntry(t, e, function (t, e) {
            i = e ? (r = r.insert(t, n.serializer.fromDbRemoteDocument(e)), i.insert(t, Ko(e))) : (r = r.insert(t, null), i.insert(t, 0));
          }).next(function () {
            return {
              maybeDocuments: r,
              sizeMap: i
            };
          });
        }, t.prototype.forEachDbEntry = function (t, e, i) {
          if (e.isEmpty()) return oo.resolve();
          var n = IDBKeyRange.bound(e.first().path.toArray(), e.last().path.toArray()),
              o = e.getIterator(),
              a = o.getNext();
          return Uo(t).iterate({
            range: n
          }, function (t, e, n) {
            for (var r = Di.fromSegments(t); a && Di.comparator(a, r) < 0;) i(a, null), a = o.getNext();

            a && a.isEqual(r) && (i(a, e), a = o.hasNext() ? o.getNext() : null), a ? n.skip(a.path.toArray()) : n.done();
          }).next(function () {
            for (; a;) i(a, null), a = o.hasNext() ? o.getNext() : null;
          });
        }, t.prototype.getDocumentsMatchingQuery = function (t, i) {
          var o = this;
          Or(!i.isCollectionGroupQuery(), "CollectionGroup queries should be handled in LocalDocumentsView");
          var a = Xi(),
              s = i.path.length + 1,
              e = i.path.toArray(),
              n = IDBKeyRange.lowerBound(e);
          return Uo(t).iterate({
            range: n
          }, function (t, e, n) {
            if (t.length === s) {
              var r = o.serializer.fromDbRemoteDocument(e);
              i.path.isPrefixOf(r.key.path) ? r instanceof Mo && i.matches(r) && (a = a.insert(r.key, r)) : n.done();
            }
          }).next(function () {
            return a;
          });
        }, t.prototype.getNewDocumentChanges = function (e) {
          var r = this;
          Or(this.keepDocumentChangeLog, "Can only call getNewDocumentChanges() when document change log is enabled");
          var n = to(),
              i = zi(),
              t = IDBKeyRange.lowerBound(this._lastProcessedDocumentChangeId + 1),
              o = !0,
              a = Bo(e);
          return a.iterate({
            range: t
          }, function (t, e) {
            if (o && (o = !1, r._lastProcessedDocumentChangeId + 1 !== e.id)) return r.synchronizeLastDocumentChangeId(a).next(function () {
              return oo.reject(new xr(Lr.DATA_LOSS, xo));
            });
            n = n.unionWith(r.serializer.fromDbResourcePaths(e.changes)), r._lastProcessedDocumentChangeId = e.id;
          }).next(function () {
            var t = [];
            return n.forEach(function (n) {
              t.push(r.getEntry(e, n).next(function (t) {
                var e = t || new Oo(n, Vi.forDeletedDoc());
                i = i.insert(n, e);
              }));
            }), oo.waitFor(t);
          }).next(function () {
            return i;
          });
        }, t.prototype.removeDocumentChangesThroughChangeId = function (t, e) {
          var n = IDBKeyRange.upperBound(e);
          return Bo(t).delete(n);
        }, t.prototype.synchronizeLastDocumentChangeId = function (t) {
          var r = this;
          return this._lastProcessedDocumentChangeId = 0, t.iterate({
            keysOnly: !0,
            reverse: !0
          }, function (t, e, n) {
            r._lastProcessedDocumentChangeId = t, n.done();
          });
        }, t.prototype.newChangeBuffer = function () {
          return new Vo(this);
        }, t.prototype.getSize = function (t) {
          return this.getMetadata(t).next(function (t) {
            return t.byteSize;
          });
        }, t.prototype.getMetadata = function (t) {
          return Fo(t).get(na.key).next(function (t) {
            return Or(!!t, "Missing document cache metadata"), t;
          });
        }, t.prototype.setMetadata = function (t, e) {
          return Fo(t).put(na.key, e);
        }, t.prototype.updateSize = function (e, n) {
          var r = this;
          return this.getMetadata(e).next(function (t) {
            return t.byteSize += n, r.setMetadata(e, t);
          });
        }, t;
      }();

      function Fo(t) {
        return Na.getStore(t, na.store);
      }

      var Vo = function (n) {
        function t(t) {
          var e = n.call(this) || this;
          return e.documentCache = t, e;
        }

        return s(t, n), t.prototype.applyChanges = function (t) {
          var o = this,
              e = this.assertChanges(),
              a = 0,
              s = [];
          return e.forEach(function (t, e) {
            var n = o.documentCache.serializer.toDbRemoteDocument(e),
                r = o.documentSizes.get(t);
            Or(void 0 !== r, "Attempting to change document " + t.toString() + " without having read it first");
            var i = Ko(n);
            a += i - r, s.push({
              key: t,
              doc: n
            });
          }), this.documentCache.addEntries(t, s, a);
        }, t.prototype.getFromCache = function (t, e) {
          return this.documentCache.getSizedEntry(t, e);
        }, t.prototype.getAllFromCache = function (t, e) {
          return this.documentCache.getSizedEntries(t, e);
        }, t;
      }(Lo);

      function Uo(t) {
        return Na.getStore(t, ea.store);
      }

      function Bo(t) {
        return Na.getStore(t, ua.store);
      }

      function Qo(t) {
        return t.path.toArray();
      }

      function Ko(t) {
        var e;
        if (t.document) e = t.document;else if (t.unknownDocument) e = t.unknownDocument;else {
          if (!t.noDocument) throw Mr("Unknown remote document type");
          e = t.noDocument;
        }
        return JSON.stringify(e).length;
      }

      var jo = function () {
        function t() {
          this.collectionParentIndex = new Go();
        }

        return t.prototype.addToCollectionParentIndex = function (t, e) {
          return this.collectionParentIndex.add(e), oo.resolve();
        }, t.prototype.getCollectionParents = function (t, e) {
          return oo.resolve(this.collectionParentIndex.getEntries(e));
        }, t;
      }(),
          Go = function () {
        function t() {
          this.index = {};
        }

        return t.prototype.add = function (t) {
          Or(t.length % 2 == 1, "Expected a collection path.");
          var e = t.lastSegment(),
              n = t.popLast(),
              r = this.index[e] || new ji(Ti.comparator),
              i = !r.has(n);
          return this.index[e] = r.add(n), i;
        }, t.prototype.getEntries = function (t) {
          return (this.index[t] || new ji(Ti.comparator)).toArray();
        }, t;
      }(),
          Wo = 8,
          zo = function () {
        function t(t) {
          this.serializer = t;
        }

        return t.prototype.createOrUpgrade = function (t, n, e, r) {
          var i,
              o = this;
          Or(e < r && 0 <= e && r <= Wo, "Unexpected schema upgrade from v" + e + " to v{toVersion}."), e < 1 && 1 <= r && (t.createObjectStore(Yo.store), (i = t).createObjectStore(Xo.store, {
            keyPath: Xo.keyPath
          }), i.createObjectStore(Jo.store, {
            keyPath: Jo.keyPath,
            autoIncrement: !0
          }).createIndex(Jo.userMutationsIndex, Jo.userMutationsKeyPath, {
            unique: !0
          }), i.createObjectStore($o.store), sa(t), t.createObjectStore(ea.store));
          var a,
              s = oo.resolve();
          return e < 3 && 3 <= r && (0 !== e && ((a = t).deleteObjectStore(ia.store), a.deleteObjectStore(ra.store), a.deleteObjectStore(oa.store), sa(t)), s = s.next(function () {
            return t = n.store(oa.store), e = new oa(0, 0, Vi.MIN.toTimestamp(), 0), t.put(oa.key, e);
            var t, e;
          })), e < 4 && 4 <= r && (0 !== e && (s = s.next(function () {
            return i = t, (o = n).store(Jo.store).loadAll().next(function (t) {
              i.deleteObjectStore(Jo.store);
              var e = i.createObjectStore(Jo.store, {
                keyPath: Jo.keyPath,
                autoIncrement: !0
              });
              e.createIndex(Jo.userMutationsIndex, Jo.userMutationsKeyPath, {
                unique: !0
              });
              var n = o.store(Jo.store),
                  r = t.map(function (t) {
                return n.put(t);
              });
              return oo.waitFor(r);
            });
            var i, o;
          })), s = s.next(function () {
            t.createObjectStore(ca.store, {
              keyPath: ca.keyPath
            }), t.createObjectStore(ua.store, {
              keyPath: "id",
              autoIncrement: !0
            });
          })), e < 5 && 5 <= r && (s = s.next(function () {
            return o.removeAcknowledgedMutations(n);
          })), e < 6 && 6 <= r && (s = s.next(function () {
            return t.createObjectStore(na.store), o.addDocumentGlobal(n);
          })), e < 7 && 7 <= r && (s = s.next(function () {
            return o.ensureSequenceNumbers(n);
          })), e < 8 && 8 <= r && (s = s.next(function () {
            return o.createCollectionParentIndex(t, n);
          })), s;
        }, t.prototype.addDocumentGlobal = function (e) {
          var n = 0;
          return e.store(ea.store).iterate(function (t, e) {
            n += Ko(e);
          }).next(function () {
            var t = new na(n);
            return e.store(na.store).put(na.key, t);
          });
        }, t.prototype.removeAcknowledgedMutations = function (r) {
          var i = this,
              t = r.store(Xo.store),
              e = r.store(Jo.store);
          return t.loadAll().next(function (t) {
            return oo.forEach(t, function (n) {
              var t = IDBKeyRange.bound([n.userId, -1], [n.userId, n.lastAcknowledgedBatchId]);
              return e.loadAll(Jo.userMutationsIndex, t).next(function (t) {
                return oo.forEach(t, function (t) {
                  Or(t.userId === n.userId, "Cannot process batch " + t.batchId + " from unexpected user");
                  var e = i.serializer.fromDbMutationBatch(t);
                  return uo(r, n.userId, e).next(function () {});
                });
              });
            });
          });
        }, t.prototype.ensureSequenceNumbers = function (t) {
          var a = t.store(ia.store),
              e = t.store(ea.store);
          return Ao(t).next(function (i) {
            var o = [];
            return e.iterate(function (t, e) {
              var n = new Ti(t),
                  r = [0, Pi(n)];
              o.push(a.get(r).next(function (t) {
                return t ? oo.resolve() : (e = n, a.put(new ia(0, Pi(e), i)));
                var e;
              }));
            }).next(function () {
              return oo.waitFor(o);
            });
          });
        }, t.prototype.createCollectionParentIndex = function (t, e) {
          t.createObjectStore(aa.store, {
            keyPath: aa.keyPath
          });

          var r = e.store(aa.store),
              i = new Go(),
              o = function o(t) {
            if (i.add(t)) {
              var e = t.lastSegment(),
                  n = t.popLast();
              return r.put({
                collectionId: e,
                parent: Pi(n)
              });
            }
          };

          return e.store(ea.store).iterate({
            keysOnly: !0
          }, function (t, e) {
            var n = new Ti(t);
            return o(n.popLast());
          }).next(function () {
            return e.store($o.store).iterate({
              keysOnly: !0
            }, function (t, e) {
              t[0];
              var n = t[1],
                  r = (t[2], qi(n));
              return o(r.popLast());
            });
          });
        }, t;
      }();

      var Ho = function Ho(t, e) {
        this.seconds = t, this.nanoseconds = e;
      },
          Yo = function () {
        function t(t, e, n) {
          this.ownerId = t, this.allowTabSynchronization = e, this.leaseTimestampMs = n;
        }

        return t.store = "owner", t.key = "owner", t;
      }();

      var Xo = function () {
        function t(t, e, n) {
          this.userId = t, this.lastAcknowledgedBatchId = e, this.lastStreamToken = n;
        }

        return t.store = "mutationQueues", t.keyPath = "userId", t;
      }(),
          Jo = function () {
        function t(t, e, n, r, i) {
          this.userId = t, this.batchId = e, this.localWriteTimeMs = n, this.baseMutations = r, this.mutations = i;
        }

        return t.store = "mutations", t.keyPath = "batchId", t.userMutationsIndex = "userMutationsIndex", t.userMutationsKeyPath = ["userId", "batchId"], t;
      }();

      var $o = function () {
        function t() {}

        return t.prefixForUser = function (t) {
          return [t];
        }, t.prefixForPath = function (t, e) {
          return [t, Pi(e)];
        }, t.key = function (t, e, n) {
          return [t, Pi(e), n];
        }, t.store = "documentMutations", t.PLACEHOLDER = new t(), t;
      }();

      var Zo = function Zo(t, e) {
        this.path = t, this.readTime = e;
      },
          ta = function ta(t, e) {
        this.path = t, this.version = e;
      },
          ea = function () {
        function t(t, e, n, r) {
          this.unknownDocument = t, this.noDocument = e, this.document = n, this.hasCommittedMutations = r;
        }

        return t.store = "remoteDocuments", t;
      }(),
          na = function () {
        function t(t) {
          this.byteSize = t;
        }

        return t.store = "remoteDocumentGlobal", t.key = "remoteDocumentGlobalKey", t;
      }();

      var ra = function () {
        function t(t, e, n, r, i, o) {
          this.targetId = t, this.canonicalId = e, this.readTime = n, this.resumeToken = r, this.lastListenSequenceNumber = i, this.query = o;
        }

        return t.store = "targets", t.keyPath = "targetId", t.queryTargetsIndexName = "queryTargetsIndex", t.queryTargetsKeyPath = ["canonicalId", "targetId"], t;
      }(),
          ia = function () {
        function t(t, e, n) {
          this.targetId = t, this.path = e, Or(0 === t == (void 0 !== (this.sequenceNumber = n)), "A target-document row must either have targetId == 0 and a defined sequence number, or a non-zero targetId and no sequence number");
        }

        return t.store = "targetDocuments", t.keyPath = ["targetId", "path"], t.documentTargetsIndex = "documentTargetsIndex", t.documentTargetsKeyPath = ["path", "targetId"], t;
      }(),
          oa = function () {
        function t(t, e, n, r) {
          this.highestTargetId = t, this.highestListenSequenceNumber = e, this.lastRemoteSnapshotVersion = n, this.targetCount = r;
        }

        return t.key = "targetGlobalKey", t.store = "targetGlobal", t;
      }(),
          aa = function () {
        function t(t, e) {
          this.collectionId = t, this.parent = e;
        }

        return t.store = "collectionParents", t.keyPath = ["collectionId", "parent"], t;
      }();

      function sa(t) {
        t.createObjectStore(ia.store, {
          keyPath: ia.keyPath
        }).createIndex(ia.documentTargetsIndex, ia.documentTargetsKeyPath, {
          unique: !0
        }), t.createObjectStore(ra.store, {
          keyPath: ra.keyPath
        }).createIndex(ra.queryTargetsIndexName, ra.queryTargetsKeyPath, {
          unique: !0
        }), t.createObjectStore(oa.store);
      }

      var ua = function () {
        function t(t) {
          this.changes = t;
        }

        return t.store = "remoteDocumentChanges", t.keyPath = "id", t;
      }();

      var ca = function () {
        function t(t, e, n, r, i) {
          this.clientId = t, this.updateTimeMs = e, this.networkEnabled = n, this.inForeground = r, this.lastProcessedDocumentChangeId = i;
        }

        return t.store = "clientMetadata", t.keyPath = "clientId", t;
      }();

      var ha,
          la,
          fa = [Xo.store, Jo.store, $o.store, ea.store, ra.store, Yo.store, oa.store, ia.store].concat([ca.store, ua.store]).concat([na.store]).concat([aa.store]),
          pa = function () {
        function t() {
          this.collectionParentsCache = new Go();
        }

        return t.prototype.addToCollectionParentIndex = function (t, e) {
          if (Or(e.length % 2 == 1, "Expected a collection path."), this.collectionParentsCache.add(e)) {
            Or(1 <= e.length, "Invalid collection path.");
            var n = e.lastSegment(),
                r = e.popLast();
            return da(t).put({
              collectionId: n,
              parent: Pi(r)
            });
          }

          return oo.resolve();
        }, t.prototype.getCollectionParents = function (t, i) {
          var o = [],
              e = IDBKeyRange.bound([i, ""], [hi(i), ""], !1, !0);
          return da(t).loadAll(e).next(function (t) {
            for (var e = 0, n = t; e < n.length; e++) {
              var r = n[e];
              if (r.collectionId !== i) break;
              o.push(qi(r.parent));
            }

            return o;
          });
        }, t;
      }();

      function da(t) {
        return Na.getStore(t, aa.store);
      }

      (la = ha || (ha = {}))[la.Listen = 0] = "Listen", la[la.ExistenceFilterMismatch = 1] = "ExistenceFilterMismatch", la[la.LimboResolution = 2] = "LimboResolution";

      var ma = function () {
        function e(t, e, n, r, i, o) {
          void 0 === i && (i = Vi.MIN), void 0 === o && (o = Pr()), this.query = t, this.targetId = e, this.purpose = n, this.sequenceNumber = r, this.snapshotVersion = i, this.resumeToken = o;
        }

        return e.prototype.copy = function (t) {
          return new e(this.query, this.targetId, this.purpose, void 0 === t.sequenceNumber ? this.sequenceNumber : t.sequenceNumber, void 0 === t.snapshotVersion ? this.snapshotVersion : t.snapshotVersion, void 0 === t.resumeToken ? this.resumeToken : t.resumeToken);
        }, e.prototype.isEqual = function (t) {
          return this.targetId === t.targetId && this.purpose === t.purpose && this.sequenceNumber === t.sequenceNumber && this.snapshotVersion.isEqual(t.snapshotVersion) && this.resumeToken === t.resumeToken && this.query.isEqual(t.query);
        }, e;
      }(),
          ya = function () {
        function t(t) {
          this.remoteSerializer = t;
        }

        return t.prototype.fromDbRemoteDocument = function (t) {
          if (t.document) return this.remoteSerializer.fromDocument(t.document, !!t.hasCommittedMutations);

          if (t.noDocument) {
            var e = Di.fromSegments(t.noDocument.path),
                n = this.fromDbTimestamp(t.noDocument.readTime);
            return new Oo(e, n, {
              hasCommittedMutations: !!t.hasCommittedMutations
            });
          }

          if (t.unknownDocument) {
            e = Di.fromSegments(t.unknownDocument.path), n = this.fromDbTimestamp(t.unknownDocument.version);
            return new _o(e, n);
          }

          return Mr("Unexpected DbRemoteDocument");
        }, t.prototype.toDbRemoteDocument = function (t) {
          if (t instanceof Mo) {
            var e = t.proto ? t.proto : this.remoteSerializer.toDocument(t),
                n = t.hasCommittedMutations;
            return new ea(null, null, e, n);
          }

          if (t instanceof Oo) {
            var r = t.key.path.toArray(),
                i = this.toDbTimestamp(t.version);
            n = t.hasCommittedMutations;
            return new ea(null, new Zo(r, i), null, n);
          }

          if (t instanceof _o) {
            r = t.key.path.toArray(), i = this.toDbTimestamp(t.version);
            return new ea(new ta(r, i), null, null, !0);
          }

          return Mr("Unexpected MaybeDocumment");
        }, t.prototype.toDbTimestamp = function (t) {
          var e = t.toTimestamp();
          return new Ho(e.seconds, e.nanoseconds);
        }, t.prototype.fromDbTimestamp = function (t) {
          var e = new Fi(t.seconds, t.nanoseconds);
          return Vi.fromTimestamp(e);
        }, t.prototype.toDbMutationBatch = function (t, e) {
          var n = this,
              r = e.baseMutations.map(function (t) {
            return n.remoteSerializer.toMutation(t);
          }),
              i = e.mutations.map(function (t) {
            return n.remoteSerializer.toMutation(t);
          });
          return new Jo(t, e.batchId, e.localWriteTime.toMillis(), r, i);
        }, t.prototype.fromDbMutationBatch = function (t) {
          var e = this,
              n = (t.baseMutations || []).map(function (t) {
            return e.remoteSerializer.fromMutation(t);
          }),
              r = t.mutations.map(function (t) {
            return e.remoteSerializer.fromMutation(t);
          }),
              i = Fi.fromMillis(t.localWriteTimeMs);
          return new ro(t.batchId, i, n, r);
        }, t.prototype.toDbResourcePaths = function (t) {
          var e = [];
          return t.forEach(function (t) {
            e.push(Pi(t.path));
          }), e;
        }, t.prototype.fromDbResourcePaths = function (t) {
          for (var e = to(), n = 0, r = t; n < r.length; n++) {
            var i = r[n];
            e = e.add(new Di(qi(i)));
          }

          return e;
        }, t.prototype.fromDbTarget = function (t) {
          var e,
              n = this.fromDbTimestamp(t.readTime);
          return e = void 0 !== t.query.documents ? this.remoteSerializer.fromDocumentsTarget(t.query) : this.remoteSerializer.fromQueryTarget(t.query), new ma(e, t.targetId, ha.Listen, t.lastListenSequenceNumber, n, t.resumeToken);
        }, t.prototype.toDbTarget = function (t) {
          Or(ha.Listen === t.purpose, "Only queries with purpose " + ha.Listen + " may be stored, got " + t.purpose);
          var e,
              n,
              r = this.toDbTimestamp(t.snapshotVersion);
          return e = t.query.isDocumentQuery() ? this.remoteSerializer.toDocumentsTarget(t.query) : this.remoteSerializer.toQueryTarget(t.query), n = t.resumeToken instanceof Uint8Array ? (Or("YES" === process.env.USE_MOCK_PERSISTENCE, "Persisting non-string stream tokens is only supported with mock persistence ."), t.resumeToken.toString()) : t.resumeToken, new ra(t.targetId, t.query.canonicalId(), r, n, t.sequenceNumber, e);
        }, t;
      }();

      function ga(t, e) {
        var n = t[0],
            r = t[1],
            i = e[0],
            o = e[1],
            a = ui(n, i);
        return 0 === a ? ui(r, o) : a;
      }

      var va = function () {
        function t(t) {
          this.maxElements = t, this.buffer = new ji(ga), this.previousIndex = 0;
        }

        return t.prototype.nextIndex = function () {
          return ++this.previousIndex;
        }, t.prototype.addElement = function (t) {
          var e = [t, this.nextIndex()];
          if (this.buffer.size < this.maxElements) this.buffer = this.buffer.add(e);else {
            var n = this.buffer.last();
            ga(e, n) < 0 && (this.buffer = this.buffer.delete(n).add(e));
          }
        }, Object.defineProperty(t.prototype, "maxValue", {
          get: function get() {
            return this.buffer.last()[0];
          },
          enumerable: !0,
          configurable: !0
        }), t;
      }(),
          ba = {
        didRun: !1,
        sequenceNumbersCollected: 0,
        targetsRemoved: 0,
        documentsRemoved: 0
      },
          wa = function () {
        function e(t, e, n) {
          this.cacheSizeCollectionThreshold = t, this.percentileToCollect = e, this.maximumSequenceNumbersToCollect = n;
        }

        return e.withCacheSize = function (t) {
          return new e(t, e.DEFAULT_COLLECTION_PERCENTILE, e.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT);
        }, e.COLLECTION_DISABLED = -1, e.MINIMUM_CACHE_SIZE_BYTES = 1048576, e.DEFAULT = new e(e.DEFAULT_CACHE_SIZE_BYTES = 41943040, e.DEFAULT_COLLECTION_PERCENTILE = 10, e.DEFAULT_MAX_SEQUENCE_NUMBERS_TO_COLLECT = 1e3), e.DISABLED = new e(e.COLLECTION_DISABLED, 0, 0), e;
      }(),
          Ea = function () {
        function t(t, e, n) {
          this.garbageCollector = t, this.asyncQueue = e, this.localStore = n, this.gcTask = null;
        }

        return t.prototype.start = function () {
          Or(null === this.gcTask, "Cannot start an already started LruScheduler"), this.garbageCollector.params.cacheSizeCollectionThreshold !== wa.COLLECTION_DISABLED && this.scheduleGC();
        }, t.prototype.stop = function () {
          this.gcTask && (this.gcTask.cancel(), this.gcTask = null);
        }, Object.defineProperty(t.prototype, "started", {
          get: function get() {
            return null !== this.gcTask;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.scheduleGC = function () {
          var t = this;
          Or(null === this.gcTask, "Cannot schedule GC while a task is pending");
          var e = this.hasRun ? 3e5 : 6e4;
          Ar("LruGarbageCollector", "Garbage collection scheduled in " + e + "ms"), this.gcTask = this.asyncQueue.enqueueAfterDelay(pi.LruGarbageCollection, e, function () {
            return t.gcTask = null, t.hasRun = !0, t.localStore.collectGarbage(t.garbageCollector).then(function () {
              return t.scheduleGC();
            }).catch(Aa);
          });
        }, t;
      }(),
          Sa = function () {
        function t(t, e) {
          this.delegate = t, this.params = e;
        }

        return t.prototype.calculateTargetCount = function (t, e) {
          return this.delegate.getSequenceNumberCount(t).next(function (t) {
            return Math.floor(e / 100 * t);
          });
        }, t.prototype.nthSequenceNumber = function (t, e) {
          var n = this;
          if (0 === e) return oo.resolve(wi.INVALID);
          var r = new va(e);
          return this.delegate.forEachTarget(t, function (t) {
            return r.addElement(t.sequenceNumber);
          }).next(function () {
            return n.delegate.forEachOrphanedDocumentSequenceNumber(t, function (t) {
              return r.addElement(t);
            });
          }).next(function () {
            return r.maxValue;
          });
        }, t.prototype.removeTargets = function (t, e, n) {
          return this.delegate.removeTargets(t, e, n);
        }, t.prototype.removeOrphanedDocuments = function (t, e) {
          return this.delegate.removeOrphanedDocuments(t, e);
        }, t.prototype.collect = function (e, n) {
          var r = this;
          return this.params.cacheSizeCollectionThreshold === wa.COLLECTION_DISABLED ? (Ar("LruGarbageCollector", "Garbage collection skipped; disabled"), oo.resolve(ba)) : this.getCacheSize(e).next(function (t) {
            return t < r.params.cacheSizeCollectionThreshold ? (Ar("LruGarbageCollector", "Garbage collection skipped; Cache size " + t + " is lower than threshold " + r.params.cacheSizeCollectionThreshold), ba) : r.runGarbageCollection(e, n);
          });
        }, t.prototype.getCacheSize = function (t) {
          return this.delegate.getCacheSize(t);
        }, t.prototype.runGarbageCollection = function (e, n) {
          var r,
              i,
              o,
              a,
              s,
              u,
              c,
              h,
              l = this;
          return a = Date.now(), this.calculateTargetCount(e, this.params.percentileToCollect).next(function (t) {
            return i = t > l.params.maximumSequenceNumbersToCollect ? (Ar("LruGarbageCollector", "Capping sequence numbers to collect down to the maximum of " + l.params.maximumSequenceNumbersToCollect + " from " + t), l.params.maximumSequenceNumbersToCollect) : t, s = Date.now(), l.nthSequenceNumber(e, i);
          }).next(function (t) {
            return r = t, u = Date.now(), l.removeTargets(e, r, n);
          }).next(function (t) {
            return o = t, c = Date.now(), l.removeOrphanedDocuments(e, r);
          }).next(function (t) {
            (h = Date.now(), Dr() <= yr.DEBUG) && Ar("LruGarbageCollector", "LRU Garbage Collection\n\tCounted targets in " + (s - a) + "ms\n\tDetermined least recently used " + i + " in " + (u - s) + "ms\n\tRemoved " + o + " targets in " + (c - u) + "ms\n\tRemoved " + t + " documents in " + (h - c) + "ms\nTotal Duration: " + (h - a) + "ms");
            return oo.resolve({
              didRun: !0,
              sequenceNumbersCollected: i,
              targetsRemoved: o,
              documentsRemoved: t
            });
          });
        }, t;
      }(),
          Ta = "IndexedDbPersistence",
          Ia = "The current tab is not in the required state to perform this operation. It might be necessary to refresh the browser tab.",
          Ca = "Another tab has exclusive access to the persistence layer. To allow shared access, make sure to invoke `enablePersistence()` with `synchronizeTabs:true` in all tabs.",
          Da = function (r) {
        function t(t, e) {
          var n = r.call(this) || this;
          return n.simpleDbTransaction = t, n.currentSequenceNumber = e, n;
        }

        return s(t, r), t;
      }(function () {}),
          Na = function () {
        function c(t, e, n, r, i, o, a) {
          if (this.persistenceKey = t, this.clientId = e, this.queue = r, this.multiClientParams = a, this._started = !1, this.isPrimary = !1, this.networkEnabled = !0, this.inForeground = !1, this.lastGarbageCollectionTime = Number.NEGATIVE_INFINITY, this.primaryStateListener = function (t) {
            return Promise.resolve();
          }, !c.isAvailable()) throw new xr(Lr.UNIMPLEMENTED, "This platform is either missing IndexedDB or is known to have an incomplete implementation. Offline persistence has been disabled.");
          if (this.referenceDelegate = new La(this, o), this.dbName = t + c.MAIN_DATABASE, this.serializer = new ya(i), this.document = n.document, this.allowTabSynchronization = void 0 !== a, this.queryCache = new Co(this.referenceDelegate, this.serializer), this.indexManager = new pa(), this.remoteDocumentCache = new qo(this.serializer, this.indexManager, this.allowTabSynchronization), !n.window || !n.window.localStorage) throw new xr(Lr.UNIMPLEMENTED, "IndexedDB persistence is only available on platforms that support LocalStorage.");
          this.window = n.window, this.webStorage = this.window.localStorage;
        }

        return c.getStore = function (t, e) {
          if (t instanceof Da) return vo.getStore(t.simpleDbTransaction, e);
          throw Mr("IndexedDbPersistence must use instances of IndexedDbTransaction");
        }, c.createIndexedDbPersistence = function (n, r, i, o, a, s) {
          return h(this, void 0, void 0, function () {
            var e;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return [4, (e = new c(n, r, i, o, a, s)).start()];

                case 1:
                  return t.sent(), [2, e];
              }
            });
          });
        }, c.createMultiClientIndexedDbPersistence = function (n, r, i, o, a, s, u) {
          return h(this, void 0, void 0, function () {
            var e;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return [4, (e = new c(n, r, i, o, a, s, u)).start()];

                case 1:
                  return t.sent(), [2, e];
              }
            });
          });
        }, c.prototype.start = function () {
          var n = this;
          return Or(!this.started, "IndexedDbPersistence double-started!"), Or(null !== this.window, "Expected 'window' to be defined"), vo.openOrCreate(this.dbName, Wo, new zo(this.serializer)).then(function (t) {
            return n.simpleDb = t, n.updateClientMetadataAndTryBecomePrimary();
          }).then(function () {
            return n.attachVisibilityHandler(), n.attachWindowUnloadHook(), n.scheduleClientMetadataAndPrimaryLeaseRefreshes(), n.startRemoteDocumentCache();
          }).then(function () {
            return n.simpleDb.runTransaction("readonly", [oa.store], function (t) {
              return Ao(t).next(function (t) {
                var e = n.multiClientParams ? n.multiClientParams.sequenceNumberSyncer : void 0;
                n.listenSequence = new wi(t, e);
              });
            });
          }).then(function () {
            n._started = !0;
          }).catch(function (t) {
            return n.simpleDb && n.simpleDb.close(), Promise.reject(t);
          });
        }, c.prototype.startRemoteDocumentCache = function () {
          var e = this;
          return this.simpleDb.runTransaction("readonly", fa, function (t) {
            return e.remoteDocumentCache.start(t);
          });
        }, c.prototype.setPrimaryStateListener = function (n) {
          var t = this;
          return this.primaryStateListener = function (e) {
            return h(t, void 0, void 0, function () {
              return p(this, function (t) {
                return this.started ? [2, n(e)] : [2];
              });
            });
          }, n(this.isPrimary);
        }, c.prototype.setDatabaseDeletedListener = function (n) {
          var t = this;
          this.simpleDb.setVersionChangeListener(function (e) {
            return h(t, void 0, void 0, function () {
              return p(this, function (t) {
                switch (t.label) {
                  case 0:
                    return null !== e.newVersion ? [3, 2] : [4, n()];

                  case 1:
                    t.sent(), t.label = 2;

                  case 2:
                    return [2];
                }
              });
            });
          });
        }, c.prototype.setNetworkEnabled = function (t) {
          var e = this;
          this.networkEnabled !== t && (this.networkEnabled = t, this.queue.enqueueAndForget(function () {
            return h(e, void 0, void 0, function () {
              return p(this, function (t) {
                switch (t.label) {
                  case 0:
                    return this.started ? [4, this.updateClientMetadataAndTryBecomePrimary()] : [3, 2];

                  case 1:
                    t.sent(), t.label = 2;

                  case 2:
                    return [2];
                }
              });
            });
          }));
        }, c.prototype.updateClientMetadataAndTryBecomePrimary = function () {
          var r = this;
          return this.simpleDb.runTransaction("readwrite", fa, function (n) {
            return Ra(n).put(new ca(r.clientId, Date.now(), r.networkEnabled, r.inForeground, r.remoteDocumentCache.lastProcessedDocumentChangeId)).next(function () {
              if (r.isPrimary) return r.verifyPrimaryLease(n).next(function (t) {
                t || (r.isPrimary = !1, r.queue.enqueueAndForget(function () {
                  return r.primaryStateListener(!1);
                }));
              });
            }).next(function () {
              return r.canActAsPrimary(n);
            }).next(function (t) {
              var e = r.isPrimary;
              return r.isPrimary = t, e !== r.isPrimary && r.queue.enqueueAndForget(function () {
                return r.primaryStateListener(r.isPrimary);
              }), e && !r.isPrimary ? r.releasePrimaryLeaseIfHeld(n) : r.isPrimary ? r.acquireOrExtendPrimaryLease(n) : void 0;
            });
          });
        }, c.prototype.verifyPrimaryLease = function (t) {
          var e = this;
          return ka(t).get(Yo.key).next(function (t) {
            return oo.resolve(e.isLocalClient(t));
          });
        }, c.prototype.removeClientMetadata = function (t) {
          return Ra(t).delete(this.clientId);
        }, c.prototype.maybeGarbageCollectMultiClientState = function () {
          return h(this, void 0, void 0, function () {
            var r,
                i,
                o = this;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return !this.isPrimary || this.isWithinAge(this.lastGarbageCollectionTime, 18e5) ? [3, 2] : (this.lastGarbageCollectionTime = Date.now(), i = [], [4, this.runTransaction("maybeGarbageCollectMultiClientState", "readwrite-primary", function (n) {
                    var e = c.getStore(n, ca.store);
                    return e.loadAll().next(function (t) {
                      r = o.filterActiveClients(t, 18e5), i = t.filter(function (t) {
                        return -1 === r.indexOf(t);
                      });
                    }).next(function () {
                      return oo.forEach(i, function (t) {
                        return e.delete(t.clientId);
                      });
                    }).next(function () {
                      if (0 < (r = r.filter(function (t) {
                        return t.clientId !== o.clientId;
                      })).length) {
                        var t = r.map(function (t) {
                          return t.lastProcessedDocumentChangeId || 0;
                        }),
                            e = Math.min.apply(Math, t);
                        return o.remoteDocumentCache.removeDocumentChangesThroughChangeId(n, e);
                      }
                    });
                  })]);

                case 1:
                  t.sent(), i.forEach(function (t) {
                    o.window.localStorage.removeItem(o.zombiedClientLocalStorageKey(t.clientId));
                  }), t.label = 2;

                case 2:
                  return [2];
              }
            });
          });
        }, c.prototype.scheduleClientMetadataAndPrimaryLeaseRefreshes = function () {
          var t = this;
          this.clientMetadataRefresher = this.queue.enqueueAfterDelay(pi.ClientMetadataRefresh, 4e3, function () {
            return t.updateClientMetadataAndTryBecomePrimary().then(function () {
              return t.maybeGarbageCollectMultiClientState();
            }).then(function () {
              return t.scheduleClientMetadataAndPrimaryLeaseRefreshes();
            });
          });
        }, c.prototype.isLocalClient = function (t) {
          return !!t && t.ownerId === this.clientId;
        }, c.prototype.canActAsPrimary = function (e) {
          var i = this;
          return ka(e).get(Yo.key).next(function (t) {
            if (null !== t && i.isWithinAge(t.leaseTimestampMs, 5e3) && !i.isClientZombied(t.ownerId)) {
              if (i.isLocalClient(t) && i.networkEnabled) return !0;

              if (!i.isLocalClient(t)) {
                if (!t.allowTabSynchronization) throw new xr(Lr.FAILED_PRECONDITION, Ca);
                return !1;
              }
            }

            return !(!i.networkEnabled || !i.inForeground) || Ra(e).loadAll().next(function (t) {
              return void 0 === i.filterActiveClients(t, 5e3).find(function (t) {
                if (i.clientId !== t.clientId) {
                  var e = !i.networkEnabled && t.networkEnabled,
                      n = !i.inForeground && t.inForeground,
                      r = i.networkEnabled === t.networkEnabled;
                  if (e || n && r) return !0;
                }

                return !1;
              });
            });
          }).next(function (t) {
            return i.isPrimary !== t && Ar(Ta, "Client " + (t ? "is" : "is not") + " eligible for a primary lease."), t;
          });
        }, c.prototype.shutdown = function () {
          return h(this, void 0, void 0, function () {
            var e = this;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return this._started = !1, this.markClientZombied(), this.clientMetadataRefresher && this.clientMetadataRefresher.cancel(), this.detachVisibilityHandler(), this.detachWindowUnloadHook(), [4, this.simpleDb.runTransaction("readwrite", [Yo.store, ca.store], function (t) {
                    return e.releasePrimaryLeaseIfHeld(t).next(function () {
                      return e.removeClientMetadata(t);
                    });
                  })];

                case 1:
                  return t.sent(), this.simpleDb.close(), this.removeClientZombiedEntry(), [2];
              }
            });
          });
        }, c.prototype.filterActiveClients = function (t, e) {
          var n = this;
          return t.filter(function (t) {
            return n.isWithinAge(t.updateTimeMs, e) && !n.isClientZombied(t.clientId);
          });
        }, c.prototype.getActiveClients = function () {
          var e = this;
          return this.simpleDb.runTransaction("readonly", [ca.store], function (t) {
            return Ra(t).loadAll().next(function (t) {
              return e.filterActiveClients(t, 18e5).map(function (t) {
                return t.clientId;
              });
            });
          });
        }, c.clearPersistence = function (n) {
          return h(this, void 0, void 0, function () {
            var e;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return c.isAvailable() ? (e = n + c.MAIN_DATABASE, [4, vo.delete(e)]) : [2, Promise.resolve()];

                case 1:
                  return t.sent(), [2];
              }
            });
          });
        }, Object.defineProperty(c.prototype, "started", {
          get: function get() {
            return this._started;
          },
          enumerable: !0,
          configurable: !0
        }), c.prototype.getMutationQueue = function (t) {
          return Or(this.started, "Cannot initialize MutationQueue before persistence is started."), ao.forUser(t, this.serializer, this.indexManager, this.referenceDelegate);
        }, c.prototype.getQueryCache = function () {
          return Or(this.started, "Cannot initialize QueryCache before persistence is started."), this.queryCache;
        }, c.prototype.getRemoteDocumentCache = function () {
          return Or(this.started, "Cannot initialize RemoteDocumentCache before persistence is started."), this.remoteDocumentCache;
        }, c.prototype.getIndexManager = function () {
          return Or(this.started, "Cannot initialize IndexManager before persistence is started."), this.indexManager;
        }, c.prototype.runTransaction = function (n, t, r) {
          var i = this;
          return Ar(Ta, "Starting transaction:", n), this.simpleDb.runTransaction("readonly" === t ? "readonly" : "readwrite", fa, function (e) {
            return "readwrite-primary" === t ? i.verifyPrimaryLease(e).next(function (t) {
              if (!t) throw kr("Failed to obtain primary lease for action '" + n + "'."), i.isPrimary = !1, i.queue.enqueueAndForget(function () {
                return i.primaryStateListener(!1);
              }), new xr(Lr.FAILED_PRECONDITION, Ia);
              return r(new Da(e, i.listenSequence.next()));
            }).next(function (t) {
              return i.acquireOrExtendPrimaryLease(e).next(function () {
                return t;
              });
            }) : i.verifyAllowTabSynchronization(e).next(function () {
              return r(new Da(e, i.listenSequence.next()));
            });
          });
        }, c.prototype.verifyAllowTabSynchronization = function (t) {
          var e = this;
          return ka(t).get(Yo.key).next(function (t) {
            if (null !== t && e.isWithinAge(t.leaseTimestampMs, 5e3) && !e.isClientZombied(t.ownerId) && !e.isLocalClient(t) && !t.allowTabSynchronization) throw new xr(Lr.FAILED_PRECONDITION, Ca);
          });
        }, c.prototype.acquireOrExtendPrimaryLease = function (t) {
          var e = new Yo(this.clientId, this.allowTabSynchronization, Date.now());
          return ka(t).put(Yo.key, e);
        }, c.isAvailable = function () {
          return vo.isAvailable();
        }, c.buildStoragePrefix = function (t) {
          var e = t.databaseId.projectId;
          return t.databaseId.isDefaultDatabase || (e += "." + t.databaseId.database), "firestore/" + t.persistenceKey + "/" + e + "/";
        }, c.prototype.releasePrimaryLeaseIfHeld = function (t) {
          var e = this,
              n = ka(t);
          return n.get(Yo.key).next(function (t) {
            return e.isLocalClient(t) ? (Ar(Ta, "Releasing primary lease."), n.delete(Yo.key)) : oo.resolve();
          });
        }, c.prototype.isWithinAge = function (t, e) {
          var n = Date.now();
          return !(t < n - e) && (!(n < t) || (kr("Detected an update time that is in the future: " + t + " > " + n), !1));
        }, c.prototype.attachVisibilityHandler = function () {
          var t = this;
          null !== this.document && "function" == typeof this.document.addEventListener && (this.documentVisibilityHandler = function () {
            t.queue.enqueueAndForget(function () {
              return t.inForeground = "visible" === t.document.visibilityState, t.updateClientMetadataAndTryBecomePrimary();
            });
          }, this.document.addEventListener("visibilitychange", this.documentVisibilityHandler), this.inForeground = "visible" === this.document.visibilityState);
        }, c.prototype.detachVisibilityHandler = function () {
          this.documentVisibilityHandler && (Or(null !== this.document && "function" == typeof this.document.addEventListener, "Expected 'document.addEventListener' to be a function"), this.document.removeEventListener("visibilitychange", this.documentVisibilityHandler), this.documentVisibilityHandler = null);
        }, c.prototype.attachWindowUnloadHook = function () {
          var t = this;
          "function" == typeof this.window.addEventListener && (this.windowUnloadHandler = function () {
            t.markClientZombied(), t.queue.enqueueAndForget(function () {
              return t.shutdown();
            });
          }, this.window.addEventListener("unload", this.windowUnloadHandler));
        }, c.prototype.detachWindowUnloadHook = function () {
          this.windowUnloadHandler && (Or("function" == typeof this.window.removeEventListener, "Expected 'window.removeEventListener' to be a function"), this.window.removeEventListener("unload", this.windowUnloadHandler), this.windowUnloadHandler = null);
        }, c.prototype.isClientZombied = function (t) {
          try {
            var e = null !== this.webStorage.getItem(this.zombiedClientLocalStorageKey(t));
            return Ar(Ta, "Client '" + t + "' " + (e ? "is" : "is not") + " zombied in LocalStorage"), e;
          } catch (t) {
            return kr(Ta, "Failed to get zombied client id.", t), !1;
          }
        }, c.prototype.markClientZombied = function () {
          try {
            this.webStorage.setItem(this.zombiedClientLocalStorageKey(this.clientId), String(Date.now()));
          } catch (t) {
            kr("Failed to set zombie client id.", t);
          }
        }, c.prototype.removeClientZombiedEntry = function () {
          try {
            this.webStorage.removeItem(this.zombiedClientLocalStorageKey(this.clientId));
          } catch (t) {}
        }, c.prototype.zombiedClientLocalStorageKey = function (t) {
          return "firestore_zombie_" + this.persistenceKey + "_" + t;
        }, c.MAIN_DATABASE = "main", c;
      }();

      function Aa(n) {
        return h(this, void 0, void 0, function () {
          return p(this, function (t) {
            if ((e = n).code !== Lr.FAILED_PRECONDITION || e.message !== Ia) throw n;
            var e;
            return Ar(Ta, "Unexpectedly lost primary lease"), [2];
          });
        });
      }

      function ka(t) {
        return t.store(Yo.store);
      }

      function Ra(t) {
        return t.store(ca.store);
      }

      var Ma,
          Oa,
          _a,
          Pa,
          La = function () {
        function t(t, e) {
          this.db = t, this.garbageCollector = new Sa(this, e);
        }

        return t.prototype.getSequenceNumberCount = function (t) {
          var n = this.orphanedDocmentCount(t);
          return this.db.getQueryCache().getQueryCount(t).next(function (e) {
            return n.next(function (t) {
              return e + t;
            });
          });
        }, t.prototype.orphanedDocmentCount = function (t) {
          var e = 0;
          return this.forEachOrphanedDocumentSequenceNumber(t, function (t) {
            e++;
          }).next(function () {
            return e;
          });
        }, t.prototype.forEachTarget = function (t, e) {
          return this.db.getQueryCache().forEachTarget(t, e);
        }, t.prototype.forEachOrphanedDocumentSequenceNumber = function (t, n) {
          return this.forEachOrphanedDocument(t, function (t, e) {
            return n(e);
          });
        }, t.prototype.setInMemoryPins = function (t) {
          this.inMemoryPins = t;
        }, t.prototype.addReference = function (t, e) {
          return xa(t, e);
        }, t.prototype.removeReference = function (t, e) {
          return xa(t, e);
        }, t.prototype.removeTargets = function (t, e, n) {
          return this.db.getQueryCache().removeTargets(t, e, n);
        }, t.prototype.removeMutationReference = function (t, e) {
          return xa(t, e);
        }, t.prototype.isPinned = function (t, e) {
          return this.inMemoryPins.containsKey(e) ? oo.resolve(!0) : (r = e, i = !1, fo(n = t).iterateSerial(function (t) {
            return so(n, t, r).next(function (t) {
              return t && (i = !0), oo.resolve(!t);
            });
          }).next(function () {
            return i;
          }));
          var n, r, i;
        }, t.prototype.removeOrphanedDocuments = function (r, i) {
          var o = this,
              a = 0,
              s = 0,
              u = [];
          return this.forEachOrphanedDocument(r, function (e, t) {
            if (t <= i) {
              var n = o.isPinned(r, e).next(function (t) {
                if (!t) return a++, o.removeOrphanedDocument(r, e).next(function (t) {
                  s += t;
                });
              });
              u.push(n);
            }
          }).next(function () {
            return oo.waitFor(u);
          }).next(function () {
            return o.db.getRemoteDocumentCache().updateSize(r, -s);
          }).next(function () {
            return a;
          });
        }, t.prototype.removeOrphanedDocument = function (t, e) {
          var n,
              r = 0,
              i = this.db.getRemoteDocumentCache();
          return oo.waitFor([ko(t).delete((n = e, [0, Pi(n.path)])), i.removeEntry(t, e).next(function (t) {
            r += t;
          })]).next(function () {
            return r;
          });
        }, t.prototype.removeTarget = function (t, e) {
          var n = e.copy({
            sequenceNumber: t.currentSequenceNumber
          });
          return this.db.getQueryCache().updateQueryData(t, n);
        }, t.prototype.updateLimboDocument = function (t, e) {
          return xa(t, e);
        }, t.prototype.forEachOrphanedDocument = function (t, o) {
          var a,
              e = ko(t),
              s = wi.INVALID;
          return e.iterate({
            index: ia.documentTargetsIndex
          }, function (t, e) {
            var n = t[0],
                r = (t[1], e.path),
                i = e.sequenceNumber;
            0 === n ? (s !== wi.INVALID && o(new Di(qi(a)), s), s = i, a = r) : s = wi.INVALID;
          }).next(function () {
            s !== wi.INVALID && o(new Di(qi(a)), s);
          });
        }, t.prototype.getCacheSize = function (t) {
          return this.db.getRemoteDocumentCache().getSize(t);
        }, t;
      }();

      function xa(t, e) {
        return ko(t).put((n = e, r = t.currentSequenceNumber, new ia(0, Pi(n.path), r)));
        var n, r;
      }

      (Oa = Ma || (Ma = {}))[Oa.NullValue = 0] = "NullValue", Oa[Oa.BooleanValue = 1] = "BooleanValue", Oa[Oa.NumberValue = 2] = "NumberValue", Oa[Oa.TimestampValue = 3] = "TimestampValue", Oa[Oa.StringValue = 4] = "StringValue", Oa[Oa.BlobValue = 5] = "BlobValue", Oa[Oa.RefValue = 6] = "RefValue", Oa[Oa.GeoPointValue = 7] = "GeoPointValue", Oa[Oa.ArrayValue = 8] = "ArrayValue", Oa[Oa.ObjectValue = 9] = "ObjectValue", (Pa = _a || (_a = {}))[Pa.Default = 0] = "Default", Pa[Pa.Estimate = 1] = "Estimate", Pa[Pa.Previous = 2] = "Previous";

      var qa = function () {
        function n(t, e) {
          this.serverTimestampBehavior = t, this.timestampsInSnapshots = e;
        }

        return n.fromSnapshotOptions = function (t, e) {
          switch (t.serverTimestamps) {
            case "estimate":
              return new n(_a.Estimate, e);

            case "previous":
              return new n(_a.Previous, e);

            case "none":
            case void 0:
              return new n(_a.Default, e);

            default:
              return Mr("fromSnapshotOptions() called with invalid options.");
          }
        }, n;
      }(),
          Fa = function () {
        function t() {}

        return t.prototype.toString = function () {
          var t = this.value();
          return null === t ? "null" : t.toString();
        }, t.prototype.defaultCompareTo = function (t) {
          return Or(this.typeOrder !== t.typeOrder, "Default compareTo should not be used for values of same type."), ui(this.typeOrder, t.typeOrder);
        }, t;
      }(),
          Va = function (e) {
        function n() {
          var t = e.call(this) || this;
          return t.typeOrder = Ma.NullValue, t.internalValue = null, t;
        }

        return s(n, e), n.prototype.value = function (t) {
          return null;
        }, n.prototype.isEqual = function (t) {
          return t instanceof n;
        }, n.prototype.compareTo = function (t) {
          return t instanceof n ? 0 : this.defaultCompareTo(t);
        }, n.INSTANCE = new n(), n;
      }(Fa),
          Ua = function (n) {
        function e(t) {
          var e = n.call(this) || this;
          return e.internalValue = t, e.typeOrder = Ma.BooleanValue, e;
        }

        return s(e, n), e.prototype.value = function (t) {
          return this.internalValue;
        }, e.prototype.isEqual = function (t) {
          return t instanceof e && this.internalValue === t.internalValue;
        }, e.prototype.compareTo = function (t) {
          return t instanceof e ? ui(this, t) : this.defaultCompareTo(t);
        }, e.of = function (t) {
          return t ? e.TRUE : e.FALSE;
        }, e.TRUE = new e(!0), e.FALSE = new e(!1), e;
      }(Fa),
          Ba = function (n) {
        function r(t) {
          var e = n.call(this) || this;
          return e.internalValue = t, e.typeOrder = Ma.NumberValue, e;
        }

        return s(r, n), r.prototype.value = function (t) {
          return this.internalValue;
        }, r.prototype.compareTo = function (t) {
          return t instanceof r ? (e = this.internalValue, n = t.internalValue, e < n ? -1 : n < e ? 1 : e === n ? 0 : isNaN(e) ? isNaN(n) ? 0 : -1 : 1) : this.defaultCompareTo(t);
          var e, n;
        }, r;
      }(Fa);

      function Qa(t, e) {
        return t === e ? 0 !== t || 1 / t == 1 / e : t != t && e != e;
      }

      var Ka,
          ja,
          Ga = function (e) {
        function n(t) {
          return e.call(this, t) || this;
        }

        return s(n, e), n.prototype.isEqual = function (t) {
          return t instanceof n && Qa(this.internalValue, t.internalValue);
        }, n;
      }(Ba),
          Wa = function (n) {
        function e(t) {
          var e = n.call(this, t) || this;
          return e.internalValue = t, e;
        }

        return s(e, n), e.prototype.isEqual = function (t) {
          return t instanceof e && Qa(this.internalValue, t.internalValue);
        }, e.NAN = new e(NaN), e.POSITIVE_INFINITY = new e(1 / 0), e.NEGATIVE_INFINITY = new e(-1 / 0), e;
      }(Ba),
          za = function (n) {
        function e(t) {
          var e = n.call(this) || this;
          return e.internalValue = t, e.typeOrder = Ma.StringValue, e;
        }

        return s(e, n), e.prototype.value = function (t) {
          return this.internalValue;
        }, e.prototype.isEqual = function (t) {
          return t instanceof e && this.internalValue === t.internalValue;
        }, e.prototype.compareTo = function (t) {
          return t instanceof e ? ui(this.internalValue, t.internalValue) : this.defaultCompareTo(t);
        }, e;
      }(Fa),
          Ha = function (n) {
        function e(t) {
          var e = n.call(this) || this;
          return e.internalValue = t, e.typeOrder = Ma.TimestampValue, e;
        }

        return s(e, n), e.prototype.value = function (t) {
          return !t || t.timestampsInSnapshots ? this.internalValue : this.internalValue.toDate();
        }, e.prototype.isEqual = function (t) {
          return t instanceof e && this.internalValue.isEqual(t.internalValue);
        }, e.prototype.compareTo = function (t) {
          return t instanceof e ? this.internalValue._compareTo(t.internalValue) : t instanceof Ya ? -1 : this.defaultCompareTo(t);
        }, e;
      }(Fa),
          Ya = function (r) {
        function e(t, e) {
          var n = r.call(this) || this;
          return n.localWriteTime = t, n.previousValue = e, n.typeOrder = Ma.TimestampValue, n;
        }

        return s(e, r), e.prototype.value = function (t) {
          return t && t.serverTimestampBehavior === _a.Estimate ? new Ha(this.localWriteTime).value(t) : t && t.serverTimestampBehavior === _a.Previous && this.previousValue ? this.previousValue.value(t) : null;
        }, e.prototype.isEqual = function (t) {
          return t instanceof e && this.localWriteTime.isEqual(t.localWriteTime);
        }, e.prototype.compareTo = function (t) {
          return t instanceof e ? this.localWriteTime._compareTo(t.localWriteTime) : t instanceof Ha ? 1 : this.defaultCompareTo(t);
        }, e.prototype.toString = function () {
          return "<ServerTimestamp localTime=" + this.localWriteTime.toString() + ">";
        }, e;
      }(Fa),
          Xa = function (n) {
        function e(t) {
          var e = n.call(this) || this;
          return e.internalValue = t, e.typeOrder = Ma.BlobValue, e;
        }

        return s(e, n), e.prototype.value = function (t) {
          return this.internalValue;
        }, e.prototype.isEqual = function (t) {
          return t instanceof e && this.internalValue.isEqual(t.internalValue);
        }, e.prototype.compareTo = function (t) {
          return t instanceof e ? this.internalValue._compareTo(t.internalValue) : this.defaultCompareTo(t);
        }, e;
      }(Fa),
          Ja = function (r) {
        function n(t, e) {
          var n = r.call(this) || this;
          return n.databaseId = t, n.key = e, n.typeOrder = Ma.RefValue, n;
        }

        return s(n, r), n.prototype.value = function (t) {
          return this.key;
        }, n.prototype.isEqual = function (t) {
          return t instanceof n && this.key.isEqual(t.key) && this.databaseId.isEqual(t.databaseId);
        }, n.prototype.compareTo = function (t) {
          if (t instanceof n) {
            var e = this.databaseId.compareTo(t.databaseId);
            return 0 !== e ? e : Di.comparator(this.key, t.key);
          }

          return this.defaultCompareTo(t);
        }, n;
      }(Fa),
          $a = function (n) {
        function e(t) {
          var e = n.call(this) || this;
          return e.internalValue = t, e.typeOrder = Ma.GeoPointValue, e;
        }

        return s(e, n), e.prototype.value = function (t) {
          return this.internalValue;
        }, e.prototype.isEqual = function (t) {
          return t instanceof e && this.internalValue.isEqual(t.internalValue);
        }, e.prototype.compareTo = function (t) {
          return t instanceof e ? this.internalValue._compareTo(t.internalValue) : this.defaultCompareTo(t);
        }, e;
      }(Fa),
          Za = function (n) {
        function a(t) {
          var e = n.call(this) || this;
          return e.internalValue = t, e.typeOrder = Ma.ObjectValue, e;
        }

        return s(a, n), a.prototype.value = function (n) {
          var r = {};
          return this.internalValue.inorderTraversal(function (t, e) {
            r[t] = e.value(n);
          }), r;
        }, a.prototype.forEach = function (t) {
          this.internalValue.inorderTraversal(t);
        }, a.prototype.isEqual = function (t) {
          if (t instanceof a) {
            for (var e = this.internalValue.getIterator(), n = t.internalValue.getIterator(); e.hasNext() && n.hasNext();) {
              var r = e.getNext(),
                  i = n.getNext();
              if (r.key !== i.key || !r.value.isEqual(i.value)) return !1;
            }

            return !e.hasNext() && !n.hasNext();
          }

          return !1;
        }, a.prototype.compareTo = function (t) {
          if (t instanceof a) {
            for (var e = this.internalValue.getIterator(), n = t.internalValue.getIterator(); e.hasNext() && n.hasNext();) {
              var r = e.getNext(),
                  i = n.getNext(),
                  o = ui(r.key, i.key) || r.value.compareTo(i.value);
              if (o) return o;
            }

            return ui(e.hasNext(), n.hasNext());
          }

          return this.defaultCompareTo(t);
        }, a.prototype.set = function (t, e) {
          if (Or(!t.isEmpty(), "Cannot set field for empty path on ObjectValue"), 1 === t.length) return this.setChild(t.firstSegment(), e);
          var n = this.child(t.firstSegment());
          n instanceof a || (n = a.EMPTY);
          var r = n.set(t.popFirst(), e);
          return this.setChild(t.firstSegment(), r);
        }, a.prototype.delete = function (t) {
          if (Or(!t.isEmpty(), "Cannot delete field for empty path on ObjectValue"), 1 === t.length) return new a(this.internalValue.remove(t.firstSegment()));
          var e = this.child(t.firstSegment());

          if (e instanceof a) {
            var n = e.delete(t.popFirst());
            return new a(this.internalValue.insert(t.firstSegment(), n));
          }

          return this;
        }, a.prototype.contains = function (t) {
          return void 0 !== this.field(t);
        }, a.prototype.field = function (t) {
          Or(!t.isEmpty(), "Can't get field of empty path");
          var e = this;
          return t.forEach(function (t) {
            e = e instanceof a && e.internalValue.get(t) || void 0;
          }), e;
        }, a.prototype.toString = function () {
          return this.internalValue.toString();
        }, a.prototype.child = function (t) {
          return this.internalValue.get(t) || void 0;
        }, a.prototype.setChild = function (t, e) {
          return new a(this.internalValue.insert(t, e));
        }, a.EMPTY = new a(new Ui(ui)), a;
      }(Fa),
          ts = function (n) {
        function i(t) {
          var e = n.call(this) || this;
          return e.internalValue = t, e.typeOrder = Ma.ArrayValue, e;
        }

        return s(i, n), i.prototype.value = function (e) {
          return this.internalValue.map(function (t) {
            return t.value(e);
          });
        }, i.prototype.contains = function (t) {
          for (var e = 0, n = this.internalValue; e < n.length; e++) {
            if (n[e].isEqual(t)) return !0;
          }

          return !1;
        }, i.prototype.forEach = function (t) {
          this.internalValue.forEach(t);
        }, i.prototype.isEqual = function (t) {
          if (t instanceof i) {
            if (this.internalValue.length !== t.internalValue.length) return !1;

            for (var e = 0; e < this.internalValue.length; e++) if (!this.internalValue[e].isEqual(t.internalValue[e])) return !1;

            return !0;
          }

          return !1;
        }, i.prototype.compareTo = function (t) {
          if (t instanceof i) {
            for (var e = Math.min(this.internalValue.length, t.internalValue.length), n = 0; n < e; n++) {
              var r = this.internalValue[n].compareTo(t.internalValue[n]);
              if (r) return r;
            }

            return ui(this.internalValue.length, t.internalValue.length);
          }

          return this.defaultCompareTo(t);
        }, i.prototype.toString = function () {
          return "[" + this.internalValue.map(function (t) {
            return t.toString();
          }).join(",") + "]";
        }, i;
      }(Fa),
          es = function () {
        function n(t) {
          this.fields = t;
        }

        return n.fromSet = function (t) {
          return new n(t);
        }, n.fromArray = function (t) {
          var e = new ji(Ci.comparator);
          return t.forEach(function (t) {
            return e = e.add(t);
          }), new n(e);
        }, n.prototype.covers = function (e) {
          var n = !1;
          return this.fields.forEach(function (t) {
            t.isPrefixOf(e) && (n = !0);
          }), n;
        }, n.prototype.applyTo = function (n) {
          var r = Za.EMPTY;
          return this.fields.forEach(function (t) {
            if (t.isEmpty()) return n;
            var e = n.field(t);
            void 0 !== e && (r = r.set(t, e));
          }), r;
        }, n.prototype.isEqual = function (t) {
          return this.fields.isEqual(t.fields);
        }, n;
      }(),
          ns = function () {
        function t(t, e) {
          this.field = t, this.transform = e;
        }

        return Object.defineProperty(t.prototype, "isIdempotent", {
          get: function get() {
            return this.transform.isIdempotent;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.isEqual = function (t) {
          return this.field.isEqual(t.field) && this.transform.isEqual(t.transform);
        }, t;
      }(),
          rs = function rs(t, e) {
        this.version = t, this.transformResults = e;
      };

      (ja = Ka || (Ka = {}))[ja.Set = 0] = "Set", ja[ja.Patch = 1] = "Patch", ja[ja.Transform = 2] = "Transform", ja[ja.Delete = 3] = "Delete";

      var is = function () {
        function e(t, e) {
          this.updateTime = t, this.exists = e, Or(void 0 === t || void 0 === e, 'Precondition can specify "exists" or "updateTime" but not both');
        }

        return e.exists = function (t) {
          return new e(void 0, t);
        }, e.updateTime = function (t) {
          return new e(t);
        }, Object.defineProperty(e.prototype, "isNone", {
          get: function get() {
            return void 0 === this.updateTime && void 0 === this.exists;
          },
          enumerable: !0,
          configurable: !0
        }), e.prototype.isValidFor = function (t) {
          return void 0 !== this.updateTime ? t instanceof Mo && t.version.isEqual(this.updateTime) : void 0 !== this.exists ? this.exists === t instanceof Mo : (Or(this.isNone, "Precondition should be empty"), !0);
        }, e.prototype.isEqual = function (t) {
          return e = this.updateTime, n = t.updateTime, (null != e ? !(!n || !e.isEqual(n)) : e === n) && this.exists === t.exists;
          var e, n;
        }, e.NONE = new e(), e;
      }(),
          os = function () {
        function t() {}

        return t.prototype.verifyKeyMatches = function (t) {
          null != t && Or(t.key.isEqual(this.key), "Can only apply a mutation to a document with the same key");
        }, t.getPostMutationVersion = function (t) {
          return t instanceof Mo ? t.version : Vi.MIN;
        }, t;
      }(),
          as = function (i) {
        function e(t, e, n) {
          var r = i.call(this) || this;
          return r.key = t, r.value = e, r.precondition = n, r.type = Ka.Set, r;
        }

        return s(e, i), e.prototype.applyToRemoteDocument = function (t, e) {
          this.verifyKeyMatches(t), Or(null == e.transformResults, "Transform results received by SetMutation.");
          var n = e.version;
          return new Mo(this.key, n, this.value, {
            hasCommittedMutations: !0
          });
        }, e.prototype.applyToLocalView = function (t, e, n) {
          if (this.verifyKeyMatches(t), !this.precondition.isValidFor(t)) return t;
          var r = os.getPostMutationVersion(t);
          return new Mo(this.key, r, this.value, {
            hasLocalMutations: !0
          });
        }, Object.defineProperty(e.prototype, "isIdempotent", {
          get: function get() {
            return !0;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(e.prototype, "fieldMask", {
          get: function get() {
            return null;
          },
          enumerable: !0,
          configurable: !0
        }), e.prototype.isEqual = function (t) {
          return t instanceof e && this.key.isEqual(t.key) && this.value.isEqual(t.value) && this.precondition.isEqual(t.precondition);
        }, e;
      }(os),
          ss = function (o) {
        function e(t, e, n, r) {
          var i = o.call(this) || this;
          return i.key = t, i.data = e, i.fieldMask = n, i.precondition = r, i.type = Ka.Patch, i;
        }

        return s(e, o), e.prototype.applyToRemoteDocument = function (t, e) {
          if (this.verifyKeyMatches(t), Or(null == e.transformResults, "Transform results received by PatchMutation."), !this.precondition.isValidFor(t)) return new _o(this.key, e.version);
          var n = this.patchDocument(t);
          return new Mo(this.key, e.version, n, {
            hasCommittedMutations: !0
          });
        }, e.prototype.applyToLocalView = function (t, e, n) {
          if (this.verifyKeyMatches(t), !this.precondition.isValidFor(t)) return t;
          var r = os.getPostMutationVersion(t),
              i = this.patchDocument(t);
          return new Mo(this.key, r, i, {
            hasLocalMutations: !0
          });
        }, Object.defineProperty(e.prototype, "isIdempotent", {
          get: function get() {
            return !0;
          },
          enumerable: !0,
          configurable: !0
        }), e.prototype.isEqual = function (t) {
          return t instanceof e && this.key.isEqual(t.key) && this.fieldMask.isEqual(t.fieldMask) && this.precondition.isEqual(t.precondition);
        }, e.prototype.patchDocument = function (t) {
          var e;
          return e = t instanceof Mo ? t.data : Za.EMPTY, this.patchObject(e);
        }, e.prototype.patchObject = function (n) {
          var r = this;
          return this.fieldMask.fields.forEach(function (t) {
            if (!t.isEmpty()) {
              var e = r.data.field(t);
              n = void 0 !== e ? n.set(t, e) : n.delete(t);
            }
          }), n;
        }, e;
      }(os),
          us = function (r) {
        function e(t, e) {
          var n = r.call(this) || this;
          return n.key = t, n.fieldTransforms = e, n.type = Ka.Transform, n.precondition = is.exists(!0), n;
        }

        return s(e, r), e.prototype.applyToRemoteDocument = function (t, e) {
          if (this.verifyKeyMatches(t), Or(null != e.transformResults, "Transform results missing for TransformMutation."), !this.precondition.isValidFor(t)) return new _o(this.key, e.version);
          var n = this.requireDocument(t),
              r = this.serverTransformResults(t, e.transformResults),
              i = e.version,
              o = this.transformObject(n.data, r);
          return new Mo(this.key, i, o, {
            hasCommittedMutations: !0
          });
        }, e.prototype.applyToLocalView = function (t, e, n) {
          if (this.verifyKeyMatches(t), !this.precondition.isValidFor(t)) return t;
          var r = this.requireDocument(t),
              i = this.localTransformResults(n, e),
              o = this.transformObject(r.data, i);
          return new Mo(this.key, r.version, o, {
            hasLocalMutations: !0
          });
        }, Object.defineProperty(e.prototype, "isIdempotent", {
          get: function get() {
            for (var t = 0, e = this.fieldTransforms; t < e.length; t++) {
              if (!e[t].isIdempotent) return !1;
            }

            return !0;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(e.prototype, "fieldMask", {
          get: function get() {
            var e = new ji(Ci.comparator);
            return this.fieldTransforms.forEach(function (t) {
              return e = e.add(t.field);
            }), new es(e);
          },
          enumerable: !0,
          configurable: !0
        }), e.prototype.isEqual = function (t) {
          return t instanceof e && this.key.isEqual(t.key) && ci(this.fieldTransforms, t.fieldTransforms) && this.precondition.isEqual(t.precondition);
        }, e.prototype.requireDocument = function (t) {
          Or(t instanceof Mo, "Unknown MaybeDocument type " + t);
          var e = t;
          return Or(e.key.isEqual(this.key), "Can only transform a document with the same key"), e;
        }, e.prototype.serverTransformResults = function (t, e) {
          var n = [];
          Or(this.fieldTransforms.length === e.length, "server transform result count (" + e.length + ") should match field transform count (" + this.fieldTransforms.length + ")");

          for (var r = 0; r < e.length; r++) {
            var i = this.fieldTransforms[r],
                o = i.transform,
                a = null;
            t instanceof Mo && (a = t.field(i.field) || null), n.push(o.applyToRemoteDocument(a, e[r]));
          }

          return n;
        }, e.prototype.localTransformResults = function (t, e) {
          for (var n = [], r = 0, i = this.fieldTransforms; r < i.length; r++) {
            var o = i[r],
                a = o.transform,
                s = null;
            e instanceof Mo && (s = e.field(o.field) || null), n.push(a.applyToLocalView(s, t));
          }

          return n;
        }, e.prototype.transformObject = function (t, e) {
          Or(e.length === this.fieldTransforms.length, "TransformResults length mismatch.");

          for (var n = 0; n < this.fieldTransforms.length; n++) {
            var r = this.fieldTransforms[n].field;
            t = t.set(r, e[n]);
          }

          return t;
        }, e;
      }(os),
          cs = function (r) {
        function e(t, e) {
          var n = r.call(this) || this;
          return n.key = t, n.precondition = e, n.type = Ka.Delete, n;
        }

        return s(e, r), e.prototype.applyToRemoteDocument = function (t, e) {
          return this.verifyKeyMatches(t), Or(null == e.transformResults, "Transform results received by DeleteMutation."), new Oo(this.key, e.version, {
            hasCommittedMutations: !0
          });
        }, e.prototype.applyToLocalView = function (t, e, n) {
          return this.verifyKeyMatches(t), this.precondition.isValidFor(t) ? (t && Or(t.key.isEqual(this.key), "Can only apply mutation to document with same key"), new Oo(this.key, Vi.forDeletedDoc())) : t;
        }, e.prototype.isEqual = function (t) {
          return t instanceof e && this.key.isEqual(t.key) && this.precondition.isEqual(t.precondition);
        }, Object.defineProperty(e.prototype, "isIdempotent", {
          get: function get() {
            return !0;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(e.prototype, "fieldMask", {
          get: function get() {
            return null;
          },
          enumerable: !0,
          configurable: !0
        }), e;
      }(os),
          hs = function () {
        function t(t, e, n) {
          this.remoteDocumentCache = t, this.mutationQueue = e, this.indexManager = n;
        }

        return t.prototype.getDocument = function (e, n) {
          var r = this;
          return this.mutationQueue.getAllMutationBatchesAffectingDocumentKey(e, n).next(function (t) {
            return r.getDocumentInternal(e, n, t);
          });
        }, t.prototype.getDocumentInternal = function (t, r, i) {
          return this.remoteDocumentCache.getEntry(t, r).next(function (t) {
            for (var e = 0, n = i; e < n.length; e++) {
              t = n[e].applyToLocalView(r, t);
            }

            return t;
          });
        }, t.prototype.applyLocalMutationsToDocuments = function (t, e, i) {
          var o = Hi();
          return e.forEach(function (t, e) {
            for (var n = 0, r = i; n < r.length; n++) {
              e = r[n].applyToLocalView(t, e);
            }

            o = o.insert(t, e);
          }), o;
        }, t.prototype.getDocuments = function (e, t) {
          var n = this;
          return this.remoteDocumentCache.getEntries(e, t).next(function (t) {
            return n.getLocalViewOfDocuments(e, t);
          });
        }, t.prototype.getLocalViewOfDocuments = function (r, i) {
          var o = this;
          return this.mutationQueue.getAllMutationBatchesAffectingDocumentKeys(r, i).next(function (t) {
            var e = o.applyLocalMutationsToDocuments(r, i, t),
                n = zi();
            return e.forEach(function (t, e) {
              e || (e = new Oo(t, Vi.forDeletedDoc())), n = n.insert(t, e);
            }), n;
          });
        }, t.prototype.getDocumentsMatchingQuery = function (t, e) {
          return e.isDocumentQuery() ? this.getDocumentsMatchingDocumentQuery(t, e.path) : e.isCollectionGroupQuery() ? this.getDocumentsMatchingCollectionGroupQuery(t, e) : this.getDocumentsMatchingCollectionQuery(t, e);
        }, t.prototype.getDocumentsMatchingDocumentQuery = function (t, e) {
          return this.getDocument(t, new Di(e)).next(function (t) {
            var e = Xi();
            return t instanceof Mo && (e = e.insert(t.key, t)), e;
          });
        }, t.prototype.getDocumentsMatchingCollectionGroupQuery = function (n, r) {
          var i = this;
          Or(r.path.isEmpty(), "Currently we only support collection group queries at the root.");
          var o = r.collectionGroup,
              a = Xi();
          return this.indexManager.getCollectionParents(n, o).next(function (t) {
            return oo.forEach(t, function (t) {
              var e = r.asCollectionQueryAtPath(t.child(o));
              return i.getDocumentsMatchingCollectionQuery(n, e).next(function (t) {
                t.forEach(function (t, e) {
                  a = a.insert(t, e);
                });
              });
            }).next(function () {
              return a;
            });
          });
        }, t.prototype.getDocumentsMatchingCollectionQuery = function (e, h) {
          var l,
              n = this;
          return this.remoteDocumentCache.getDocumentsMatchingQuery(e, h).next(function (t) {
            return l = t, n.mutationQueue.getAllMutationBatchesAffectingQuery(e, h);
          }).next(function (t) {
            for (var e = 0, n = t; e < n.length; e++) for (var r = n[e], i = 0, o = r.mutations; i < o.length; i++) {
              var a = o[i],
                  s = a.key;

              if (h.path.isImmediateParentOf(s.path)) {
                var u = l.get(s),
                    c = a.applyToLocalView(u, u, r.localWriteTime);
                l = c instanceof Mo ? l.insert(s, c) : l.remove(s);
              }
            }
          }).next(function () {
            return l.forEach(function (t, e) {
              h.matches(e) || (l = l.remove(t));
            }), l;
          });
        }, t;
      }(),
          ls = function () {
        function t() {
          this.refsByKey = new ji(fs.compareByKey), this.refsByTarget = new ji(fs.compareByTargetId);
        }

        return t.prototype.isEmpty = function () {
          return this.refsByKey.isEmpty();
        }, t.prototype.addReference = function (t, e) {
          var n = new fs(t, e);
          this.refsByKey = this.refsByKey.add(n), this.refsByTarget = this.refsByTarget.add(n);
        }, t.prototype.addReferences = function (t, e) {
          var n = this;
          t.forEach(function (t) {
            return n.addReference(t, e);
          });
        }, t.prototype.removeReference = function (t, e) {
          this.removeRef(new fs(t, e));
        }, t.prototype.removeReferences = function (t, e) {
          var n = this;
          t.forEach(function (t) {
            return n.removeReference(t, e);
          });
        }, t.prototype.removeReferencesForId = function (t) {
          var e = this,
              n = Di.EMPTY,
              r = new fs(n, t),
              i = new fs(n, t + 1),
              o = [];
          return this.refsByTarget.forEachInRange([r, i], function (t) {
            e.removeRef(t), o.push(t.key);
          }), o;
        }, t.prototype.removeAllReferences = function () {
          var e = this;
          this.refsByKey.forEach(function (t) {
            return e.removeRef(t);
          });
        }, t.prototype.removeRef = function (t) {
          this.refsByKey = this.refsByKey.delete(t), this.refsByTarget = this.refsByTarget.delete(t);
        }, t.prototype.referencesForId = function (t) {
          var e = Di.EMPTY,
              n = new fs(e, t),
              r = new fs(e, t + 1),
              i = to();
          return this.refsByTarget.forEachInRange([n, r], function (t) {
            i = i.add(t.key);
          }), i;
        }, t.prototype.containsKey = function (t) {
          var e = new fs(t, 0),
              n = this.refsByKey.firstAfterOrEqual(e);
          return null !== n && t.isEqual(n.key);
        }, t;
      }(),
          fs = function () {
        function t(t, e) {
          this.key = t, this.targetOrBatchId = e;
        }

        return t.compareByKey = function (t, e) {
          return Di.comparator(t.key, e.key) || ui(t.targetOrBatchId, e.targetOrBatchId);
        }, t.compareByTargetId = function (t, e) {
          return ui(t.targetOrBatchId, e.targetOrBatchId) || Di.comparator(t.key, e.key);
        }, t;
      }(),
          ps = function () {
        function l(t, e) {
          this.persistence = t, this.localViewReferences = new ls(), this.queryDataByTarget = {}, Or(t.started, "LocalStore was passed an unstarted persistence implementation"), this.persistence.referenceDelegate.setInMemoryPins(this.localViewReferences), this.mutationQueue = t.getMutationQueue(e), this.remoteDocuments = t.getRemoteDocumentCache(), this.queryCache = t.getQueryCache(), this.localDocuments = new hs(this.remoteDocuments, this.mutationQueue, this.persistence.getIndexManager());
        }

        return l.prototype.handleUserChange = function (e) {
          var y = this;
          return this.persistence.runTransaction("Handle user change", "readonly", function (d) {
            var m;
            return y.mutationQueue.getAllMutationBatches(d).next(function (t) {
              return m = t, y.mutationQueue = y.persistence.getMutationQueue(e), y.localDocuments = new hs(y.remoteDocuments, y.mutationQueue, y.persistence.getIndexManager()), y.mutationQueue.getAllMutationBatches(d);
            }).next(function (t) {
              for (var e = [], n = [], r = to(), i = 0, o = m; i < o.length; i++) {
                var a = o[i];
                e.push(a.batchId);

                for (var s = 0, u = a.mutations; s < u.length; s++) {
                  var c = u[s];
                  r = r.add(c.key);
                }
              }

              for (var h = 0, l = t; h < l.length; h++) {
                a = l[h];
                n.push(a.batchId);

                for (var f = 0, p = a.mutations; f < p.length; f++) {
                  c = p[f];
                  r = r.add(c.key);
                }
              }

              return y.localDocuments.getDocuments(d, r).next(function (t) {
                return {
                  affectedDocuments: t,
                  removedBatchIds: e,
                  addedBatchIds: n
                };
              });
            });
          });
        }, l.prototype.localWrite = function (c) {
          var h = this,
              l = Fi.now(),
              t = c.reduce(function (t, e) {
            return t.add(e.key);
          }, to());
          return this.persistence.runTransaction("Locally write mutations", "readwrite", function (u) {
            return h.localDocuments.getDocuments(u, t).next(function (n) {
              for (var t = [], e = 0, r = c; e < r.length; e++) {
                var i = r[e],
                    o = n.get(i.key);

                if (!i.isIdempotent) {
                  var a = i.fieldMask;

                  if (a) {
                    var s = o instanceof Mo ? a.applyTo(o.data) : Za.EMPTY;
                    t.push(new ss(i.key, s, a, is.exists(!0)));
                  }
                }
              }

              return h.mutationQueue.addMutationBatch(u, l, t, c).next(function (t) {
                var e = t.applyToLocalDocumentSet(n);
                return {
                  batchId: t.batchId,
                  changes: e
                };
              });
            });
          });
        }, l.prototype.lookupMutationDocuments = function (t) {
          var n = this;
          return this.persistence.runTransaction("Lookup mutation documents", "readonly", function (e) {
            return n.mutationQueue.lookupMutationKeys(e, t).next(function (t) {
              return t ? n.localDocuments.getDocuments(e, t) : oo.resolve(null);
            });
          });
        }, l.prototype.acknowledgeBatch = function (r) {
          var i = this;
          return this.persistence.runTransaction("Acknowledge batch", "readwrite-primary", function (t) {
            var e = r.batch.keys(),
                n = i.remoteDocuments.newChangeBuffer();
            return i.mutationQueue.acknowledgeBatch(t, r.batch, r.streamToken).next(function () {
              return i.applyWriteToRemoteDocuments(t, r, n);
            }).next(function () {
              return n.apply(t);
            }).next(function () {
              return i.mutationQueue.performConsistencyCheck(t);
            }).next(function () {
              return i.localDocuments.getDocuments(t, e);
            });
          });
        }, l.prototype.rejectBatch = function (t) {
          var r = this;
          return this.persistence.runTransaction("Reject batch", "readwrite-primary", function (e) {
            var n;
            return r.mutationQueue.lookupMutationBatch(e, t).next(function (t) {
              return Or(null !== t, "Attempt to reject nonexistent batch!"), n = t.keys(), r.mutationQueue.removeMutationBatch(e, t);
            }).next(function () {
              return r.mutationQueue.performConsistencyCheck(e);
            }).next(function () {
              return r.localDocuments.getDocuments(e, n);
            });
          });
        }, l.prototype.getLastStreamToken = function () {
          var e = this;
          return this.persistence.runTransaction("Get last stream token", "readonly", function (t) {
            return e.mutationQueue.getLastStreamToken(t);
          });
        }, l.prototype.setLastStreamToken = function (e) {
          var n = this;
          return this.persistence.runTransaction("Set last stream token", "readwrite-primary", function (t) {
            return n.mutationQueue.setLastStreamToken(t, e);
          });
        }, l.prototype.getLastRemoteSnapshotVersion = function () {
          var e = this;
          return this.persistence.runTransaction("Get last remote snapshot version", "readonly", function (t) {
            return e.queryCache.getLastRemoteSnapshotVersion(t);
          });
        }, l.prototype.applyRemoteEvent = function (u) {
          var c = this,
              h = this.remoteDocuments.newChangeBuffer();
          return this.persistence.runTransaction("Apply remote event", "readwrite-primary", function (o) {
            var a = [],
                s = to();
            Ur(u.targetChanges, function (t, e) {
              var n = c.queryDataByTarget[t];

              if (n) {
                e.addedDocuments.forEach(function (t) {
                  s = s.add(t);
                }), e.modifiedDocuments.forEach(function (t) {
                  s = s.add(t);
                }), a.push(c.queryCache.removeMatchingKeys(o, e.removedDocuments, t).next(function () {
                  return c.queryCache.addMatchingKeys(o, e.addedDocuments, t);
                }));
                var r = e.resumeToken;

                if (0 < r.length) {
                  var i = n;
                  n = n.copy({
                    resumeToken: r,
                    snapshotVersion: u.snapshotVersion
                  }), c.queryDataByTarget[t] = n, l.shouldPersistQueryData(i, n, e) && a.push(c.queryCache.updateQueryData(o, n));
                }
              }
            });
            var i = zi(),
                n = to();
            u.documentUpdates.forEach(function (t, e) {
              n = n.add(t);
            }), a.push(h.getEntries(o, n).next(function (r) {
              u.documentUpdates.forEach(function (t, e) {
                var n = r.get(t);
                null == n || e.version.isEqual(Vi.MIN) || s.has(e.key) && !n.hasPendingWrites || 0 <= e.version.compareTo(n.version) ? (h.addEntry(e), i = i.insert(t, e)) : Ar("LocalStore", "Ignoring outdated watch update for ", t, ". Current version:", n.version, " Watch version:", e.version), u.resolvedLimboDocuments.has(t) && a.push(c.persistence.referenceDelegate.updateLimboDocument(o, t));
              });
            }));
            var e = u.snapshotVersion;

            if (!e.isEqual(Vi.MIN)) {
              var t = c.queryCache.getLastRemoteSnapshotVersion(o).next(function (t) {
                return Or(0 <= e.compareTo(t), "Watch stream reverted to previous snapshot?? " + e + " < " + t), c.queryCache.setTargetsMetadata(o, o.currentSequenceNumber, e);
              });
              a.push(t);
            }

            return oo.waitFor(a).next(function () {
              return h.apply(o);
            }).next(function () {
              return c.localDocuments.getLocalViewOfDocuments(o, i);
            });
          });
        }, l.shouldPersistQueryData = function (t, e, n) {
          return 0 !== e.resumeToken.length && (0 === t.resumeToken.length || e.snapshotVersion.toMicroseconds() - t.snapshotVersion.toMicroseconds() >= this.RESUME_TOKEN_MAX_AGE_MICROS || 0 < n.addedDocuments.size + n.modifiedDocuments.size + n.removedDocuments.size);
        }, l.prototype.notifyLocalViewChanges = function (t) {
          var n = this;
          return this.persistence.runTransaction("notifyLocalViewChanges", "readwrite", function (e) {
            return oo.forEach(t, function (t) {
              return n.localViewReferences.addReferences(t.addedKeys, t.targetId), n.localViewReferences.removeReferences(t.removedKeys, t.targetId), oo.forEach(t.removedKeys, function (t) {
                return n.persistence.referenceDelegate.removeReference(e, t);
              });
            });
          });
        }, l.prototype.nextMutationBatch = function (e) {
          var n = this;
          return this.persistence.runTransaction("Get next mutation batch", "readonly", function (t) {
            return void 0 === e && (e = -1), n.mutationQueue.getNextMutationBatchAfterBatchId(t, e);
          });
        }, l.prototype.readDocument = function (e) {
          var n = this;
          return this.persistence.runTransaction("read document", "readonly", function (t) {
            return n.localDocuments.getDocument(t, e);
          });
        }, l.prototype.allocateQuery = function (r) {
          var i = this;
          return this.persistence.runTransaction("Allocate query", "readwrite", function (e) {
            var n;
            return i.queryCache.getQueryData(e, r).next(function (t) {
              return t ? (n = t, oo.resolve()) : i.queryCache.allocateTargetId(e).next(function (t) {
                return n = new ma(r, t, ha.Listen, e.currentSequenceNumber), i.queryCache.addQueryData(e, n);
              });
            }).next(function () {
              return Or(!i.queryDataByTarget[n.targetId], "Tried to allocate an already allocated query: " + r), i.queryDataByTarget[n.targetId] = n;
            });
          });
        }, l.prototype.releaseQuery = function (o, a) {
          var s = this,
              t = a ? "readwrite" : "readwrite-primary";
          return this.persistence.runTransaction("Release query", t, function (i) {
            return s.queryCache.getQueryData(i, o).next(function (t) {
              Or(null != t, "Tried to release nonexistent query: " + o);
              var e = t.targetId,
                  n = s.queryDataByTarget[e],
                  r = s.localViewReferences.removeReferencesForId(e);
              return delete s.queryDataByTarget[e], a ? oo.resolve() : oo.forEach(r, function (t) {
                return s.persistence.referenceDelegate.removeReference(i, t);
              }).next(function () {
                return s.persistence.referenceDelegate.removeTarget(i, n);
              });
            });
          });
        }, l.prototype.executeQuery = function (e) {
          var n = this;
          return this.persistence.runTransaction("Execute query", "readonly", function (t) {
            return n.localDocuments.getDocumentsMatchingQuery(t, e);
          });
        }, l.prototype.remoteDocumentKeys = function (e) {
          var n = this;
          return this.persistence.runTransaction("Remote document keys", "readonly", function (t) {
            return n.queryCache.getMatchingKeysForTargetId(t, e);
          });
        }, l.prototype.getActiveClients = function () {
          return this.persistence.getActiveClients();
        }, l.prototype.removeCachedMutationBatchMetadata = function (t) {
          this.mutationQueue.removeCachedMutationKeys(t);
        }, l.prototype.setNetworkEnabled = function (t) {
          this.persistence.setNetworkEnabled(t);
        }, l.prototype.applyWriteToRemoteDocuments = function (t, i, o) {
          var e = this,
              a = i.batch,
              n = a.keys(),
              s = oo.resolve();
          return n.forEach(function (r) {
            s = s.next(function () {
              return o.getEntry(t, r);
            }).next(function (t) {
              var e = t,
                  n = i.docVersions.get(r);
              Or(null !== n, "ackVersions should contain every doc in the write."), (!e || e.version.compareTo(n) < 0) && ((e = a.applyToRemoteDocument(r, e, i)) ? o.addEntry(e) : Or(!t, "Mutation batch " + a + " applied to document " + t + " resulted in null"));
            });
          }), s.next(function () {
            return e.mutationQueue.removeMutationBatch(t, a);
          });
        }, l.prototype.collectGarbage = function (e) {
          var n = this;
          return this.persistence.runTransaction("Collect garbage", "readwrite-primary", function (t) {
            return e.collect(t, n.queryDataByTarget);
          });
        }, l.prototype.getQueryForTarget = function (e) {
          var n = this;
          return this.queryDataByTarget[e] ? Promise.resolve(this.queryDataByTarget[e].query) : this.persistence.runTransaction("Get query data", "readonly", function (t) {
            return n.queryCache.getQueryDataForTarget(t, e).next(function (t) {
              return t ? t.query : null;
            });
          });
        }, l.prototype.getNewDocumentChanges = function () {
          var e = this;
          return this.persistence.runTransaction("Get new document changes", "readonly", function (t) {
            return e.remoteDocuments.getNewDocumentChanges(t);
          });
        }, l.RESUME_TOKEN_MAX_AGE_MICROS = 3e8, l;
      }(),
          ds = function () {
        function t(t, e) {
          this.indexManager = t, this.referenceDelegate = e, this.mutationQueue = [], this.nextBatchId = 1, this.lastStreamToken = Pr(), this.batchesByDocumentKey = new ji(fs.compareByKey);
        }

        return t.prototype.checkEmpty = function (t) {
          return oo.resolve(0 === this.mutationQueue.length);
        }, t.prototype.acknowledgeBatch = function (t, e, n) {
          var r = e.batchId,
              i = this.indexOfExistingBatchId(r, "acknowledged");
          Or(0 === i, "Can only acknowledge the first batch in the mutation queue");
          var o = this.mutationQueue[i];
          return Or(r === o.batchId, "Queue ordering failure: expected batch " + r + ", got batch " + o.batchId), this.lastStreamToken = n, oo.resolve();
        }, t.prototype.getLastStreamToken = function (t) {
          return oo.resolve(this.lastStreamToken);
        }, t.prototype.setLastStreamToken = function (t, e) {
          return this.lastStreamToken = e, oo.resolve();
        }, t.prototype.addMutationBatch = function (t, e, n, r) {
          Or(0 !== r.length, "Mutation batches should not be empty");
          var i = this.nextBatchId;
          (this.nextBatchId++, 0 < this.mutationQueue.length) && Or(this.mutationQueue[this.mutationQueue.length - 1].batchId < i, "Mutation batchIDs must be monotonically increasing order");
          var o = new ro(i, e, n, r);
          this.mutationQueue.push(o);

          for (var a = 0, s = r; a < s.length; a++) {
            var u = s[a];
            this.batchesByDocumentKey = this.batchesByDocumentKey.add(new fs(u.key, i)), this.indexManager.addToCollectionParentIndex(t, u.key.path.popLast());
          }

          return oo.resolve(o);
        }, t.prototype.lookupMutationBatch = function (t, e) {
          return oo.resolve(this.findMutationBatch(e));
        }, t.prototype.lookupMutationKeys = function (t, e) {
          var n = this.findMutationBatch(e);
          return Or(null != n, "Failed to find local mutation batch."), oo.resolve(n.keys());
        }, t.prototype.getNextMutationBatchAfterBatchId = function (t, e) {
          var n = e + 1,
              r = this.indexOfBatchId(n),
              i = r < 0 ? 0 : r;
          return oo.resolve(this.mutationQueue.length > i ? this.mutationQueue[i] : null);
        }, t.prototype.getAllMutationBatches = function (t) {
          return oo.resolve(this.mutationQueue.slice());
        }, t.prototype.getAllMutationBatchesAffectingDocumentKey = function (t, n) {
          var r = this,
              e = new fs(n, 0),
              i = new fs(n, Number.POSITIVE_INFINITY),
              o = [];
          return this.batchesByDocumentKey.forEachInRange([e, i], function (t) {
            Or(n.isEqual(t.key), "Should only iterate over a single key's batches");
            var e = r.findMutationBatch(t.targetOrBatchId);
            Or(null !== e, "Batches in the index must exist in the main table"), o.push(e);
          }), oo.resolve(o);
        }, t.prototype.getAllMutationBatchesAffectingDocumentKeys = function (t, e) {
          var r = this,
              i = new ji(ui);
          return e.forEach(function (e) {
            var t = new fs(e, 0),
                n = new fs(e, Number.POSITIVE_INFINITY);
            r.batchesByDocumentKey.forEachInRange([t, n], function (t) {
              Or(e.isEqual(t.key), "For each key, should only iterate over a single key's batches"), i = i.add(t.targetOrBatchId);
            });
          }), oo.resolve(this.findMutationBatches(i));
        }, t.prototype.getAllMutationBatchesAffectingQuery = function (t, e) {
          Or(!e.isCollectionGroupQuery(), "CollectionGroup queries should be handled in LocalDocumentsView");
          var n = e.path,
              r = n.length + 1,
              i = n;
          Di.isDocumentKey(i) || (i = i.child(""));
          var o = new fs(new Di(i), 0),
              a = new ji(ui);
          return this.batchesByDocumentKey.forEachWhile(function (t) {
            var e = t.key.path;
            return !!n.isPrefixOf(e) && (e.length === r && (a = a.add(t.targetOrBatchId)), !0);
          }, o), oo.resolve(this.findMutationBatches(a));
        }, t.prototype.findMutationBatches = function (t) {
          var n = this,
              r = [];
          return t.forEach(function (t) {
            var e = n.findMutationBatch(t);
            null !== e && r.push(e);
          }), r;
        }, t.prototype.removeMutationBatch = function (n, r) {
          var i = this;
          Or(0 === this.indexOfExistingBatchId(r.batchId, "removed"), "Can only remove the first entry of the mutation queue"), this.mutationQueue.shift();
          var o = this.batchesByDocumentKey;
          return oo.forEach(r.mutations, function (t) {
            var e = new fs(t.key, r.batchId);
            return o = o.delete(e), i.referenceDelegate.removeMutationReference(n, t.key);
          }).next(function () {
            i.batchesByDocumentKey = o;
          });
        }, t.prototype.removeCachedMutationKeys = function (t) {}, t.prototype.containsKey = function (t, e) {
          var n = new fs(e, 0),
              r = this.batchesByDocumentKey.firstAfterOrEqual(n);
          return oo.resolve(e.isEqual(r && r.key));
        }, t.prototype.performConsistencyCheck = function (t) {
          return 0 === this.mutationQueue.length && Or(this.batchesByDocumentKey.isEmpty(), "Document leak -- detected dangling mutation references when queue is empty."), oo.resolve();
        }, t.prototype.indexOfExistingBatchId = function (t, e) {
          var n = this.indexOfBatchId(t);
          return Or(0 <= n && n < this.mutationQueue.length, "Batches must exist to be " + e), n;
        }, t.prototype.indexOfBatchId = function (t) {
          return 0 === this.mutationQueue.length ? 0 : t - this.mutationQueue[0].batchId;
        }, t.prototype.findMutationBatch = function (t) {
          var e = this.indexOfBatchId(t);
          if (e < 0 || e >= this.mutationQueue.length) return null;
          var n = this.mutationQueue[e];
          return Or(n.batchId === t, "If found batch must match"), n;
        }, t;
      }(),
          ms = function () {
        function t(t) {
          this.persistence = t, this.queries = new Po(function (t) {
            return t.canonicalId();
          }), this.lastRemoteSnapshotVersion = Vi.MIN, this.highestTargetId = 0, this.highestSequenceNumber = 0, this.references = new ls(), this.targetCount = 0, this.targetIdGenerator = yo.forQueryCache();
        }

        return t.prototype.getTargetCount = function (t) {
          return oo.resolve(this.targetCount);
        }, t.prototype.forEachTarget = function (t, n) {
          return this.queries.forEach(function (t, e) {
            return n(e);
          }), oo.resolve();
        }, t.prototype.getLastRemoteSnapshotVersion = function (t) {
          return oo.resolve(this.lastRemoteSnapshotVersion);
        }, t.prototype.getHighestSequenceNumber = function (t) {
          return oo.resolve(this.highestSequenceNumber);
        }, t.prototype.allocateTargetId = function (t) {
          var e = this.targetIdGenerator.after(this.highestTargetId);
          return this.highestTargetId = e, oo.resolve(e);
        }, t.prototype.setTargetsMetadata = function (t, e, n) {
          return n && (this.lastRemoteSnapshotVersion = n), e > this.highestSequenceNumber && (this.highestSequenceNumber = e), oo.resolve();
        }, t.prototype.saveQueryData = function (t) {
          this.queries.set(t.query, t);
          var e = t.targetId;
          e > this.highestTargetId && (this.highestTargetId = e), t.sequenceNumber > this.highestSequenceNumber && (this.highestSequenceNumber = t.sequenceNumber);
        }, t.prototype.addQueryData = function (t, e) {
          return Or(!this.queries.has(e.query), "Adding a query that already exists"), this.saveQueryData(e), this.targetCount += 1, oo.resolve();
        }, t.prototype.updateQueryData = function (t, e) {
          return Or(this.queries.has(e.query), "Updating a non-existent query"), this.saveQueryData(e), oo.resolve();
        }, t.prototype.removeQueryData = function (t, e) {
          return Or(0 < this.targetCount, "Removing a target from an empty cache"), Or(this.queries.has(e.query), "Removing a non-existent target from the cache"), this.queries.delete(e.query), this.references.removeReferencesForId(e.targetId), this.targetCount -= 1, oo.resolve();
        }, t.prototype.removeTargets = function (n, r, i) {
          var o = this,
              a = 0,
              s = [];
          return this.queries.forEach(function (t, e) {
            e.sequenceNumber <= r && !i[e.targetId] && (o.queries.delete(t), s.push(o.removeMatchingKeysForTargetId(n, e.targetId)), a++);
          }), oo.waitFor(s).next(function () {
            return a;
          });
        }, t.prototype.getQueryCount = function (t) {
          return oo.resolve(this.targetCount);
        }, t.prototype.getQueryData = function (t, e) {
          var n = this.queries.get(e) || null;
          return oo.resolve(n);
        }, t.prototype.getQueryDataForTarget = function (t, e) {
          return Mr("Not yet implemented.");
        }, t.prototype.addMatchingKeys = function (e, t, n) {
          this.references.addReferences(t, n);
          var r = this.persistence.referenceDelegate,
              i = [];
          return r && t.forEach(function (t) {
            i.push(r.addReference(e, t));
          }), oo.waitFor(i);
        }, t.prototype.removeMatchingKeys = function (e, t, n) {
          this.references.removeReferences(t, n);
          var r = this.persistence.referenceDelegate,
              i = [];
          return r && t.forEach(function (t) {
            i.push(r.removeReference(e, t));
          }), oo.waitFor(i);
        }, t.prototype.removeMatchingKeysForTargetId = function (t, e) {
          return this.references.removeReferencesForId(e), oo.resolve();
        }, t.prototype.getMatchingKeysForTargetId = function (t, e) {
          var n = this.references.referencesForId(e);
          return oo.resolve(n);
        }, t.prototype.containsKey = function (t, e) {
          return oo.resolve(this.references.containsKey(e));
        }, t;
      }();

      var ys = function () {
        function t(t, e) {
          this.indexManager = t, this.sizer = e, this.docs = new Ui(Di.comparator), this.newDocumentChanges = to(), this.size = 0;
        }

        return t.prototype.addEntries = function (t, e, n) {
          for (var r = [], i = 0, o = e; i < o.length; i++) {
            var a = o[i],
                s = a.maybeDocument.key;
            this.docs = this.docs.insert(s, a), this.newDocumentChanges = this.newDocumentChanges.add(s), r.push(this.indexManager.addToCollectionParentIndex(t, s.path.popLast()));
          }

          return this.size += n, oo.waitFor(r);
        }, t.prototype.removeEntry = function (t, e) {
          var n = this.docs.get(e);
          return n ? (this.docs = this.docs.remove(e), this.size -= n.size, oo.resolve(n.size)) : oo.resolve(0);
        }, t.prototype.getEntry = function (t, e) {
          var n = this.docs.get(e);
          return oo.resolve(n ? n.maybeDocument : null);
        }, t.prototype.getSizedEntry = function (t, e) {
          return oo.resolve(this.docs.get(e));
        }, t.prototype.getEntries = function (t, e) {
          var n = this,
              r = Hi();
          return e.forEach(function (t) {
            var e = n.docs.get(t);
            r = r.insert(t, e ? e.maybeDocument : null);
          }), oo.resolve(r);
        }, t.prototype.getSizedEntries = function (t, e) {
          var n = this,
              r = Hi(),
              i = new Ui(Di.comparator);
          return e.forEach(function (t) {
            var e = n.docs.get(t);
            r = r.insert(t, e ? e.maybeDocument : null), i = i.insert(t, e ? e.size : 0);
          }), oo.resolve({
            maybeDocuments: r,
            sizeMap: i
          });
        }, t.prototype.getDocumentsMatchingQuery = function (t, e) {
          Or(!e.isCollectionGroupQuery(), "CollectionGroup queries should be handled in LocalDocumentsView");

          for (var n = Xi(), r = new Di(e.path.child("")), i = this.docs.getIteratorFrom(r); i.hasNext();) {
            var o = i.getNext(),
                a = o.key,
                s = o.value.maybeDocument;
            if (!e.path.isPrefixOf(a.path)) break;
            s instanceof Mo && e.matches(s) && (n = n.insert(s.key, s));
          }

          return oo.resolve(n);
        }, t.prototype.forEachDocumentKey = function (t, e) {
          return oo.forEach(this.docs, function (t) {
            return e(t);
          });
        }, t.prototype.getNewDocumentChanges = function (t) {
          var r = this,
              i = zi();
          return this.newDocumentChanges.forEach(function (t) {
            var e = r.docs.get(t),
                n = e ? e.maybeDocument : new Oo(t, Vi.forDeletedDoc());
            i = i.insert(t, n);
          }), this.newDocumentChanges = to(), oo.resolve(i);
        }, t.prototype.newChangeBuffer = function () {
          return new gs(this.sizer, this);
        }, t.prototype.getSize = function (t) {
          return oo.resolve(this.size);
        }, t;
      }(),
          gs = function (r) {
        function t(t, e) {
          var n = r.call(this) || this;
          return n.sizer = t, n.documentCache = e, n;
        }

        return s(t, r), t.prototype.applyChanges = function (t) {
          var i = this,
              e = this.assertChanges(),
              o = 0,
              a = [];
          return e.forEach(function (t, e) {
            var n = i.documentSizes.get(t);
            Or(void 0 !== n, "Attempting to change document " + t.toString() + " without having read it first");
            var r = i.sizer(e);
            o += r - n, a.push({
              maybeDocument: e,
              size: r
            });
          }), this.documentCache.addEntries(t, a, o);
        }, t.prototype.getFromCache = function (t, e) {
          return this.documentCache.getSizedEntry(t, e);
        }, t.prototype.getAllFromCache = function (t, e) {
          return this.documentCache.getSizedEntries(t, e);
        }, t;
      }(Lo),
          vs = function () {
        function r(t, e) {
          var n = this;
          this.clientId = t, this.mutationQueues = {}, this.listenSequence = new wi(0), this._started = !1, this._started = !0, this.referenceDelegate = e(this), this.queryCache = new ms(this);
          this.indexManager = new jo(), this.remoteDocumentCache = new ys(this.indexManager, function (t) {
            return n.referenceDelegate.documentSize(t);
          });
        }

        return r.createLruPersistence = function (t, e, n) {
          return new r(t, function (t) {
            return new Es(t, new ya(e), n);
          });
        }, r.createEagerPersistence = function (t) {
          return new r(t, function (t) {
            return new ws(t);
          });
        }, r.prototype.shutdown = function () {
          return this._started = !1, Promise.resolve();
        }, Object.defineProperty(r.prototype, "started", {
          get: function get() {
            return this._started;
          },
          enumerable: !0,
          configurable: !0
        }), r.prototype.getActiveClients = function () {
          return h(this, void 0, void 0, function () {
            return p(this, function (t) {
              return [2, [this.clientId]];
            });
          });
        }, r.prototype.setPrimaryStateListener = function (t) {
          return t(!0);
        }, r.prototype.setDatabaseDeletedListener = function () {}, r.prototype.setNetworkEnabled = function (t) {}, r.prototype.getIndexManager = function () {
          return this.indexManager;
        }, r.prototype.getMutationQueue = function (t) {
          var e = this.mutationQueues[t.toKey()];
          return e || (e = new ds(this.indexManager, this.referenceDelegate), this.mutationQueues[t.toKey()] = e), e;
        }, r.prototype.getQueryCache = function () {
          return this.queryCache;
        }, r.prototype.getRemoteDocumentCache = function () {
          return this.remoteDocumentCache;
        }, r.prototype.runTransaction = function (t, e, n) {
          var r = this;
          Ar("MemoryPersistence", "Starting transaction:", t);
          var i = new bs(this.listenSequence.next());
          return this.referenceDelegate.onTransactionStarted(), n(i).next(function (t) {
            return r.referenceDelegate.onTransactionCommitted(i).next(function () {
              return t;
            });
          }).toPromise();
        }, r.prototype.mutationQueuesContainKey = function (e, n) {
          return oo.or((t = this.mutationQueues, r = [], Br(t, function (t, e) {
            return r.push(e);
          }), r).map(function (t) {
            return function () {
              return t.containsKey(e, n);
            };
          }));
          var t, r;
        }, r;
      }(),
          bs = function bs(t) {
        this.currentSequenceNumber = t;
      },
          ws = function () {
        function t(t) {
          this.persistence = t;
        }

        return t.prototype.setInMemoryPins = function (t) {
          this.inMemoryPins = t;
        }, t.prototype.addReference = function (t, e) {
          return this.orphanedDocuments.delete(e), oo.resolve();
        }, t.prototype.removeReference = function (t, e) {
          return this.orphanedDocuments.add(e), oo.resolve();
        }, t.prototype.removeMutationReference = function (t, e) {
          return this.orphanedDocuments.add(e), oo.resolve();
        }, t.prototype.removeTarget = function (t, e) {
          var n = this,
              r = this.persistence.getQueryCache();
          return r.getMatchingKeysForTargetId(t, e.targetId).next(function (t) {
            t.forEach(function (t) {
              return n.orphanedDocuments.add(t);
            });
          }).next(function () {
            return r.removeQueryData(t, e);
          });
        }, t.prototype.onTransactionStarted = function () {
          this.orphanedDocuments = new Set();
        }, t.prototype.onTransactionCommitted = function (n) {
          var t = this,
              r = this.persistence.getRemoteDocumentCache();
          return oo.forEach(this.orphanedDocuments, function (e) {
            return t.isReferenced(n, e).next(function (t) {
              return t ? oo.resolve() : r.removeEntry(n, e).next(function () {});
            });
          });
        }, t.prototype.updateLimboDocument = function (t, e) {
          var n = this;
          return this.isReferenced(t, e).next(function (t) {
            t ? n.orphanedDocuments.delete(e) : n.orphanedDocuments.add(e);
          });
        }, t.prototype.documentSize = function (t) {
          return 0;
        }, t.prototype.isReferenced = function (t, e) {
          var n = this;
          return oo.or([function () {
            return n.persistence.getQueryCache().containsKey(t, e);
          }, function () {
            return n.persistence.mutationQueuesContainKey(t, e);
          }, function () {
            return oo.resolve(n.inMemoryPins.containsKey(e));
          }]);
        }, t;
      }(),
          Es = function () {
        function t(t, e, n) {
          this.persistence = t, this.serializer = e, this.orphanedSequenceNumbers = new Po(function (t) {
            return Pi(t.path);
          }), this.garbageCollector = new Sa(this, n);
        }

        return t.prototype.onTransactionStarted = function () {}, t.prototype.onTransactionCommitted = function (t) {
          return oo.resolve();
        }, t.prototype.forEachTarget = function (t, e) {
          return this.persistence.getQueryCache().forEachTarget(t, e);
        }, t.prototype.getSequenceNumberCount = function (t) {
          var n = this.orphanedDocumentCount(t);
          return this.persistence.getQueryCache().getTargetCount(t).next(function (e) {
            return n.next(function (t) {
              return e + t;
            });
          });
        }, t.prototype.orphanedDocumentCount = function (t) {
          var e = 0;
          return this.forEachOrphanedDocumentSequenceNumber(t, function (t) {
            e++;
          }).next(function () {
            return e;
          });
        }, t.prototype.forEachOrphanedDocumentSequenceNumber = function (n, r) {
          var i = this;
          return oo.forEach(this.orphanedSequenceNumbers, function (t, e) {
            return i.isPinned(n, t, e).next(function (t) {
              return t ? oo.resolve() : r(e);
            });
          });
        }, t.prototype.setInMemoryPins = function (t) {
          this.inMemoryPins = t;
        }, t.prototype.removeTargets = function (t, e, n) {
          return this.persistence.getQueryCache().removeTargets(t, e, n);
        }, t.prototype.removeOrphanedDocuments = function (n, t) {
          var r = this,
              i = 0,
              o = this.persistence.getRemoteDocumentCache();
          return o.forEachDocumentKey(n, function (e) {
            return r.isPinned(n, e, t).next(function (t) {
              return t ? oo.resolve() : (i++, o.removeEntry(n, e).next());
            });
          }).next(function () {
            return i;
          });
        }, t.prototype.removeMutationReference = function (t, e) {
          return this.orphanedSequenceNumbers.set(e, t.currentSequenceNumber), oo.resolve();
        }, t.prototype.removeTarget = function (t, e) {
          var n = e.copy({
            sequenceNumber: t.currentSequenceNumber
          });
          return this.persistence.getQueryCache().updateQueryData(t, n);
        }, t.prototype.addReference = function (t, e) {
          return this.orphanedSequenceNumbers.set(e, t.currentSequenceNumber), oo.resolve();
        }, t.prototype.removeReference = function (t, e) {
          return this.orphanedSequenceNumbers.set(e, t.currentSequenceNumber), oo.resolve();
        }, t.prototype.updateLimboDocument = function (t, e) {
          return this.orphanedSequenceNumbers.set(e, t.currentSequenceNumber), oo.resolve();
        }, t.prototype.documentSize = function (t) {
          var e,
              n = this.serializer.toDbRemoteDocument(t);
          if (n.document) e = n.document;else if (n.unknownDocument) e = n.unknownDocument;else {
            if (!n.noDocument) throw Mr("Unknown remote document type");
            e = n.noDocument;
          }
          return JSON.stringify(e).length;
        }, t.prototype.isPinned = function (t, e, n) {
          var r = this;
          return oo.or([function () {
            return r.persistence.mutationQueuesContainKey(t, e);
          }, function () {
            return oo.resolve(r.inMemoryPins.containsKey(e));
          }, function () {
            return r.persistence.getQueryCache().containsKey(t, e);
          }, function () {
            var t = r.orphanedSequenceNumbers.get(e);
            return oo.resolve(void 0 !== t && n < t);
          }]);
        }, t.prototype.getCacheSize = function (t) {
          return this.persistence.getRemoteDocumentCache().getSize(t);
        }, t;
      }(),
          Ss = Number,
          Ts = Ss.MIN_SAFE_INTEGER || -(Math.pow(2, 53) - 1),
          Is = Ss.MAX_SAFE_INTEGER || Math.pow(2, 53) - 1,
          Cs = Ss.isInteger || function (t) {
        return "number" == typeof t && isFinite(t) && Math.floor(t) === t;
      };

      function Ds(t) {
        return null == t;
      }

      function Ns(t) {
        return Cs(t) && t <= Is && Ts <= t;
      }

      var As,
          ks,
          Rs = function () {
        function t(t, e, n, r, i) {
          this.queue = t, this.timerId = e, this.initialDelayMs = n, this.backoffFactor = r, this.maxDelayMs = i, this.timerPromise = null, this.lastAttemptTime = Date.now(), this.reset();
        }

        return t.prototype.reset = function () {
          this.currentBaseMs = 0;
        }, t.prototype.resetToMax = function () {
          this.currentBaseMs = this.maxDelayMs;
        }, t.prototype.backoffAndRun = function (t) {
          var e = this;
          this.cancel();
          var n = Math.floor(this.currentBaseMs + this.jitterDelayMs()),
              r = Math.max(0, Date.now() - this.lastAttemptTime),
              i = Math.max(0, n - r);
          0 < this.currentBaseMs && Ar("ExponentialBackoff", "Backing off for " + i + " ms (base delay: " + this.currentBaseMs + " ms, delay with jitter: " + n + " ms, last attempt: " + r + " ms ago)"), this.timerPromise = this.queue.enqueueAfterDelay(this.timerId, i, function () {
            return e.lastAttemptTime = Date.now(), t();
          }), this.currentBaseMs *= this.backoffFactor, this.currentBaseMs < this.initialDelayMs && (this.currentBaseMs = this.initialDelayMs), this.currentBaseMs > this.maxDelayMs && (this.currentBaseMs = this.maxDelayMs);
        }, t.prototype.cancel = function () {
          null !== this.timerPromise && (this.timerPromise.cancel(), this.timerPromise = null);
        }, t.prototype.jitterDelayMs = function () {
          return (Math.random() - .5) * this.currentBaseMs;
        }, t;
      }(),
          Ms = "PersistentStream";

      (ks = As || (As = {}))[ks.Initial = 0] = "Initial", ks[ks.Starting = 1] = "Starting", ks[ks.Open = 2] = "Open", ks[ks.Error = 3] = "Error", ks[ks.Backoff = 4] = "Backoff";

      var Os,
          _s,
          Ps,
          Ls,
          xs = function () {
        function t(t, e, n, r, i, o) {
          this.queue = t, this.idleTimerId = n, this.connection = r, this.credentialsProvider = i, this.listener = o, this.state = As.Initial, this.closeCount = 0, this.idleTimer = null, this.stream = null, this.backoff = new Rs(t, e, 1e3, 1.5, 6e4);
        }

        return t.prototype.isStarted = function () {
          return this.state === As.Starting || this.state === As.Open || this.state === As.Backoff;
        }, t.prototype.isOpen = function () {
          return this.state === As.Open;
        }, t.prototype.start = function () {
          this.state !== As.Error ? (Or(this.state === As.Initial, "Already started"), this.auth()) : this.performBackoff();
        }, t.prototype.stop = function () {
          return h(this, void 0, void 0, function () {
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return this.isStarted() ? [4, this.close(As.Initial)] : [3, 2];

                case 1:
                  t.sent(), t.label = 2;

                case 2:
                  return [2];
              }
            });
          });
        }, t.prototype.inhibitBackoff = function () {
          Or(!this.isStarted(), "Can only inhibit backoff in a stopped state"), this.state = As.Initial, this.backoff.reset();
        }, t.prototype.markIdle = function () {
          var t = this;
          this.isOpen() && null === this.idleTimer && (this.idleTimer = this.queue.enqueueAfterDelay(this.idleTimerId, 6e4, function () {
            return t.handleIdleCloseTimer();
          }));
        }, t.prototype.sendRequest = function (t) {
          this.cancelIdleCheck(), this.stream.send(t);
        }, t.prototype.handleIdleCloseTimer = function () {
          return h(this, void 0, void 0, function () {
            return p(this, function (t) {
              return this.isOpen() ? [2, this.close(As.Initial)] : [2];
            });
          });
        }, t.prototype.cancelIdleCheck = function () {
          this.idleTimer && (this.idleTimer.cancel(), this.idleTimer = null);
        }, t.prototype.close = function (e, n) {
          return h(this, void 0, void 0, function () {
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return Or(this.isStarted(), "Only started streams should be closed."), Or(e === As.Error || Ds(n), "Can't provide an error when not in an error state."), this.cancelIdleCheck(), this.backoff.cancel(), this.closeCount++, e !== As.Error ? this.backoff.reset() : n && n.code === Lr.RESOURCE_EXHAUSTED ? (kr(n.toString()), kr("Using maximum backoff delay to prevent overloading the backend."), this.backoff.resetToMax()) : n && n.code === Lr.UNAUTHENTICATED && this.credentialsProvider.invalidateToken(), null !== this.stream && (this.tearDown(), this.stream.close(), this.stream = null), this.state = e, [4, this.listener.onClose(n)];

                case 1:
                  return t.sent(), [2];
              }
            });
          });
        }, t.prototype.tearDown = function () {}, t.prototype.auth = function () {
          var n = this;
          Or(this.state === As.Initial, "Must be in initial state to auth"), this.state = As.Starting;
          var t = this.getCloseGuardedDispatcher(this.closeCount),
              e = this.closeCount;
          this.credentialsProvider.getToken().then(function (t) {
            n.closeCount === e && n.startStream(t);
          }, function (e) {
            t(function () {
              var t = new xr(Lr.UNKNOWN, "Fetching auth token failed: " + e.message);
              return n.handleStreamClose(t);
            });
          });
        }, t.prototype.startStream = function (t) {
          var e = this;
          Or(this.state === As.Starting, "Trying to start stream in a non-starting state");
          var n = this.getCloseGuardedDispatcher(this.closeCount);
          this.stream = this.startRpc(t), this.stream.onOpen(function () {
            n(function () {
              return Or(e.state === As.Starting, "Expected stream to be in state Starting, but was " + e.state), e.state = As.Open, e.listener.onOpen();
            });
          }), this.stream.onClose(function (t) {
            n(function () {
              return e.handleStreamClose(t);
            });
          }), this.stream.onMessage(function (t) {
            n(function () {
              return e.onMessage(t);
            });
          });
        }, t.prototype.performBackoff = function () {
          var t = this;
          Or(this.state === As.Error, "Should only perform backoff when in Error state"), this.state = As.Backoff, this.backoff.backoffAndRun(function () {
            return h(t, void 0, void 0, function () {
              return p(this, function (t) {
                return Or(this.state === As.Backoff, "Backoff elapsed but state is now: " + this.state), this.state = As.Initial, this.start(), Or(this.isStarted(), "PersistentStream should have started"), [2];
              });
            });
          });
        }, t.prototype.handleStreamClose = function (t) {
          return Or(this.isStarted(), "Can't handle server close on non-started stream"), Ar(Ms, "close with error: " + t), this.stream = null, this.close(As.Error, t);
        }, t.prototype.getCloseGuardedDispatcher = function (e) {
          var n = this;
          return function (t) {
            n.queue.enqueueAndForget(function () {
              return n.closeCount === e ? t() : (Ar(Ms, "stream callback skipped by getCloseGuardedDispatcher."), Promise.resolve());
            });
          };
        }, t;
      }(),
          qs = function (a) {
        function t(t, e, n, r, i) {
          var o = a.call(this, t, pi.ListenStreamConnectionBackoff, pi.ListenStreamIdle, e, n, i) || this;
          return o.serializer = r, o;
        }

        return s(t, a), t.prototype.startRpc = function (t) {
          return this.connection.openStream("Listen", t);
        }, t.prototype.onMessage = function (t) {
          this.backoff.reset();
          var e = this.serializer.fromWatchChange(t),
              n = this.serializer.versionFromListenResponse(t);
          return this.listener.onWatchChange(e, n);
        }, t.prototype.watch = function (t) {
          var e = {};
          e.database = this.serializer.encodedDatabaseId, e.addTarget = this.serializer.toTarget(t);
          var n = this.serializer.toListenRequestLabels(t);
          n && (e.labels = n), this.sendRequest(e);
        }, t.prototype.unwatch = function (t) {
          var e = {};
          e.database = this.serializer.encodedDatabaseId, e.removeTarget = t, this.sendRequest(e);
        }, t;
      }(xs),
          Fs = function (a) {
        function t(t, e, n, r, i) {
          var o = a.call(this, t, pi.WriteStreamConnectionBackoff, pi.WriteStreamIdle, e, n, i) || this;
          return o.serializer = r, o.handshakeComplete_ = !1, o;
        }

        return s(t, a), Object.defineProperty(t.prototype, "handshakeComplete", {
          get: function get() {
            return this.handshakeComplete_;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.start = function () {
          this.handshakeComplete_ = !1, a.prototype.start.call(this);
        }, t.prototype.tearDown = function () {
          this.handshakeComplete_ && this.writeMutations([]);
        }, t.prototype.startRpc = function (t) {
          return this.connection.openStream("Write", t);
        }, t.prototype.onMessage = function (t) {
          if (Or(!!t.streamToken, "Got a write response without a stream token"), this.lastStreamToken = t.streamToken, this.handshakeComplete_) {
            this.backoff.reset();
            var e = this.serializer.fromWriteResults(t.writeResults, t.commitTime),
                n = this.serializer.fromVersion(t.commitTime);
            return this.listener.onMutationResult(n, e);
          }

          return Or(!t.writeResults || 0 === t.writeResults.length, "Got mutation results for handshake"), this.handshakeComplete_ = !0, this.listener.onHandshakeComplete();
        }, t.prototype.writeHandshake = function () {
          Or(this.isOpen(), "Writing handshake requires an opened stream"), Or(!this.handshakeComplete_, "Handshake already completed");
          var t = {};
          t.database = this.serializer.encodedDatabaseId, this.sendRequest(t);
        }, t.prototype.writeMutations = function (t) {
          var e = this;
          Or(this.isOpen(), "Writing mutations requires an opened stream"), Or(this.handshakeComplete_, "Handshake must be complete before writing mutations"), Or(0 < this.lastStreamToken.length, "Trying to write mutation without a token");
          var n = {
            streamToken: this.lastStreamToken,
            writes: t.map(function (t) {
              return e.serializer.toMutation(t);
            })
          };
          this.sendRequest(n);
        }, t;
      }(xs),
          Vs = function () {
        function t(t, e, n, r) {
          this.queue = t, this.connection = e, this.credentials = n, this.serializer = r;
        }

        return t.prototype.newPersistentWriteStream = function (t) {
          return new Fs(this.queue, this.connection, this.credentials, this.serializer, t);
        }, t.prototype.newPersistentWatchStream = function (t) {
          return new qs(this.queue, this.connection, this.credentials, this.serializer, t);
        }, t.prototype.commit = function (t) {
          var e = this,
              n = {
            database: this.serializer.encodedDatabaseId,
            writes: t.map(function (t) {
              return e.serializer.toMutation(t);
            })
          };
          return this.invokeRPC("Commit", n).then(function (t) {
            return e.serializer.fromWriteResults(t.writeResults, t.commitTime);
          });
        }, t.prototype.lookup = function (e) {
          var i = this,
              t = {
            database: this.serializer.encodedDatabaseId,
            documents: e.map(function (t) {
              return i.serializer.toName(t);
            })
          };
          return this.invokeStreamingRPC("BatchGetDocuments", t).then(function (t) {
            var n = zi();
            t.forEach(function (t) {
              var e = i.serializer.fromMaybeDocument(t);
              n = n.insert(e.key, e);
            });
            var r = [];
            return e.forEach(function (t) {
              var e = n.get(t);
              Or(!!e, "Missing entity in write response for " + t), r.push(e);
            }), r;
          });
        }, t.prototype.invokeRPC = function (e, n) {
          var r = this;
          return this.credentials.getToken().then(function (t) {
            return r.connection.invokeRPC(e, n, t);
          }).catch(function (t) {
            throw t.code === Lr.UNAUTHENTICATED && r.credentials.invalidateToken(), t;
          });
        }, t.prototype.invokeStreamingRPC = function (e, n) {
          var r = this;
          return this.credentials.getToken().then(function (t) {
            return r.connection.invokeStreamingRPC(e, n, t);
          }).catch(function (t) {
            throw t.code === Lr.UNAUTHENTICATED && r.credentials.invalidateToken(), t;
          });
        }, t;
      }(),
          Us = function () {
        function t(t) {
          this.datastore = t, this.readVersions = $i(), this.mutations = [], this.committed = !1;
        }

        return t.prototype.recordVersion = function (t) {
          var e;
          if (t instanceof Mo) e = t.version;else {
            if (!(t instanceof Oo)) throw Mr("Document in a transaction was a " + t.constructor.name);
            e = Vi.forDeletedDoc();
          }
          var n = this.readVersions.get(t.key);

          if (null !== n) {
            if (!e.isEqual(n)) throw new xr(Lr.ABORTED, "Document version changed between two reads.");
          } else this.readVersions = this.readVersions.insert(t.key, e);
        }, t.prototype.lookup = function (t) {
          var e = this;
          return this.committed ? Promise.reject("Transaction has already completed.") : 0 < this.mutations.length ? Promise.reject("Transactions lookups are invalid after writes.") : this.datastore.lookup(t).then(function (t) {
            return t.forEach(function (t) {
              t instanceof Oo || t instanceof Mo ? e.recordVersion(t) : Mr("Document in a transaction was a " + t.constructor.name);
            }), t;
          });
        }, t.prototype.write = function (t) {
          if (this.committed) throw new xr(Lr.FAILED_PRECONDITION, "Transaction has already completed.");
          this.mutations = this.mutations.concat(t);
        }, t.prototype.precondition = function (t) {
          var e = this.readVersions.get(t);
          return e ? is.updateTime(e) : is.NONE;
        }, t.prototype.preconditionForUpdate = function (t) {
          var e = this.readVersions.get(t);
          if (e && e.isEqual(Vi.forDeletedDoc())) throw new xr(Lr.FAILED_PRECONDITION, "Can't update a document that doesn't exist.");
          return e ? is.updateTime(e) : is.exists(!0);
        }, t.prototype.set = function (t, e) {
          this.write(e.toMutations(t, this.precondition(t)));
        }, t.prototype.update = function (t, e) {
          this.write(e.toMutations(t, this.preconditionForUpdate(t)));
        }, t.prototype.delete = function (t) {
          this.write([new cs(t, this.precondition(t))]), this.readVersions = this.readVersions.insert(t, Vi.forDeletedDoc());
        }, t.prototype.commit = function () {
          var t = this,
              e = this.readVersions;
          return this.mutations.forEach(function (t) {
            e = e.remove(t.key);
          }), e.isEmpty() ? this.datastore.commit(this.mutations).then(function () {
            t.committed = !0;
          }) : Promise.reject(Error("Every document read in a transaction must also be written."));
        }, t;
      }();

      (_s = Os || (Os = {}))[_s.Unknown = 0] = "Unknown", _s[_s.Online = 1] = "Online", _s[_s.Offline = 2] = "Offline", (Ls = Ps || (Ps = {}))[Ls.RemoteStore = 0] = "RemoteStore", Ls[Ls.SharedClientState = 1] = "SharedClientState";

      var Bs,
          Qs,
          Ks = function () {
        function t(t, e) {
          this.asyncQueue = t, this.onlineStateHandler = e, this.state = Os.Unknown, this.watchStreamFailures = 0, this.onlineStateTimer = null, this.shouldWarnClientIsOffline = !0;
        }

        return t.prototype.handleWatchStreamStart = function () {
          var t = this;
          0 === this.watchStreamFailures && (this.setAndBroadcast(Os.Unknown), Or(null === this.onlineStateTimer, "onlineStateTimer shouldn't be started yet"), this.onlineStateTimer = this.asyncQueue.enqueueAfterDelay(pi.OnlineStateTimeout, 1e4, function () {
            return t.onlineStateTimer = null, Or(t.state === Os.Unknown, "Timer should be canceled if we transitioned to a different state."), t.logClientOfflineWarningIfNecessary("Backend didn't respond within 10 seconds."), t.setAndBroadcast(Os.Offline), Promise.resolve();
          }));
        }, t.prototype.handleWatchStreamFailure = function (t) {
          this.state === Os.Online ? (this.setAndBroadcast(Os.Unknown), Or(0 === this.watchStreamFailures, "watchStreamFailures must be 0"), Or(null === this.onlineStateTimer, "onlineStateTimer must be null")) : (this.watchStreamFailures++, 1 <= this.watchStreamFailures && (this.clearOnlineStateTimer(), this.logClientOfflineWarningIfNecessary("Connection failed 1 times. Most recent error: " + t.toString()), this.setAndBroadcast(Os.Offline)));
        }, t.prototype.set = function (t) {
          this.clearOnlineStateTimer(), this.watchStreamFailures = 0, t === Os.Online && (this.shouldWarnClientIsOffline = !1), this.setAndBroadcast(t);
        }, t.prototype.setAndBroadcast = function (t) {
          t !== this.state && (this.state = t, this.onlineStateHandler(t));
        }, t.prototype.logClientOfflineWarningIfNecessary = function (t) {
          var e = "Could not reach Cloud Firestore backend. " + t + "\nThis typically indicates that your device does not have a healthy Internet connection at the moment. The client will operate in offline mode until it is able to successfully connect to the backend.";
          this.shouldWarnClientIsOffline ? (kr(e), this.shouldWarnClientIsOffline = !1) : Ar("OnlineStateTracker", e);
        }, t.prototype.clearOnlineStateTimer = function () {
          null !== this.onlineStateTimer && (this.onlineStateTimer.cancel(), this.onlineStateTimer = null);
        }, t;
      }();

      function js(t) {
        switch (t) {
          case Lr.OK:
            return Mr("Treated status OK as error");

          case Lr.CANCELLED:
          case Lr.UNKNOWN:
          case Lr.DEADLINE_EXCEEDED:
          case Lr.RESOURCE_EXHAUSTED:
          case Lr.INTERNAL:
          case Lr.UNAVAILABLE:
          case Lr.UNAUTHENTICATED:
            return !1;

          case Lr.INVALID_ARGUMENT:
          case Lr.NOT_FOUND:
          case Lr.ALREADY_EXISTS:
          case Lr.PERMISSION_DENIED:
          case Lr.FAILED_PRECONDITION:
          case Lr.ABORTED:
          case Lr.OUT_OF_RANGE:
          case Lr.UNIMPLEMENTED:
          case Lr.DATA_LOSS:
            return !0;

          default:
            return Mr("Unknown status code: " + t);
        }
      }

      function Gs(t) {
        if (void 0 === t) return kr("GRPC error has no .code"), Lr.UNKNOWN;

        switch (t) {
          case Bs.OK:
            return Lr.OK;

          case Bs.CANCELLED:
            return Lr.CANCELLED;

          case Bs.UNKNOWN:
            return Lr.UNKNOWN;

          case Bs.DEADLINE_EXCEEDED:
            return Lr.DEADLINE_EXCEEDED;

          case Bs.RESOURCE_EXHAUSTED:
            return Lr.RESOURCE_EXHAUSTED;

          case Bs.INTERNAL:
            return Lr.INTERNAL;

          case Bs.UNAVAILABLE:
            return Lr.UNAVAILABLE;

          case Bs.UNAUTHENTICATED:
            return Lr.UNAUTHENTICATED;

          case Bs.INVALID_ARGUMENT:
            return Lr.INVALID_ARGUMENT;

          case Bs.NOT_FOUND:
            return Lr.NOT_FOUND;

          case Bs.ALREADY_EXISTS:
            return Lr.ALREADY_EXISTS;

          case Bs.PERMISSION_DENIED:
            return Lr.PERMISSION_DENIED;

          case Bs.FAILED_PRECONDITION:
            return Lr.FAILED_PRECONDITION;

          case Bs.ABORTED:
            return Lr.ABORTED;

          case Bs.OUT_OF_RANGE:
            return Lr.OUT_OF_RANGE;

          case Bs.UNIMPLEMENTED:
            return Lr.UNIMPLEMENTED;

          case Bs.DATA_LOSS:
            return Lr.DATA_LOSS;

          default:
            return Mr("Unknown status code: " + t);
        }
      }

      (Qs = Bs || (Bs = {}))[Qs.OK = 0] = "OK", Qs[Qs.CANCELLED = 1] = "CANCELLED", Qs[Qs.UNKNOWN = 2] = "UNKNOWN", Qs[Qs.INVALID_ARGUMENT = 3] = "INVALID_ARGUMENT", Qs[Qs.DEADLINE_EXCEEDED = 4] = "DEADLINE_EXCEEDED", Qs[Qs.NOT_FOUND = 5] = "NOT_FOUND", Qs[Qs.ALREADY_EXISTS = 6] = "ALREADY_EXISTS", Qs[Qs.PERMISSION_DENIED = 7] = "PERMISSION_DENIED", Qs[Qs.UNAUTHENTICATED = 16] = "UNAUTHENTICATED", Qs[Qs.RESOURCE_EXHAUSTED = 8] = "RESOURCE_EXHAUSTED", Qs[Qs.FAILED_PRECONDITION = 9] = "FAILED_PRECONDITION", Qs[Qs.ABORTED = 10] = "ABORTED", Qs[Qs.OUT_OF_RANGE = 11] = "OUT_OF_RANGE", Qs[Qs.UNIMPLEMENTED = 12] = "UNIMPLEMENTED", Qs[Qs.INTERNAL = 13] = "INTERNAL", Qs[Qs.UNAVAILABLE = 14] = "UNAVAILABLE", Qs[Qs.DATA_LOSS = 15] = "DATA_LOSS";

      var Ws,
          zs,
          Hs,
          Ys,
          Xs = function () {
        function o(n) {
          this.comparator = n ? function (t, e) {
            return n(t, e) || Di.comparator(t.key, e.key);
          } : function (t, e) {
            return Di.comparator(t.key, e.key);
          }, this.keyedMap = Xi(), this.sortedSet = new Ui(this.comparator);
        }

        return o.emptySet = function (t) {
          return new o(t.comparator);
        }, o.prototype.has = function (t) {
          return null != this.keyedMap.get(t);
        }, o.prototype.get = function (t) {
          return this.keyedMap.get(t);
        }, o.prototype.first = function () {
          return this.sortedSet.minKey();
        }, o.prototype.last = function () {
          return this.sortedSet.maxKey();
        }, o.prototype.isEmpty = function () {
          return this.sortedSet.isEmpty();
        }, o.prototype.indexOf = function (t) {
          var e = this.keyedMap.get(t);
          return e ? this.sortedSet.indexOf(e) : -1;
        }, Object.defineProperty(o.prototype, "size", {
          get: function get() {
            return this.sortedSet.size;
          },
          enumerable: !0,
          configurable: !0
        }), o.prototype.forEach = function (n) {
          this.sortedSet.inorderTraversal(function (t, e) {
            return n(t), !1;
          });
        }, o.prototype.add = function (t) {
          var e = this.delete(t.key);
          return e.copy(e.keyedMap.insert(t.key, t), e.sortedSet.insert(t, null));
        }, o.prototype.delete = function (t) {
          var e = this.get(t);
          return e ? this.copy(this.keyedMap.remove(t), this.sortedSet.remove(e)) : this;
        }, o.prototype.isEqual = function (t) {
          if (!(t instanceof o)) return !1;
          if (this.size !== t.size) return !1;

          for (var e = this.sortedSet.getIterator(), n = t.sortedSet.getIterator(); e.hasNext();) {
            var r = e.getNext().key,
                i = n.getNext().key;
            if (!r.isEqual(i)) return !1;
          }

          return !0;
        }, o.prototype.toString = function () {
          var e = [];
          return this.forEach(function (t) {
            e.push(t.toString());
          }), 0 === e.length ? "DocumentSet ()" : "DocumentSet (\n  " + e.join("  \n") + "\n)";
        }, o.prototype.copy = function (t, e) {
          var n = new o();
          return n.comparator = this.comparator, n.keyedMap = t, n.sortedSet = e, n;
        }, o;
      }();

      (zs = Ws || (Ws = {}))[zs.Added = 0] = "Added", zs[zs.Removed = 1] = "Removed", zs[zs.Modified = 2] = "Modified", zs[zs.Metadata = 3] = "Metadata", (Ys = Hs || (Hs = {}))[Ys.Local = 0] = "Local", Ys[Ys.Synced = 1] = "Synced";

      var Js,
          $s,
          Zs = function () {
        function t() {
          this.changeMap = new Ui(Di.comparator);
        }

        return t.prototype.track = function (t) {
          var e = t.doc.key,
              n = this.changeMap.get(e);
          n ? t.type !== Ws.Added && n.type === Ws.Metadata ? this.changeMap = this.changeMap.insert(e, t) : t.type === Ws.Metadata && n.type !== Ws.Removed ? this.changeMap = this.changeMap.insert(e, {
            type: n.type,
            doc: t.doc
          }) : t.type === Ws.Modified && n.type === Ws.Modified ? this.changeMap = this.changeMap.insert(e, {
            type: Ws.Modified,
            doc: t.doc
          }) : t.type === Ws.Modified && n.type === Ws.Added ? this.changeMap = this.changeMap.insert(e, {
            type: Ws.Added,
            doc: t.doc
          }) : t.type === Ws.Removed && n.type === Ws.Added ? this.changeMap = this.changeMap.remove(e) : t.type === Ws.Removed && n.type === Ws.Modified ? this.changeMap = this.changeMap.insert(e, {
            type: Ws.Removed,
            doc: n.doc
          }) : t.type === Ws.Added && n.type === Ws.Removed ? this.changeMap = this.changeMap.insert(e, {
            type: Ws.Modified,
            doc: t.doc
          }) : Mr("unsupported combination of changes: " + JSON.stringify(t) + " after " + JSON.stringify(n)) : this.changeMap = this.changeMap.insert(e, t);
        }, t.prototype.getChanges = function () {
          var n = [];
          return this.changeMap.inorderTraversal(function (t, e) {
            n.push(e);
          }), n;
        }, t;
      }(),
          tu = function () {
        function o(t, e, n, r, i, o, a, s) {
          this.query = t, this.docs = e, this.oldDocs = n, this.docChanges = r, this.mutatedKeys = i, this.fromCache = o, this.syncStateChanged = a, this.excludesMetadataChanges = s;
        }

        return o.fromInitialDocuments = function (t, e, n, r) {
          var i = [];
          return e.forEach(function (t) {
            i.push({
              type: Ws.Added,
              doc: t
            });
          }), new o(t, e, Xs.emptySet(e), i, n, r, !0, !1);
        }, Object.defineProperty(o.prototype, "hasPendingWrites", {
          get: function get() {
            return !this.mutatedKeys.isEmpty();
          },
          enumerable: !0,
          configurable: !0
        }), o.prototype.isEqual = function (t) {
          if (!(this.fromCache === t.fromCache && this.syncStateChanged === t.syncStateChanged && this.mutatedKeys.isEqual(t.mutatedKeys) && this.query.isEqual(t.query) && this.docs.isEqual(t.docs) && this.oldDocs.isEqual(t.oldDocs))) return !1;
          var e = this.docChanges,
              n = t.docChanges;
          if (e.length !== n.length) return !1;

          for (var r = 0; r < e.length; r++) if (e[r].type !== n[r].type || !e[r].doc.isEqual(n[r].doc)) return !1;

          return !0;
        }, o;
      }(),
          eu = function () {
        function i(t, e, n, r, i) {
          this.snapshotVersion = t, this.targetChanges = e, this.targetMismatches = n, this.documentUpdates = r, this.resolvedLimboDocuments = i;
        }

        return i.createSynthesizedRemoteEventForCurrentChange = function (t, e) {
          var n,
              r = ((n = {})[t] = nu.createSynthesizedTargetChangeForCurrentChange(t, e), n);
          return new i(Vi.MIN, r, no(), zi(), to());
        }, i;
      }(),
          nu = function () {
        function n(t, e, n, r, i) {
          this.resumeToken = t, this.current = e, this.addedDocuments = n, this.modifiedDocuments = r, this.removedDocuments = i;
        }

        return n.createSynthesizedTargetChangeForCurrentChange = function (t, e) {
          return new n(Pr(), e, to(), to(), to());
        }, n;
      }(),
          ru = function ru(t, e, n, r) {
        this.updatedTargetIds = t, this.removedTargetIds = e, this.key = n, this.newDoc = r;
      },
          iu = function iu(t, e) {
        this.targetId = t, this.existenceFilter = e;
      };

      ($s = Js || (Js = {}))[$s.NoChange = 0] = "NoChange", $s[$s.Added = 1] = "Added", $s[$s.Removed = 2] = "Removed", $s[$s.Current = 3] = "Current", $s[$s.Reset = 4] = "Reset";

      var ou = function ou(t, e, n, r) {
        void 0 === n && (n = Pr()), void 0 === r && (r = null), this.state = t, this.targetIds = e, this.resumeToken = n, this.cause = r;
      },
          au = function () {
        function t() {
          this.pendingResponses = 0, this.documentChanges = cu(), this._resumeToken = Pr(), this._current = !1, this._hasPendingChanges = !0;
        }

        return Object.defineProperty(t.prototype, "current", {
          get: function get() {
            return this._current;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "resumeToken", {
          get: function get() {
            return this._resumeToken;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "isPending", {
          get: function get() {
            return 0 !== this.pendingResponses;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "hasPendingChanges", {
          get: function get() {
            return this._hasPendingChanges;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.updateResumeToken = function (t) {
          0 < t.length && (this._hasPendingChanges = !0, this._resumeToken = t);
        }, t.prototype.toTargetChange = function () {
          var n = to(),
              r = to(),
              i = to();
          return this.documentChanges.forEach(function (t, e) {
            switch (e) {
              case Ws.Added:
                n = n.add(t);
                break;

              case Ws.Modified:
                r = r.add(t);
                break;

              case Ws.Removed:
                i = i.add(t);
                break;

              default:
                Mr("Encountered invalid change type: " + e);
            }
          }), new nu(this._resumeToken, this._current, n, r, i);
        }, t.prototype.clearPendingChanges = function () {
          this._hasPendingChanges = !1, this.documentChanges = cu();
        }, t.prototype.addDocumentChange = function (t, e) {
          this._hasPendingChanges = !0, this.documentChanges = this.documentChanges.insert(t, e);
        }, t.prototype.removeDocumentChange = function (t) {
          this._hasPendingChanges = !0, this.documentChanges = this.documentChanges.remove(t);
        }, t.prototype.recordPendingTargetRequest = function () {
          this.pendingResponses += 1;
        }, t.prototype.recordTargetResponse = function () {
          this.pendingResponses -= 1;
        }, t.prototype.markCurrent = function () {
          this._hasPendingChanges = !0, this._current = !0;
        }, t;
      }(),
          su = function () {
        function t(t) {
          this.metadataProvider = t, this.targetStates = {}, this.pendingDocumentUpdates = zi(), this.pendingDocumentTargetMapping = uu(), this.pendingTargetResets = new ji(ui);
        }

        return t.prototype.handleDocumentChange = function (t) {
          for (var e = 0, n = t.updatedTargetIds; e < n.length; e++) {
            var r = n[e];
            t.newDoc instanceof Mo ? this.addDocumentToTarget(r, t.newDoc) : t.newDoc instanceof Oo && this.removeDocumentFromTarget(r, t.key, t.newDoc);
          }

          for (var i = 0, o = t.removedTargetIds; i < o.length; i++) {
            r = o[i];
            this.removeDocumentFromTarget(r, t.key, t.newDoc);
          }
        }, t.prototype.handleTargetChange = function (n) {
          var r = this;
          this.forEachTarget(n, function (t) {
            var e = r.ensureTargetState(t);

            switch (n.state) {
              case Js.NoChange:
                r.isActiveTarget(t) && e.updateResumeToken(n.resumeToken);
                break;

              case Js.Added:
                e.recordTargetResponse(), e.isPending || e.clearPendingChanges(), e.updateResumeToken(n.resumeToken);
                break;

              case Js.Removed:
                e.recordTargetResponse(), e.isPending || r.removeTarget(t), Or(!n.cause, "WatchChangeAggregator does not handle errored targets");
                break;

              case Js.Current:
                r.isActiveTarget(t) && (e.markCurrent(), e.updateResumeToken(n.resumeToken));
                break;

              case Js.Reset:
                r.isActiveTarget(t) && (r.resetTarget(t), e.updateResumeToken(n.resumeToken));
                break;

              default:
                Mr("Unknown target watch change state: " + n.state);
            }
          });
        }, t.prototype.forEachTarget = function (t, e) {
          0 < t.targetIds.length ? t.targetIds.forEach(e) : Ur(this.targetStates, e);
        }, t.prototype.handleExistenceFilter = function (t) {
          var e = t.targetId,
              n = t.existenceFilter.count,
              r = this.queryDataForActiveTarget(e);

          if (r) {
            var i = r.query;
            if (i.isDocumentQuery()) {
              if (0 === n) {
                var o = new Di(i.path);
                this.removeDocumentFromTarget(e, o, new Oo(o, Vi.forDeletedDoc()));
              } else Or(1 === n, "Single document existence filter with count: " + n);
            } else this.getCurrentDocumentCountForTarget(e) !== n && (this.resetTarget(e), this.pendingTargetResets = this.pendingTargetResets.add(e));
          }
        }, t.prototype.createRemoteEvent = function (i) {
          var o = this,
              a = {};
          Ur(this.targetStates, function (t, e) {
            var n = o.queryDataForActiveTarget(t);

            if (n) {
              if (e.current && n.query.isDocumentQuery()) {
                var r = new Di(n.query.path);
                null !== o.pendingDocumentUpdates.get(r) || o.targetContainsDocument(t, r) || o.removeDocumentFromTarget(t, r, new Oo(r, i));
              }

              e.hasPendingChanges && (a[t] = e.toTargetChange(), e.clearPendingChanges());
            }
          });
          var r = to();
          this.pendingDocumentTargetMapping.forEach(function (t, e) {
            var n = !0;
            e.forEachWhile(function (t) {
              var e = o.queryDataForActiveTarget(t);
              return !e || e.purpose === ha.LimboResolution || (n = !1);
            }), n && (r = r.add(t));
          });
          var t = new eu(i, a, this.pendingTargetResets, this.pendingDocumentUpdates, r);
          return this.pendingDocumentUpdates = zi(), this.pendingDocumentTargetMapping = uu(), this.pendingTargetResets = new ji(ui), t;
        }, t.prototype.addDocumentToTarget = function (t, e) {
          if (this.isActiveTarget(t)) {
            var n = this.targetContainsDocument(t, e.key) ? Ws.Modified : Ws.Added;
            this.ensureTargetState(t).addDocumentChange(e.key, n), this.pendingDocumentUpdates = this.pendingDocumentUpdates.insert(e.key, e), this.pendingDocumentTargetMapping = this.pendingDocumentTargetMapping.insert(e.key, this.ensureDocumentTargetMapping(e.key).add(t));
          }
        }, t.prototype.removeDocumentFromTarget = function (t, e, n) {
          if (this.isActiveTarget(t)) {
            var r = this.ensureTargetState(t);
            this.targetContainsDocument(t, e) ? r.addDocumentChange(e, Ws.Removed) : r.removeDocumentChange(e), this.pendingDocumentTargetMapping = this.pendingDocumentTargetMapping.insert(e, this.ensureDocumentTargetMapping(e).delete(t)), n && (this.pendingDocumentUpdates = this.pendingDocumentUpdates.insert(e, n));
          }
        }, t.prototype.removeTarget = function (t) {
          delete this.targetStates[t];
        }, t.prototype.getCurrentDocumentCountForTarget = function (t) {
          var e = this.ensureTargetState(t).toTargetChange();
          return this.metadataProvider.getRemoteKeysForTarget(t).size + e.addedDocuments.size - e.removedDocuments.size;
        }, t.prototype.recordPendingTargetRequest = function (t) {
          this.ensureTargetState(t).recordPendingTargetRequest();
        }, t.prototype.ensureTargetState = function (t) {
          return this.targetStates[t] || (this.targetStates[t] = new au()), this.targetStates[t];
        }, t.prototype.ensureDocumentTargetMapping = function (t) {
          var e = this.pendingDocumentTargetMapping.get(t);
          return e || (e = new ji(ui), this.pendingDocumentTargetMapping = this.pendingDocumentTargetMapping.insert(t, e)), e;
        }, t.prototype.isActiveTarget = function (t) {
          return null !== this.queryDataForActiveTarget(t);
        }, t.prototype.queryDataForActiveTarget = function (t) {
          var e = this.targetStates[t];
          return e && e.isPending ? null : this.metadataProvider.getQueryDataForTarget(t);
        }, t.prototype.resetTarget = function (e) {
          var n = this;
          Or(!this.targetStates[e].isPending, "Should only reset active targets"), this.targetStates[e] = new au(), this.metadataProvider.getRemoteKeysForTarget(e).forEach(function (t) {
            n.removeDocumentFromTarget(e, t, null);
          });
        }, t.prototype.targetContainsDocument = function (t, e) {
          return this.metadataProvider.getRemoteKeysForTarget(t).has(e);
        }, t;
      }();

      function uu() {
        return new Ui(Di.comparator);
      }

      function cu() {
        return new Ui(Di.comparator);
      }

      var hu = "RemoteStore",
          lu = function () {
        function t(t, e, n, r, i) {
          var o = this;
          this.localStore = t, this.datastore = e, this.writePipeline = [], this.listenTargets = {}, this.watchChangeAggregator = null, this.networkEnabled = !1, this.isPrimary = !1, this.connectivityMonitor = i, this.connectivityMonitor.addCallback(function (t) {
            n.enqueueAndForget(function () {
              return h(o, void 0, void 0, function () {
                return p(this, function (t) {
                  switch (t.label) {
                    case 0:
                      return this.canUseNetwork() ? (Ar(hu, "Restarting streams for network reachability change."), [4, this.restartNetwork()]) : [3, 2];

                    case 1:
                      t.sent(), t.label = 2;

                    case 2:
                      return [2];
                  }
                });
              });
            });
          }), this.onlineStateTracker = new Ks(n, r), this.watchStream = this.datastore.newPersistentWatchStream({
            onOpen: this.onWatchStreamOpen.bind(this),
            onClose: this.onWatchStreamClose.bind(this),
            onWatchChange: this.onWatchStreamChange.bind(this)
          }), this.writeStream = this.datastore.newPersistentWriteStream({
            onOpen: this.onWriteStreamOpen.bind(this),
            onClose: this.onWriteStreamClose.bind(this),
            onHandshakeComplete: this.onWriteHandshakeComplete.bind(this),
            onMutationResult: this.onMutationResult.bind(this)
          });
        }

        return t.prototype.start = function () {
          return this.enableNetwork();
        }, t.prototype.enableNetwork = function () {
          return h(this, void 0, void 0, function () {
            var e;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return this.networkEnabled = !0, this.canUseNetwork() ? (e = this.writeStream, [4, this.localStore.getLastStreamToken()]) : [3, 3];

                case 1:
                  return e.lastStreamToken = t.sent(), this.shouldStartWatchStream() ? this.startWatchStream() : this.onlineStateTracker.set(Os.Unknown), [4, this.fillWritePipeline()];

                case 2:
                  t.sent(), t.label = 3;

                case 3:
                  return [2];
              }
            });
          });
        }, t.prototype.disableNetwork = function () {
          return h(this, void 0, void 0, function () {
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return this.networkEnabled = !1, [4, this.disableNetworkInternal()];

                case 1:
                  return t.sent(), this.onlineStateTracker.set(Os.Offline), [2];
              }
            });
          });
        }, t.prototype.disableNetworkInternal = function () {
          return h(this, void 0, void 0, function () {
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return [4, this.writeStream.stop()];

                case 1:
                  return t.sent(), [4, this.watchStream.stop()];

                case 2:
                  return t.sent(), 0 < this.writePipeline.length && (Ar(hu, "Stopping write stream with " + this.writePipeline.length + " pending writes"), this.writePipeline = []), this.cleanUpWatchStreamState(), [2];
              }
            });
          });
        }, t.prototype.shutdown = function () {
          return h(this, void 0, void 0, function () {
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return Ar(hu, "RemoteStore shutting down."), this.networkEnabled = !1, [4, this.disableNetworkInternal()];

                case 1:
                  return t.sent(), this.connectivityMonitor.shutdown(), this.onlineStateTracker.set(Os.Unknown), [2];
              }
            });
          });
        }, t.prototype.listen = function (t) {
          Or(!Fr(this.listenTargets, t.targetId), "listen called with duplicate targetId!"), this.listenTargets[t.targetId] = t, this.shouldStartWatchStream() ? this.startWatchStream() : this.watchStream.isOpen() && this.sendWatchRequest(t);
        }, t.prototype.unlisten = function (t) {
          Or(Fr(this.listenTargets, t), "unlisten called without assigned target ID!"), delete this.listenTargets[t], this.watchStream.isOpen() && this.sendUnwatchRequest(t), Qr(this.listenTargets) && (this.watchStream.isOpen() ? this.watchStream.markIdle() : this.canUseNetwork() && this.onlineStateTracker.set(Os.Unknown));
        }, t.prototype.getQueryDataForTarget = function (t) {
          return this.listenTargets[t] || null;
        }, t.prototype.getRemoteKeysForTarget = function (t) {
          return this.syncEngine.getRemoteKeysForTarget(t);
        }, t.prototype.sendWatchRequest = function (t) {
          this.watchChangeAggregator.recordPendingTargetRequest(t.targetId), this.watchStream.watch(t);
        }, t.prototype.sendUnwatchRequest = function (t) {
          this.watchChangeAggregator.recordPendingTargetRequest(t), this.watchStream.unwatch(t);
        }, t.prototype.startWatchStream = function () {
          Or(this.shouldStartWatchStream(), "startWatchStream() called when shouldStartWatchStream() is false."), this.watchChangeAggregator = new su(this), this.watchStream.start(), this.onlineStateTracker.handleWatchStreamStart();
        }, t.prototype.shouldStartWatchStream = function () {
          return this.canUseNetwork() && !this.watchStream.isStarted() && !Qr(this.listenTargets);
        }, t.prototype.canUseNetwork = function () {
          return this.isPrimary && this.networkEnabled;
        }, t.prototype.cleanUpWatchStreamState = function () {
          this.watchChangeAggregator = null;
        }, t.prototype.onWatchStreamOpen = function () {
          return h(this, void 0, void 0, function () {
            var n = this;
            return p(this, function (t) {
              return Ur(this.listenTargets, function (t, e) {
                n.sendWatchRequest(e);
              }), [2];
            });
          });
        }, t.prototype.onWatchStreamClose = function (e) {
          return h(this, void 0, void 0, function () {
            return p(this, function (t) {
              return void 0 === e && Or(!this.shouldStartWatchStream(), "Watch stream was stopped gracefully while still needed."), this.cleanUpWatchStreamState(), this.shouldStartWatchStream() ? (this.onlineStateTracker.handleWatchStreamFailure(e), this.startWatchStream()) : this.onlineStateTracker.set(Os.Unknown), [2];
            });
          });
        }, t.prototype.onWatchStreamChange = function (n, r) {
          return h(this, void 0, void 0, function () {
            var e;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return this.onlineStateTracker.set(Os.Online), n instanceof ou && n.state === Js.Removed && n.cause ? [2, this.handleTargetError(n)] : (n instanceof ru ? this.watchChangeAggregator.handleDocumentChange(n) : n instanceof iu ? this.watchChangeAggregator.handleExistenceFilter(n) : (Or(n instanceof ou, "Expected watchChange to be an instance of WatchTargetChange"), this.watchChangeAggregator.handleTargetChange(n)), r.isEqual(Vi.MIN) ? [3, 3] : [4, this.localStore.getLastRemoteSnapshotVersion()]);

                case 1:
                  return e = t.sent(), 0 <= r.compareTo(e) ? [4, this.raiseWatchSnapshot(r)] : [3, 3];

                case 2:
                  t.sent(), t.label = 3;

                case 3:
                  return [2];
              }
            });
          });
        }, t.prototype.raiseWatchSnapshot = function (r) {
          var i = this;
          Or(!r.isEqual(Vi.MIN), "Can't raise event for unknown SnapshotVersion");
          var t = this.watchChangeAggregator.createRemoteEvent(r);
          return Ur(t.targetChanges, function (t, e) {
            if (0 < e.resumeToken.length) {
              var n = i.listenTargets[t];
              n && (i.listenTargets[t] = n.copy({
                resumeToken: e.resumeToken,
                snapshotVersion: r
              }));
            }
          }), t.targetMismatches.forEach(function (t) {
            var e = i.listenTargets[t];

            if (e) {
              i.listenTargets[t] = e.copy({
                resumeToken: Pr()
              }), i.sendUnwatchRequest(t);
              var n = new ma(e.query, t, ha.ExistenceFilterMismatch, e.sequenceNumber);
              i.sendWatchRequest(n);
            }
          }), this.syncEngine.applyRemoteEvent(t);
        }, t.prototype.handleTargetError = function (t) {
          var n = this;
          Or(!!t.cause, "Handling target error without a cause");
          var r = t.cause,
              i = Promise.resolve();
          return t.targetIds.forEach(function (e) {
            i = i.then(function () {
              return h(n, void 0, void 0, function () {
                return p(this, function (t) {
                  return Fr(this.listenTargets, e) ? (delete this.listenTargets[e], this.watchChangeAggregator.removeTarget(e), [2, this.syncEngine.rejectListen(e, r)]) : [2];
                });
              });
            });
          }), i;
        }, t.prototype.fillWritePipeline = function () {
          return h(this, void 0, void 0, function () {
            var e, n;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return this.canAddToWritePipeline() ? (e = 0 < this.writePipeline.length ? this.writePipeline[this.writePipeline.length - 1].batchId : -1, [4, this.localStore.nextMutationBatch(e)]) : [3, 4];

                case 1:
                  return null !== (n = t.sent()) ? [3, 2] : (0 === this.writePipeline.length && this.writeStream.markIdle(), [3, 4]);

                case 2:
                  return this.addToWritePipeline(n), [4, this.fillWritePipeline()];

                case 3:
                  t.sent(), t.label = 4;

                case 4:
                  return this.shouldStartWriteStream() && this.startWriteStream(), [2];
              }
            });
          });
        }, t.prototype.canAddToWritePipeline = function () {
          return this.canUseNetwork() && this.writePipeline.length < 10;
        }, t.prototype.outstandingWrites = function () {
          return this.writePipeline.length;
        }, t.prototype.addToWritePipeline = function (t) {
          Or(this.canAddToWritePipeline(), "addToWritePipeline called when pipeline is full"), this.writePipeline.push(t), this.writeStream.isOpen() && this.writeStream.handshakeComplete && this.writeStream.writeMutations(t.mutations);
        }, t.prototype.shouldStartWriteStream = function () {
          return this.canUseNetwork() && !this.writeStream.isStarted() && 0 < this.writePipeline.length;
        }, t.prototype.startWriteStream = function () {
          Or(this.shouldStartWriteStream(), "startWriteStream() called when shouldStartWriteStream() is false."), this.writeStream.start();
        }, t.prototype.onWriteStreamOpen = function () {
          return h(this, void 0, void 0, function () {
            return p(this, function (t) {
              return this.writeStream.writeHandshake(), [2];
            });
          });
        }, t.prototype.onWriteHandshakeComplete = function () {
          var r = this;
          return this.localStore.setLastStreamToken(this.writeStream.lastStreamToken).then(function () {
            for (var t = 0, e = r.writePipeline; t < e.length; t++) {
              var n = e[t];
              r.writeStream.writeMutations(n.mutations);
            }
          }).catch(Aa);
        }, t.prototype.onMutationResult = function (t, e) {
          var n = this;
          Or(0 < this.writePipeline.length, "Got result for empty write pipeline");
          var r = this.writePipeline.shift(),
              i = io.from(r, t, e, this.writeStream.lastStreamToken);
          return this.syncEngine.applySuccessfulWrite(i).then(function () {
            return n.fillWritePipeline();
          });
        }, t.prototype.onWriteStreamClose = function (n) {
          return h(this, void 0, void 0, function () {
            var e = this;
            return p(this, function (t) {
              return void 0 === n && Or(!this.shouldStartWriteStream(), "Write stream was stopped gracefully while still needed."), n && 0 < this.writePipeline.length ? (void 0, [2, (this.writeStream.handshakeComplete ? this.handleWriteError(n) : this.handleHandshakeError(n)).then(function () {
                e.shouldStartWriteStream() && e.startWriteStream();
              })]) : [2];
            });
          });
        }, t.prototype.handleHandshakeError = function (e) {
          return h(this, void 0, void 0, function () {
            return p(this, function (t) {
              return js(e.code) ? (Ar(hu, "RemoteStore error before completed handshake; resetting stream token: ", this.writeStream.lastStreamToken), this.writeStream.lastStreamToken = Pr(), [2, this.localStore.setLastStreamToken(Pr()).catch(Aa)]) : [2];
            });
          });
        }, t.prototype.handleWriteError = function (i) {
          return h(this, void 0, void 0, function () {
            var n,
                r = this;
            return p(this, function (t) {
              return js(e = i.code) && e !== Lr.ABORTED ? (n = this.writePipeline.shift(), this.writeStream.inhibitBackoff(), [2, this.syncEngine.rejectFailedWrite(n.batchId, i).then(function () {
                return r.fillWritePipeline();
              })]) : [2];
              var e;
            });
          });
        }, t.prototype.createTransaction = function () {
          return new Us(this.datastore);
        }, t.prototype.restartNetwork = function () {
          return h(this, void 0, void 0, function () {
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return this.networkEnabled = !1, [4, this.disableNetworkInternal()];

                case 1:
                  return t.sent(), this.onlineStateTracker.set(Os.Unknown), [4, this.enableNetwork()];

                case 2:
                  return t.sent(), [2];
              }
            });
          });
        }, t.prototype.handleCredentialChange = function () {
          return h(this, void 0, void 0, function () {
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return this.canUseNetwork() ? (Ar(hu, "RemoteStore restarting streams for new credential"), [4, this.restartNetwork()]) : [3, 2];

                case 1:
                  t.sent(), t.label = 2;

                case 2:
                  return [2];
              }
            });
          });
        }, t.prototype.applyPrimaryState = function (e) {
          return h(this, void 0, void 0, function () {
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return (this.isPrimary = e) && this.networkEnabled ? [4, this.enableNetwork()] : [3, 2];

                case 1:
                  return t.sent(), [3, 4];

                case 2:
                  return e ? [3, 4] : [4, this.disableNetworkInternal()];

                case 3:
                  t.sent(), this.onlineStateTracker.set(Os.Unknown), t.label = 4;

                case 4:
                  return [2];
              }
            });
          });
        }, t;
      }(),
          fu = function () {
        function t(t, e) {
          if (jr("GeoPoint", arguments, 2), zr("GeoPoint", "number", 1, t), zr("GeoPoint", "number", 2, e), !isFinite(t) || t < -90 || 90 < t) throw new xr(Lr.INVALID_ARGUMENT, "Latitude must be a number between -90 and 90, but was: " + t);
          if (!isFinite(e) || e < -180 || 180 < e) throw new xr(Lr.INVALID_ARGUMENT, "Longitude must be a number between -180 and 180, but was: " + e);
          this._lat = t, this._long = e;
        }

        return Object.defineProperty(t.prototype, "latitude", {
          get: function get() {
            return this._lat;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "longitude", {
          get: function get() {
            return this._long;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.isEqual = function (t) {
          return this._lat === t._lat && this._long === t._long;
        }, t.prototype._compareTo = function (t) {
          return ui(this._lat, t._lat) || ui(this._long, t._long);
        }, t;
      }(),
          pu = function () {
        function n(t, e, n, r, i, o, a) {
          void 0 === e && (e = null), void 0 === n && (n = []), void 0 === r && (r = []), void 0 === i && (i = null), void 0 === o && (o = null), void 0 === a && (a = null), this.path = t, this.collectionGroup = e, this.explicitOrderBy = n, this.filters = r, this.limit = i, this.startAt = o, this.endAt = a, this.memoizedCanonicalId = null, this.memoizedOrderBy = null, this.startAt && this.assertValidBound(this.startAt), this.endAt && this.assertValidBound(this.endAt);
        }

        return n.atPath = function (t) {
          return new n(t);
        }, Object.defineProperty(n.prototype, "orderBy", {
          get: function get() {
            if (null === this.memoizedOrderBy) {
              var t = this.getInequalityFilterField(),
                  e = this.getFirstOrderByField();
              if (null !== t && null === e) t.isKeyField() ? this.memoizedOrderBy = [Iu] : this.memoizedOrderBy = [new Tu(t), Iu];else {
                Or(null === t || null !== e && t.isEqual(e), "First orderBy should match inequality field.");

                for (var n = !(this.memoizedOrderBy = []), r = 0, i = this.explicitOrderBy; r < i.length; r++) {
                  var o = i[r];
                  this.memoizedOrderBy.push(o), o.field.isKeyField() && (n = !0);
                }

                if (!n) {
                  var a = 0 < this.explicitOrderBy.length ? this.explicitOrderBy[this.explicitOrderBy.length - 1].dir : Eu.ASCENDING;
                  this.memoizedOrderBy.push(a === Eu.ASCENDING ? Iu : Cu);
                }
              }
            }

            return this.memoizedOrderBy;
          },
          enumerable: !0,
          configurable: !0
        }), n.prototype.addFilter = function (t) {
          Or(null == this.getInequalityFilterField() || !(t instanceof yu) || !t.isInequality() || t.field.isEqual(this.getInequalityFilterField()), "Query must only have one inequality field."), Or(!this.isDocumentQuery(), "No filtering allowed for document query");
          var e = this.filters.concat([t]);
          return new n(this.path, this.collectionGroup, this.explicitOrderBy.slice(), e, this.limit, this.startAt, this.endAt);
        }, n.prototype.addOrderBy = function (t) {
          Or(!this.startAt && !this.endAt, "Bounds must be set after orderBy");
          var e = this.explicitOrderBy.concat([t]);
          return new n(this.path, this.collectionGroup, e, this.filters.slice(), this.limit, this.startAt, this.endAt);
        }, n.prototype.withLimit = function (t) {
          return new n(this.path, this.collectionGroup, this.explicitOrderBy.slice(), this.filters.slice(), t, this.startAt, this.endAt);
        }, n.prototype.withStartAt = function (t) {
          return new n(this.path, this.collectionGroup, this.explicitOrderBy.slice(), this.filters.slice(), this.limit, t, this.endAt);
        }, n.prototype.withEndAt = function (t) {
          return new n(this.path, this.collectionGroup, this.explicitOrderBy.slice(), this.filters.slice(), this.limit, this.startAt, t);
        }, n.prototype.asCollectionQueryAtPath = function (t) {
          return new n(t, null, this.explicitOrderBy.slice(), this.filters.slice(), this.limit, this.startAt, this.endAt);
        }, n.prototype.canonicalId = function () {
          if (null === this.memoizedCanonicalId) {
            var t = this.path.canonicalString();
            this.isCollectionGroupQuery() && (t += "|cg:" + this.collectionGroup), t += "|f:";

            for (var e = 0, n = this.filters; e < n.length; e++) {
              t += n[e].canonicalId(), t += ",";
            }

            t += "|ob:";

            for (var r = 0, i = this.orderBy; r < i.length; r++) {
              t += i[r].canonicalId(), t += ",";
            }

            Ds(this.limit) || (t += "|l:", t += this.limit), this.startAt && (t += "|lb:", t += this.startAt.canonicalId()), this.endAt && (t += "|ub:", t += this.endAt.canonicalId()), this.memoizedCanonicalId = t;
          }

          return this.memoizedCanonicalId;
        }, n.prototype.toString = function () {
          var t = "Query(" + this.path.canonicalString();
          return this.isCollectionGroupQuery() && (t += " collectionGroup=" + this.collectionGroup), 0 < this.filters.length && (t += ", filters: [" + this.filters.join(", ") + "]"), Ds(this.limit) || (t += ", limit: " + this.limit), 0 < this.explicitOrderBy.length && (t += ", orderBy: [" + this.explicitOrderBy.join(", ") + "]"), this.startAt && (t += ", startAt: " + this.startAt.canonicalId()), this.endAt && (t += ", endAt: " + this.endAt.canonicalId()), t + ")";
        }, n.prototype.isEqual = function (t) {
          if (this.limit !== t.limit) return !1;
          if (this.orderBy.length !== t.orderBy.length) return !1;

          for (var e = 0; e < this.orderBy.length; e++) if (!this.orderBy[e].isEqual(t.orderBy[e])) return !1;

          if (this.filters.length !== t.filters.length) return !1;

          for (e = 0; e < this.filters.length; e++) if (!this.filters[e].isEqual(t.filters[e])) return !1;

          return this.collectionGroup === t.collectionGroup && !!this.path.isEqual(t.path) && !(null !== this.startAt ? !this.startAt.isEqual(t.startAt) : null !== t.startAt) && (null !== this.endAt ? this.endAt.isEqual(t.endAt) : null === t.endAt);
        }, n.prototype.docComparator = function (t, e) {
          for (var n = !1, r = 0, i = this.orderBy; r < i.length; r++) {
            var o = i[r],
                a = o.compare(t, e);
            if (0 !== a) return a;
            n = n || o.field.isKeyField();
          }

          return Or(n, "orderBy used that doesn't compare on key field"), 0;
        }, n.prototype.matches = function (t) {
          return this.matchesPathAndCollectionGroup(t) && this.matchesOrderBy(t) && this.matchesFilters(t) && this.matchesBounds(t);
        }, n.prototype.hasLimit = function () {
          return !Ds(this.limit);
        }, n.prototype.getFirstOrderByField = function () {
          return 0 < this.explicitOrderBy.length ? this.explicitOrderBy[0].field : null;
        }, n.prototype.getInequalityFilterField = function () {
          for (var t = 0, e = this.filters; t < e.length; t++) {
            var n = e[t];
            if (n instanceof yu && n.isInequality()) return n.field;
          }

          return null;
        }, n.prototype.findFilterOperator = function (t) {
          for (var e = 0, n = this.filters; e < n.length; e++) {
            var r = n[e];
            if (r instanceof yu && 0 <= t.indexOf(r.op)) return r.op;
          }

          return null;
        }, n.prototype.isDocumentQuery = function () {
          return Di.isDocumentKey(this.path) && null === this.collectionGroup && 0 === this.filters.length;
        }, n.prototype.isCollectionGroupQuery = function () {
          return null !== this.collectionGroup;
        }, n.prototype.matchesPathAndCollectionGroup = function (t) {
          var e = t.key.path;
          return null !== this.collectionGroup ? t.key.hasCollectionId(this.collectionGroup) && this.path.isPrefixOf(e) : Di.isDocumentKey(this.path) ? this.path.isEqual(e) : this.path.isImmediateParentOf(e);
        }, n.prototype.matchesOrderBy = function (t) {
          for (var e = 0, n = this.explicitOrderBy; e < n.length; e++) {
            var r = n[e];
            if (!r.field.isKeyField() && void 0 === t.field(r.field)) return !1;
          }

          return !0;
        }, n.prototype.matchesFilters = function (t) {
          for (var e = 0, n = this.filters; e < n.length; e++) {
            if (!n[e].matches(t)) return !1;
          }

          return !0;
        }, n.prototype.matchesBounds = function (t) {
          return !(this.startAt && !this.startAt.sortsBeforeDocument(this.orderBy, t)) && (!this.endAt || !this.endAt.sortsBeforeDocument(this.orderBy, t));
        }, n.prototype.assertValidBound = function (t) {
          Or(t.position.length <= this.orderBy.length, "Bound is longer than orderBy");
        }, n;
      }(),
          du = function du() {},
          mu = function () {
        function e(t) {
          this.name = t;
        }

        return e.fromString = function (t) {
          switch (t) {
            case "<":
              return e.LESS_THAN;

            case "<=":
              return e.LESS_THAN_OR_EQUAL;

            case "==":
              return e.EQUAL;

            case ">=":
              return e.GREATER_THAN_OR_EQUAL;

            case ">":
              return e.GREATER_THAN;

            case "array-contains":
              return e.ARRAY_CONTAINS;

            case "in":
              return e.IN;

            case "array-contains-any":
              return e.ARRAY_CONTAINS_ANY;

            default:
              return Mr("Unknown FieldFilter operator: " + t);
          }
        }, e.prototype.toString = function () {
          return this.name;
        }, e.prototype.isEqual = function (t) {
          return this.name === t.name;
        }, e.LESS_THAN = new e("<"), e.LESS_THAN_OR_EQUAL = new e("<="), e.EQUAL = new e("=="), e.GREATER_THAN = new e(">"), e.GREATER_THAN_OR_EQUAL = new e(">="), e.ARRAY_CONTAINS = new e("array-contains"), e.IN = new e("in"), e.ARRAY_CONTAINS_ANY = new e("array-contains-any"), e;
      }(),
          yu = function (i) {
        function r(t, e, n) {
          var r = i.call(this) || this;
          return r.field = t, r.op = e, r.value = n, r;
        }

        return s(r, i), r.create = function (t, e, n) {
          if (t.isKeyField()) return Or(n instanceof Ja, "Comparing on key, but filter value not a RefValue"), Or(e !== mu.ARRAY_CONTAINS && e !== mu.ARRAY_CONTAINS_ANY && e !== mu.IN, "'" + e.toString() + "' queries don't make sense on document keys."), new gu(t, e, n);

          if (n.isEqual(Va.INSTANCE)) {
            if (e !== mu.EQUAL) throw new xr(Lr.INVALID_ARGUMENT, "Invalid query. You can only perform equals comparisons on null.");
            return new r(t, e, n);
          }

          if (n.isEqual(Wa.NAN)) {
            if (e !== mu.EQUAL) throw new xr(Lr.INVALID_ARGUMENT, "Invalid query. You can only perform equals comparisons on NaN.");
            return new r(t, e, n);
          }

          return e === mu.ARRAY_CONTAINS ? new vu(t, n) : e === mu.IN ? (Or(n instanceof ts, "IN filter has invalid value: " + n.toString()), new bu(t, n)) : e === mu.ARRAY_CONTAINS_ANY ? (Or(n instanceof ts, "ARRAY_CONTAINS_ANY filter has invalid value: " + n.toString()), new wu(t, n)) : new r(t, e, n);
        }, r.prototype.matches = function (t) {
          var e = t.field(this.field);
          return void 0 !== e && this.value.typeOrder === e.typeOrder && this.matchesComparison(e.compareTo(this.value));
        }, r.prototype.matchesComparison = function (t) {
          switch (this.op) {
            case mu.LESS_THAN:
              return t < 0;

            case mu.LESS_THAN_OR_EQUAL:
              return t <= 0;

            case mu.EQUAL:
              return 0 === t;

            case mu.GREATER_THAN:
              return 0 < t;

            case mu.GREATER_THAN_OR_EQUAL:
              return 0 <= t;

            default:
              return Mr("Unknown FieldFilter operator: " + this.op);
          }
        }, r.prototype.isInequality = function () {
          return 0 <= [mu.LESS_THAN, mu.LESS_THAN_OR_EQUAL, mu.GREATER_THAN, mu.GREATER_THAN_OR_EQUAL].indexOf(this.op);
        }, r.prototype.canonicalId = function () {
          return this.field.canonicalString() + this.op.toString() + this.value.toString();
        }, r.prototype.isEqual = function (t) {
          return t instanceof r && this.op.isEqual(t.op) && this.field.isEqual(t.field) && this.value.isEqual(t.value);
        }, r.prototype.toString = function () {
          return this.field.canonicalString() + " " + this.op + " " + this.value.value();
        }, r;
      }(du),
          gu = function (r) {
        function t(t, e, n) {
          return r.call(this, t, e, n) || this;
        }

        return s(t, r), t.prototype.matches = function (t) {
          var e = this.value,
              n = Di.comparator(t.key, e.key);
          return this.matchesComparison(n);
        }, t;
      }(yu),
          vu = function (n) {
        function t(t, e) {
          return n.call(this, t, mu.ARRAY_CONTAINS, e) || this;
        }

        return s(t, n), t.prototype.matches = function (t) {
          var e = t.field(this.field);
          return e instanceof ts && e.contains(this.value);
        }, t;
      }(yu),
          bu = function (n) {
        function t(t, e) {
          return n.call(this, t, mu.IN, e) || this;
        }

        return s(t, n), t.prototype.matches = function (t) {
          var e = this.value,
              n = t.field(this.field);
          return void 0 !== n && e.contains(n);
        }, t;
      }(yu),
          wu = function (n) {
        function t(t, e) {
          return n.call(this, t, mu.ARRAY_CONTAINS_ANY, e) || this;
        }

        return s(t, n), t.prototype.matches = function (t) {
          var e = this.value,
              n = t.field(this.field);
          return n instanceof ts && n.internalValue.some(function (t) {
            return e.contains(t);
          });
        }, t;
      }(yu),
          Eu = function () {
        function t(t) {
          this.name = t;
        }

        return t.prototype.toString = function () {
          return this.name;
        }, t.ASCENDING = new t("asc"), t.DESCENDING = new t("desc"), t;
      }(),
          Su = function () {
        function t(t, e) {
          this.position = t, this.before = e;
        }

        return t.prototype.canonicalId = function () {
          for (var t = this.before ? "b:" : "a:", e = 0, n = this.position; e < n.length; e++) {
            t += n[e].toString();
          }

          return t;
        }, t.prototype.sortsBeforeDocument = function (t, e) {
          Or(this.position.length <= t.length, "Bound has more components than query's orderBy");

          for (var n = 0, r = 0; r < this.position.length; r++) {
            var i = t[r],
                o = this.position[r];
            if (i.field.isKeyField()) Or(o instanceof Ja, "Bound has a non-key value where the key path is being used."), n = Di.comparator(o.key, e.key);else {
              var a = e.field(i.field);
              Or(void 0 !== a, "Field should exist since document matched the orderBy already."), n = o.compareTo(a);
            }
            if (i.dir === Eu.DESCENDING && (n *= -1), 0 !== n) break;
          }

          return this.before ? n <= 0 : n < 0;
        }, t.prototype.isEqual = function (t) {
          if (null === t) return !1;
          if (this.before !== t.before || this.position.length !== t.position.length) return !1;

          for (var e = 0; e < this.position.length; e++) {
            var n = this.position[e],
                r = t.position[e];
            if (!n.isEqual(r)) return !1;
          }

          return !0;
        }, t;
      }(),
          Tu = function () {
        function t(t, e) {
          this.field = t, void 0 === e && (e = Eu.ASCENDING), this.dir = e, this.isKeyOrderBy = t.isKeyField();
        }

        return t.prototype.compare = function (t, e) {
          var n = this.isKeyOrderBy ? Mo.compareByKey(t, e) : Mo.compareByField(this.field, t, e);

          switch (this.dir) {
            case Eu.ASCENDING:
              return n;

            case Eu.DESCENDING:
              return -1 * n;

            default:
              return Mr("Unknown direction: " + this.dir);
          }
        }, t.prototype.canonicalId = function () {
          return this.field.canonicalString() + this.dir.toString();
        }, t.prototype.toString = function () {
          return this.field.canonicalString() + " (" + this.dir + ")";
        }, t.prototype.isEqual = function (t) {
          return this.dir === t.dir && this.field.isEqual(t.field);
        }, t;
      }(),
          Iu = new Tu(Ci.keyField(), Eu.ASCENDING),
          Cu = new Tu(Ci.keyField(), Eu.DESCENDING),
          Du = function () {
        function e() {
          this.isIdempotent = !0;
        }

        return e.prototype.applyToLocalView = function (t, e) {
          return new Ya(e, t);
        }, e.prototype.applyToRemoteDocument = function (t, e) {
          return e;
        }, e.prototype.isEqual = function (t) {
          return t instanceof e;
        }, e.instance = new e(), e;
      }(),
          Nu = function () {
        function e(t) {
          this.elements = t, this.isIdempotent = !0;
        }

        return e.prototype.applyToLocalView = function (t, e) {
          return this.apply(t);
        }, e.prototype.applyToRemoteDocument = function (t, e) {
          return this.apply(t);
        }, e.prototype.apply = function (t) {
          for (var n = Ru(t), e = function e(_e3) {
            n.find(function (t) {
              return t.isEqual(_e3);
            }) || n.push(_e3);
          }, r = 0, i = this.elements; r < i.length; r++) {
            e(i[r]);
          }

          return new ts(n);
        }, e.prototype.isEqual = function (t) {
          return t instanceof e && ci(t.elements, this.elements);
        }, e;
      }(),
          Au = function () {
        function e(t) {
          this.elements = t, this.isIdempotent = !0;
        }

        return e.prototype.applyToLocalView = function (t, e) {
          return this.apply(t);
        }, e.prototype.applyToRemoteDocument = function (t, e) {
          return this.apply(t);
        }, e.prototype.apply = function (t) {
          for (var n = Ru(t), e = function e(_e4) {
            n = n.filter(function (t) {
              return !t.isEqual(_e4);
            });
          }, r = 0, i = this.elements; r < i.length; r++) {
            e(i[r]);
          }

          return new ts(n);
        }, e.prototype.isEqual = function (t) {
          return t instanceof e && ci(t.elements, this.elements);
        }, e;
      }(),
          ku = function () {
        function e(t) {
          this.operand = t, this.isIdempotent = !1;
        }

        return e.prototype.applyToLocalView = function (t, e) {
          if (t instanceof Ga && this.operand instanceof Ga) {
            var n = t.internalValue + this.operand.internalValue;
            return new Ga(n);
          }

          if (t instanceof Ba) {
            n = t.internalValue + this.operand.internalValue;
            return new Wa(n);
          }

          return this.operand;
        }, e.prototype.applyToRemoteDocument = function (t, e) {
          return Or(null !== e, "Didn't receive transformResult for NUMERIC_ADD transform"), e;
        }, e.prototype.isEqual = function (t) {
          return t instanceof e && this.operand.isEqual(t.operand);
        }, e;
      }();

      function Ru(t) {
        return t instanceof ts ? t.internalValue.slice() : [];
      }

      var Mu,
          Ou,
          _u = function () {
        function t(t) {
          this.count = t;
        }

        return t.prototype.isEqual = function (t) {
          return t && t.count === this.count;
        }, t;
      }(),
          Pu = ((Mu = {})[Eu.ASCENDING.name] = "ASCENDING", Mu[Eu.DESCENDING.name] = "DESCENDING", Mu),
          Lu = ((Ou = {})[mu.LESS_THAN.name] = "LESS_THAN", Ou[mu.LESS_THAN_OR_EQUAL.name] = "LESS_THAN_OR_EQUAL", Ou[mu.GREATER_THAN.name] = "GREATER_THAN", Ou[mu.GREATER_THAN_OR_EQUAL.name] = "GREATER_THAN_OR_EQUAL", Ou[mu.EQUAL.name] = "EQUAL", Ou[mu.ARRAY_CONTAINS.name] = "ARRAY_CONTAINS", Ou[mu.IN.name] = "IN", Ou[mu.ARRAY_CONTAINS_ANY.name] = "ARRAY_CONTAINS_ANY", Ou),
          xu = new RegExp(/^\d{4}-\d\d-\d\dT\d\d:\d\d:\d\d(?:\.(\d+))?Z$/);

      function qu(t, e) {
        Or(!Ds(t), e + " is missing");
      }

      function Fu(t) {
        return "number" == typeof t ? t : "string" == typeof t ? Number(t) : Mr("can't parse " + t);
      }

      var Vu = function () {
        function t(t, e) {
          this.databaseId = t, this.options = e;
        }

        return t.prototype.emptyByteString = function () {
          return this.options.useProto3Json ? "" : new Uint8Array(0);
        }, t.prototype.unsafeCastProtoByteString = function (t) {
          return t;
        }, t.prototype.fromRpcStatus = function (t) {
          var e = void 0 === t.code ? Lr.UNKNOWN : Gs(t.code);
          return new xr(e, t.message || "");
        }, t.prototype.toInt32Value = function (t) {
          return Ds(t) ? void 0 : {
            value: t
          };
        }, t.prototype.fromInt32Value = function (t) {
          var e;
          return Ds(e = "object" == typeof t ? t.value : t) ? null : e;
        }, t.prototype.toTimestamp = function (t) {
          return {
            seconds: "" + t.seconds,
            nanos: t.nanoseconds
          };
        }, t.prototype.fromTimestamp = function (t) {
          if ("string" == typeof t) return this.fromIso8601String(t);
          Or(!!t, "Cannot deserialize null or undefined timestamp.");
          var e = Fu(t.seconds || "0"),
              n = t.nanos || 0;
          return new Fi(e, n);
        }, t.prototype.fromIso8601String = function (t) {
          var e = 0,
              n = xu.exec(t);

          if (Or(!!n, "invalid timestamp: " + t), n[1]) {
            var r = n[1];
            r = (r + "000000000").substr(0, 9), e = Number(r);
          }

          var i = new Date(t),
              o = Math.floor(i.getTime() / 1e3);
          return new Fi(o, e);
        }, t.prototype.toBytes = function (t) {
          return this.options.useProto3Json ? t.toBase64() : this.unsafeCastProtoByteString(t.toUint8Array());
        }, t.prototype.fromBlob = function (t) {
          return "string" == typeof t ? (Or(this.options.useProto3Json, "Expected bytes to be passed in as Uint8Array, but got a string instead."), mi.fromBase64String(t)) : (Or(!this.options.useProto3Json, "Expected bytes to be passed in as Uint8Array, but got a string instead."), mi.fromUint8Array(t));
        }, t.prototype.toVersion = function (t) {
          return this.toTimestamp(t.toTimestamp());
        }, t.prototype.fromVersion = function (t) {
          return Or(!!t, "Trying to deserialize version that isn't set"), Vi.fromTimestamp(this.fromTimestamp(t));
        }, t.prototype.toResourceName = function (t, e) {
          return this.fullyQualifiedPrefixPath(t).child("documents").child(e).canonicalString();
        }, t.prototype.fromResourceName = function (t) {
          var e = Ti.fromString(t);
          return Or(this.isValidResourceName(e), "Tried to deserialize invalid key " + e.toString()), e;
        }, t.prototype.toName = function (t) {
          return this.toResourceName(this.databaseId, t.path);
        }, t.prototype.fromName = function (t) {
          var e = this.fromResourceName(t);
          return Or(e.get(1) === this.databaseId.projectId, "Tried to deserialize key from different project: " + e.get(1) + " vs " + this.databaseId.projectId), Or(!e.get(3) && !this.databaseId.database || e.get(3) === this.databaseId.database, "Tried to deserialize key from different database: " + e.get(3) + " vs " + this.databaseId.database), new Di(this.extractLocalPathFromResourceName(e));
        }, t.prototype.toQueryPath = function (t) {
          return this.toResourceName(this.databaseId, t);
        }, t.prototype.fromQueryPath = function (t) {
          var e = this.fromResourceName(t);
          return 4 === e.length ? Ti.EMPTY_PATH : this.extractLocalPathFromResourceName(e);
        }, Object.defineProperty(t.prototype, "encodedDatabaseId", {
          get: function get() {
            return new Ti(["projects", this.databaseId.projectId, "databases", this.databaseId.database]).canonicalString();
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.fullyQualifiedPrefixPath = function (t) {
          return new Ti(["projects", t.projectId, "databases", t.database]);
        }, t.prototype.extractLocalPathFromResourceName = function (t) {
          return Or(4 < t.length && "documents" === t.get(4), "tried to deserialize invalid key " + t.toString()), t.popFirst(5);
        }, t.prototype.isValidResourceName = function (t) {
          return 4 <= t.length && "projects" === t.get(0) && "databases" === t.get(2);
        }, t.prototype.toValue = function (t) {
          if (t instanceof Va) return {
            nullValue: "NULL_VALUE"
          };
          if (t instanceof Ua) return {
            booleanValue: t.value()
          };
          if (t instanceof Ga) return {
            integerValue: "" + t.value()
          };

          if (t instanceof Wa) {
            var e = t.value();

            if (this.options.useProto3Json) {
              if (isNaN(e)) return {
                doubleValue: "NaN"
              };
              if (e === 1 / 0) return {
                doubleValue: "Infinity"
              };
              if (e === -1 / 0) return {
                doubleValue: "-Infinity"
              };
            }

            return {
              doubleValue: t.value()
            };
          }

          return t instanceof za ? {
            stringValue: t.value()
          } : t instanceof Za ? {
            mapValue: this.toMapValue(t)
          } : t instanceof ts ? {
            arrayValue: this.toArrayValue(t)
          } : t instanceof Ha ? {
            timestampValue: this.toTimestamp(t.internalValue)
          } : t instanceof $a ? {
            geoPointValue: {
              latitude: t.value().latitude,
              longitude: t.value().longitude
            }
          } : t instanceof Xa ? {
            bytesValue: this.toBytes(t.value())
          } : t instanceof Ja ? {
            referenceValue: this.toResourceName(t.databaseId, t.key.path)
          } : Mr("Unknown FieldValue " + JSON.stringify(t));
        }, t.prototype.fromValue = function (t) {
          var e = this;
          if ("nullValue" in t) return Va.INSTANCE;
          if ("booleanValue" in t) return Ua.of(t.booleanValue);
          if ("integerValue" in t) return new Ga(Fu(t.integerValue));

          if ("doubleValue" in t) {
            if (this.options.useProto3Json) {
              if ("NaN" === t.doubleValue) return Wa.NAN;
              if ("Infinity" === t.doubleValue) return Wa.POSITIVE_INFINITY;
              if ("-Infinity" === t.doubleValue) return Wa.NEGATIVE_INFINITY;
            }

            return new Wa(t.doubleValue);
          }

          if ("stringValue" in t) return new za(t.stringValue);
          if ("mapValue" in t) return this.fromFields(t.mapValue.fields || {});

          if ("arrayValue" in t) {
            qu(t.arrayValue, "arrayValue");
            var n = t.arrayValue.values || [];
            return new ts(n.map(function (t) {
              return e.fromValue(t);
            }));
          }

          if ("timestampValue" in t) return qu(t.timestampValue, "timestampValue"), new Ha(this.fromTimestamp(t.timestampValue));

          if ("geoPointValue" in t) {
            qu(t.geoPointValue, "geoPointValue");
            var r = t.geoPointValue.latitude || 0,
                i = t.geoPointValue.longitude || 0;
            return new $a(new fu(r, i));
          }

          if ("bytesValue" in t) {
            qu(t.bytesValue, "bytesValue");
            var o = this.fromBlob(t.bytesValue);
            return new Xa(o);
          }

          if ("referenceValue" in t) {
            qu(t.referenceValue, "referenceValue");
            var a = this.fromResourceName(t.referenceValue),
                s = new bi(a.get(1), a.get(3)),
                u = new Di(this.extractLocalPathFromResourceName(a));
            return new Ja(s, u);
          }

          return Mr("Unknown Value proto " + JSON.stringify(t));
        }, t.prototype.toMutationDocument = function (t, e) {
          return {
            name: this.toName(t),
            fields: this.toFields(e)
          };
        }, t.prototype.toDocument = function (t) {
          return Or(!t.hasLocalMutations, "Can't serialize documents with mutations."), {
            name: this.toName(t.key),
            fields: this.toFields(t.data),
            updateTime: this.toTimestamp(t.version.toTimestamp())
          };
        }, t.prototype.fromDocument = function (t, e) {
          return new Mo(this.fromName(t.name), this.fromVersion(t.updateTime), this.fromFields(t.fields || {}), {
            hasCommittedMutations: !!e
          });
        }, t.prototype.toFields = function (t) {
          var n = this,
              r = {};
          return t.forEach(function (t, e) {
            r[t] = n.toValue(e);
          }), r;
        }, t.prototype.fromFields = function (t) {
          var n = this,
              e = t,
              r = Za.EMPTY;
          return Br(e, function (t, e) {
            r = r.set(new Ci([t]), n.fromValue(e));
          }), r;
        }, t.prototype.toMapValue = function (t) {
          return {
            fields: this.toFields(t)
          };
        }, t.prototype.toArrayValue = function (t) {
          var e = this,
              n = [];
          return t.forEach(function (t) {
            n.push(e.toValue(t));
          }), {
            values: n
          };
        }, t.prototype.fromFound = function (t) {
          Or(!!t.found, "Tried to deserialize a found document from a missing document."), qu(t.found.name, "doc.found.name"), qu(t.found.updateTime, "doc.found.updateTime");
          var e = this.fromName(t.found.name),
              n = this.fromVersion(t.found.updateTime),
              r = this.fromFields(t.found.fields || {});
          return new Mo(e, n, r, {}, t.found);
        }, t.prototype.fromMissing = function (t) {
          Or(!!t.missing, "Tried to deserialize a missing document from a found document."), Or(!!t.readTime, "Tried to deserialize a missing document without a read time.");
          var e = this.fromName(t.missing),
              n = this.fromVersion(t.readTime);
          return new Oo(e, n);
        }, t.prototype.fromMaybeDocument = function (t) {
          return "found" in t ? this.fromFound(t) : "missing" in t ? this.fromMissing(t) : Mr("invalid batch get response: " + JSON.stringify(t));
        }, t.prototype.toWatchTargetChangeState = function (t) {
          switch (t) {
            case Js.Added:
              return "ADD";

            case Js.Current:
              return "CURRENT";

            case Js.NoChange:
              return "NO_CHANGE";

            case Js.Removed:
              return "REMOVE";

            case Js.Reset:
              return "RESET";

            default:
              return Mr("Unknown WatchTargetChangeState: " + t);
          }
        }, t.prototype.toTestWatchChange = function (t) {
          if (t instanceof iu) return {
            filter: {
              count: t.existenceFilter.count,
              targetId: t.targetId
            }
          };

          if (t instanceof ru) {
            if (t.newDoc instanceof Mo) {
              var e = t.newDoc;
              return {
                documentChange: {
                  document: {
                    name: this.toName(e.key),
                    fields: this.toFields(e.data),
                    updateTime: this.toVersion(e.version)
                  },
                  targetIds: t.updatedTargetIds,
                  removedTargetIds: t.removedTargetIds
                }
              };
            }

            if (t.newDoc instanceof Oo) {
              e = t.newDoc;
              return {
                documentDelete: {
                  document: this.toName(e.key),
                  readTime: this.toVersion(e.version),
                  removedTargetIds: t.removedTargetIds
                }
              };
            }

            if (null === t.newDoc) return {
              documentRemove: {
                document: this.toName(t.key),
                removedTargetIds: t.removedTargetIds
              }
            };
          }

          if (t instanceof ou) {
            var n = void 0;
            return t.cause && (n = {
              code: function (t) {
                if (void 0 === t) return Bs.OK;

                switch (t) {
                  case Lr.OK:
                    return Bs.OK;

                  case Lr.CANCELLED:
                    return Bs.CANCELLED;

                  case Lr.UNKNOWN:
                    return Bs.UNKNOWN;

                  case Lr.DEADLINE_EXCEEDED:
                    return Bs.DEADLINE_EXCEEDED;

                  case Lr.RESOURCE_EXHAUSTED:
                    return Bs.RESOURCE_EXHAUSTED;

                  case Lr.INTERNAL:
                    return Bs.INTERNAL;

                  case Lr.UNAVAILABLE:
                    return Bs.UNAVAILABLE;

                  case Lr.UNAUTHENTICATED:
                    return Bs.UNAUTHENTICATED;

                  case Lr.INVALID_ARGUMENT:
                    return Bs.INVALID_ARGUMENT;

                  case Lr.NOT_FOUND:
                    return Bs.NOT_FOUND;

                  case Lr.ALREADY_EXISTS:
                    return Bs.ALREADY_EXISTS;

                  case Lr.PERMISSION_DENIED:
                    return Bs.PERMISSION_DENIED;

                  case Lr.FAILED_PRECONDITION:
                    return Bs.FAILED_PRECONDITION;

                  case Lr.ABORTED:
                    return Bs.ABORTED;

                  case Lr.OUT_OF_RANGE:
                    return Bs.OUT_OF_RANGE;

                  case Lr.UNIMPLEMENTED:
                    return Bs.UNIMPLEMENTED;

                  case Lr.DATA_LOSS:
                    return Bs.DATA_LOSS;

                  default:
                    return Mr("Unknown status code: " + t);
                }
              }(t.cause.code),
              message: t.cause.message
            }), {
              targetChange: {
                targetChangeType: this.toWatchTargetChangeState(t.state),
                targetIds: t.targetIds,
                resumeToken: this.unsafeCastProtoByteString(t.resumeToken),
                cause: n
              }
            };
          }

          return Mr("Unrecognized watch change: " + JSON.stringify(t));
        }, t.prototype.fromWatchChange = function (t) {
          var e;

          if ("targetChange" in t) {
            qu(t.targetChange, "targetChange");
            var n = this.fromWatchTargetChangeState(t.targetChange.targetChangeType || "NO_CHANGE"),
                r = t.targetChange.targetIds || [],
                i = t.targetChange.resumeToken || this.emptyByteString(),
                o = t.targetChange.cause,
                a = o && this.fromRpcStatus(o);
            e = new ou(n, r, i, a || null);
          } else if ("documentChange" in t) {
            qu(t.documentChange, "documentChange"), qu(t.documentChange.document, "documentChange.name"), qu(t.documentChange.document.name, "documentChange.document.name"), qu(t.documentChange.document.updateTime, "documentChange.document.updateTime");
            var s = t.documentChange,
                u = this.fromName(s.document.name),
                c = this.fromVersion(s.document.updateTime),
                h = this.fromFields(s.document.fields || {}),
                l = new Mo(u, c, h, {}, s.document),
                f = s.targetIds || [],
                p = s.removedTargetIds || [];
            e = new ru(f, p, l.key, l);
          } else if ("documentDelete" in t) {
            qu(t.documentDelete, "documentDelete"), qu(t.documentDelete.document, "documentDelete.document");
            var d = t.documentDelete;
            u = this.fromName(d.document), c = d.readTime ? this.fromVersion(d.readTime) : Vi.forDeletedDoc(), l = new Oo(u, c), p = d.removedTargetIds || [];
            e = new ru([], p, l.key, l);
          } else if ("documentRemove" in t) {
            qu(t.documentRemove, "documentRemove"), qu(t.documentRemove.document, "documentRemove");
            var m = t.documentRemove;
            u = this.fromName(m.document), p = m.removedTargetIds || [];
            e = new ru([], p, u, null);
          } else {
            if (!("filter" in t)) return Mr("Unknown change type " + JSON.stringify(t));
            qu(t.filter, "filter"), qu(t.filter.targetId, "filter.targetId");
            var y = t.filter,
                g = y.count || 0,
                v = new _u(g),
                b = y.targetId;
            e = new iu(b, v);
          }

          return e;
        }, t.prototype.fromWatchTargetChangeState = function (t) {
          return "NO_CHANGE" === t ? Js.NoChange : "ADD" === t ? Js.Added : "REMOVE" === t ? Js.Removed : "CURRENT" === t ? Js.Current : "RESET" === t ? Js.Reset : Mr("Got unexpected TargetChange.state: " + t);
        }, t.prototype.versionFromListenResponse = function (t) {
          if (!("targetChange" in t)) return Vi.MIN;
          var e = t.targetChange;
          return e.targetIds && e.targetIds.length ? Vi.MIN : e.readTime ? this.fromVersion(e.readTime) : Vi.MIN;
        }, t.prototype.toMutation = function (t) {
          var e,
              n = this;
          if (t instanceof as) e = {
            update: this.toMutationDocument(t.key, t.value)
          };else if (t instanceof cs) e = {
            delete: this.toName(t.key)
          };else if (t instanceof ss) e = {
            update: this.toMutationDocument(t.key, t.data),
            updateMask: this.toDocumentMask(t.fieldMask)
          };else {
            if (!(t instanceof us)) return Mr("Unknown mutation type " + t.type);
            e = {
              transform: {
                document: this.toName(t.key),
                fieldTransforms: t.fieldTransforms.map(function (t) {
                  return n.toFieldTransform(t);
                })
              }
            };
          }
          return t.precondition.isNone || (e.currentDocument = this.toPrecondition(t.precondition)), e;
        }, t.prototype.fromMutation = function (t) {
          var e = this,
              n = t.currentDocument ? this.fromPrecondition(t.currentDocument) : is.NONE;

          if (t.update) {
            qu(t.update.name, "name");
            var r = this.fromName(t.update.name),
                i = this.fromFields(t.update.fields || {});

            if (t.updateMask) {
              var o = this.fromDocumentMask(t.updateMask);
              return new ss(r, i, o, n);
            }

            return new as(r, i, n);
          }

          if (t.delete) {
            r = this.fromName(t.delete);
            return new cs(r, n);
          }

          if (t.transform) {
            r = this.fromName(t.transform.document);
            var a = t.transform.fieldTransforms.map(function (t) {
              return e.fromFieldTransform(t);
            });
            return Or(!0 === n.exists, 'Transforms only support precondition "exists == true"'), new us(r, a);
          }

          return Mr("unknown mutation proto: " + JSON.stringify(t));
        }, t.prototype.toPrecondition = function (t) {
          return Or(!t.isNone, "Can't serialize an empty precondition"), void 0 !== t.updateTime ? {
            updateTime: this.toVersion(t.updateTime)
          } : void 0 !== t.exists ? {
            exists: t.exists
          } : Mr("Unknown precondition");
        }, t.prototype.fromPrecondition = function (t) {
          return void 0 !== t.updateTime ? is.updateTime(this.fromVersion(t.updateTime)) : void 0 !== t.exists ? is.exists(t.exists) : is.NONE;
        }, t.prototype.fromWriteResult = function (t, e) {
          var n = this,
              r = t.updateTime ? this.fromVersion(t.updateTime) : this.fromVersion(e),
              i = null;
          return t.transformResults && 0 < t.transformResults.length && (i = t.transformResults.map(function (t) {
            return n.fromValue(t);
          })), new rs(r, i);
        }, t.prototype.fromWriteResults = function (t, e) {
          var n = this;
          return t && 0 < t.length ? (Or(void 0 !== e, "Received a write result without a commit time"), t.map(function (t) {
            return n.fromWriteResult(t, e);
          })) : [];
        }, t.prototype.toFieldTransform = function (t) {
          var e = this,
              n = t.transform;
          if (n instanceof Du) return {
            fieldPath: t.field.canonicalString(),
            setToServerValue: "REQUEST_TIME"
          };
          if (n instanceof Nu) return {
            fieldPath: t.field.canonicalString(),
            appendMissingElements: {
              values: n.elements.map(function (t) {
                return e.toValue(t);
              })
            }
          };
          if (n instanceof Au) return {
            fieldPath: t.field.canonicalString(),
            removeAllFromArray: {
              values: n.elements.map(function (t) {
                return e.toValue(t);
              })
            }
          };
          if (n instanceof ku) return {
            fieldPath: t.field.canonicalString(),
            increment: this.toValue(n.operand)
          };
          throw Mr("Unknown transform: " + t.transform);
        }, t.prototype.fromFieldTransform = function (t) {
          var e = this,
              n = null;
          if ("setToServerValue" in t) Or("REQUEST_TIME" === t.setToServerValue, "Unknown server value transform proto: " + JSON.stringify(t)), n = Du.instance;else if ("appendMissingElements" in t) {
            var r = t.appendMissingElements.values || [];
            n = new Nu(r.map(function (t) {
              return e.fromValue(t);
            }));
          } else if ("removeAllFromArray" in t) {
            r = t.removeAllFromArray.values || [];
            n = new Au(r.map(function (t) {
              return e.fromValue(t);
            }));
          } else if ("increment" in t) {
            var i = this.fromValue(t.increment);
            Or(i instanceof Ba, "NUMERIC_ADD transform requires a NumberValue"), n = new ku(i);
          } else Mr("Unknown transform proto: " + JSON.stringify(t));
          var o = Ci.fromServerFormat(t.fieldPath);
          return new ns(o, n);
        }, t.prototype.toDocumentsTarget = function (t) {
          return {
            documents: [this.toQueryPath(t.path)]
          };
        }, t.prototype.fromDocumentsTarget = function (t) {
          var e = t.documents.length;
          Or(1 === e, "DocumentsTarget contained other than 1 document: " + e);
          var n = t.documents[0];
          return pu.atPath(this.fromQueryPath(n));
        }, t.prototype.toQueryTarget = function (t) {
          var e = {
            structuredQuery: {}
          },
              n = t.path;
          null !== t.collectionGroup ? (Or(n.length % 2 == 0, "Collection Group queries should be within a document path or root."), e.parent = this.toQueryPath(n), e.structuredQuery.from = [{
            collectionId: t.collectionGroup,
            allDescendants: !0
          }]) : (Or(n.length % 2 != 0, "Document queries with filters are not supported."), e.parent = this.toQueryPath(n.popLast()), e.structuredQuery.from = [{
            collectionId: n.lastSegment()
          }]);
          var r = this.toFilter(t.filters);
          r && (e.structuredQuery.where = r);
          var i = this.toOrder(t.orderBy);
          i && (e.structuredQuery.orderBy = i);
          var o = this.toInt32Value(t.limit);
          return void 0 !== o && (e.structuredQuery.limit = o), t.startAt && (e.structuredQuery.startAt = this.toCursor(t.startAt)), t.endAt && (e.structuredQuery.endAt = this.toCursor(t.endAt)), e;
        }, t.prototype.fromQueryTarget = function (t) {
          var e = this.fromQueryPath(t.parent),
              n = t.structuredQuery,
              r = n.from ? n.from.length : 0,
              i = null;

          if (0 < r) {
            Or(1 === r, "StructuredQuery.from with more than one collection is not supported.");
            var o = n.from[0];
            o.allDescendants ? i = o.collectionId : e = e.child(o.collectionId);
          }

          var a = [];
          n.where && (a = this.fromFilter(n.where));
          var s = [];
          n.orderBy && (s = this.fromOrder(n.orderBy));
          var u = null;
          n.limit && (u = this.fromInt32Value(n.limit));
          var c = null;
          n.startAt && (c = this.fromCursor(n.startAt));
          var h = null;
          return n.endAt && (h = this.fromCursor(n.endAt)), new pu(e, i, s, a, u, c, h);
        }, t.prototype.toListenRequestLabels = function (t) {
          var e = this.toLabel(t.purpose);
          return null == e ? null : {
            "goog-listen-tags": e
          };
        }, t.prototype.toLabel = function (t) {
          switch (t) {
            case ha.Listen:
              return null;

            case ha.ExistenceFilterMismatch:
              return "existence-filter-mismatch";

            case ha.LimboResolution:
              return "limbo-document";

            default:
              return Mr("Unrecognized query purpose: " + t);
          }
        }, t.prototype.toTarget = function (t) {
          var e,
              n = t.query;
          return (e = n.isDocumentQuery() ? {
            documents: this.toDocumentsTarget(n)
          } : {
            query: this.toQueryTarget(n)
          }).targetId = t.targetId, 0 < t.resumeToken.length && (e.resumeToken = this.unsafeCastProtoByteString(t.resumeToken)), e;
        }, t.prototype.toFilter = function (t) {
          var e = this;

          if (0 !== t.length) {
            var n = t.map(function (t) {
              return t instanceof yu ? e.toUnaryOrFieldFilter(t) : Mr("Unrecognized filter: " + JSON.stringify(t));
            });
            return 1 === n.length ? n[0] : {
              compositeFilter: {
                op: "AND",
                filters: n
              }
            };
          }
        }, t.prototype.fromFilter = function (t) {
          var e = this;
          return t ? void 0 !== t.unaryFilter ? [this.fromUnaryFilter(t)] : void 0 !== t.fieldFilter ? [this.fromFieldFilter(t)] : void 0 !== t.compositeFilter ? t.compositeFilter.filters.map(function (t) {
            return e.fromFilter(t);
          }).reduce(function (t, e) {
            return t.concat(e);
          }) : Mr("Unknown filter: " + JSON.stringify(t)) : [];
        }, t.prototype.toOrder = function (t) {
          var e = this;
          if (0 !== t.length) return t.map(function (t) {
            return e.toPropertyOrder(t);
          });
        }, t.prototype.fromOrder = function (t) {
          var e = this;
          return t.map(function (t) {
            return e.fromPropertyOrder(t);
          });
        }, t.prototype.toCursor = function (t) {
          var e = this;
          return {
            before: t.before,
            values: t.position.map(function (t) {
              return e.toValue(t);
            })
          };
        }, t.prototype.fromCursor = function (t) {
          var e = this,
              n = !!t.before,
              r = t.values.map(function (t) {
            return e.fromValue(t);
          });
          return new Su(r, n);
        }, t.prototype.toDirection = function (t) {
          return Pu[t.name];
        }, t.prototype.fromDirection = function (t) {
          switch (t) {
            case "ASCENDING":
              return Eu.ASCENDING;

            case "DESCENDING":
              return Eu.DESCENDING;

            default:
              return;
          }
        }, t.prototype.toOperatorName = function (t) {
          return Lu[t.name];
        }, t.prototype.fromOperatorName = function (t) {
          switch (t) {
            case "EQUAL":
              return mu.EQUAL;

            case "GREATER_THAN":
              return mu.GREATER_THAN;

            case "GREATER_THAN_OR_EQUAL":
              return mu.GREATER_THAN_OR_EQUAL;

            case "LESS_THAN":
              return mu.LESS_THAN;

            case "LESS_THAN_OR_EQUAL":
              return mu.LESS_THAN_OR_EQUAL;

            case "ARRAY_CONTAINS":
              return mu.ARRAY_CONTAINS;

            case "IN":
              return mu.IN;

            case "ARRAY_CONTAINS_ANY":
              return mu.ARRAY_CONTAINS_ANY;

            case "OPERATOR_UNSPECIFIED":
              return Mr("Unspecified operator");

            default:
              return Mr("Unknown operator");
          }
        }, t.prototype.toFieldPathReference = function (t) {
          return {
            fieldPath: t.canonicalString()
          };
        }, t.prototype.fromFieldPathReference = function (t) {
          return Ci.fromServerFormat(t.fieldPath);
        }, t.prototype.toPropertyOrder = function (t) {
          return {
            field: this.toFieldPathReference(t.field),
            direction: this.toDirection(t.dir)
          };
        }, t.prototype.fromPropertyOrder = function (t) {
          return new Tu(this.fromFieldPathReference(t.field), this.fromDirection(t.direction));
        }, t.prototype.fromFieldFilter = function (t) {
          return yu.create(this.fromFieldPathReference(t.fieldFilter.field), this.fromOperatorName(t.fieldFilter.op), this.fromValue(t.fieldFilter.value));
        }, t.prototype.toUnaryOrFieldFilter = function (t) {
          if (t.op === mu.EQUAL) {
            if (t.value.isEqual(Wa.NAN)) return {
              unaryFilter: {
                field: this.toFieldPathReference(t.field),
                op: "IS_NAN"
              }
            };
            if (t.value.isEqual(Va.INSTANCE)) return {
              unaryFilter: {
                field: this.toFieldPathReference(t.field),
                op: "IS_NULL"
              }
            };
          }

          return {
            fieldFilter: {
              field: this.toFieldPathReference(t.field),
              op: this.toOperatorName(t.op),
              value: this.toValue(t.value)
            }
          };
        }, t.prototype.fromUnaryFilter = function (t) {
          switch (t.unaryFilter.op) {
            case "IS_NAN":
              var e = this.fromFieldPathReference(t.unaryFilter.field);
              return yu.create(e, mu.EQUAL, Wa.NAN);

            case "IS_NULL":
              var n = this.fromFieldPathReference(t.unaryFilter.field);
              return yu.create(n, mu.EQUAL, Va.INSTANCE);

            case "OPERATOR_UNSPECIFIED":
              return Mr("Unspecified filter");

            default:
              return Mr("Unknown filter");
          }
        }, t.prototype.toDocumentMask = function (t) {
          var e = [];
          return t.fields.forEach(function (t) {
            return e.push(t.canonicalString());
          }), {
            fieldPaths: e
          };
        }, t.prototype.fromDocumentMask = function (t) {
          var e = (t.fieldPaths || []).map(function (t) {
            return Ci.fromServerFormat(t);
          });
          return es.fromArray(e);
        }, t;
      }(),
          Uu = function Uu() {
        this.listeners = [];
      },
          Bu = function () {
        function t(t) {
          this.syncEngine = t, this.queries = new Po(function (t) {
            return t.canonicalId();
          }), this.onlineState = Os.Unknown, this.syncEngine.subscribe(this);
        }

        return t.prototype.listen = function (t) {
          var e = t.query,
              n = !1,
              r = this.queries.get(e);
          return r || (n = !0, r = new Uu(), this.queries.set(e, r)), r.listeners.push(t), t.applyOnlineStateChange(this.onlineState), r.viewSnap && t.onViewSnapshot(r.viewSnap), n ? this.syncEngine.listen(e).then(function (t) {
            return r.targetId = t;
          }) : Promise.resolve(r.targetId);
        }, t.prototype.unlisten = function (o) {
          return h(this, void 0, void 0, function () {
            var e, n, r, i;
            return p(this, function (t) {
              return e = o.query, n = !1, (r = this.queries.get(e)) && 0 <= (i = r.listeners.indexOf(o)) && (r.listeners.splice(i, 1), n = 0 === r.listeners.length), n ? (this.queries.delete(e), [2, this.syncEngine.unlisten(e)]) : [2];
            });
          });
        }, t.prototype.onWatchChange = function (t) {
          for (var e = 0, n = t; e < n.length; e++) {
            var r = n[e],
                i = r.query,
                o = this.queries.get(i);

            if (o) {
              for (var a = 0, s = o.listeners; a < s.length; a++) {
                s[a].onViewSnapshot(r);
              }

              o.viewSnap = r;
            }
          }
        }, t.prototype.onWatchError = function (t, e) {
          var n = this.queries.get(t);
          if (n) for (var r = 0, i = n.listeners; r < i.length; r++) {
            i[r].onError(e);
          }
          this.queries.delete(t);
        }, t.prototype.onOnlineStateChange = function (i) {
          this.onlineState = i, this.queries.forEach(function (t, e) {
            for (var n = 0, r = e.listeners; n < r.length; n++) {
              r[n].applyOnlineStateChange(i);
            }
          });
        }, t;
      }(),
          Qu = function () {
        function t(t, e, n) {
          this.query = t, this.queryObserver = e, this.raisedInitialEvent = !1, this.onlineState = Os.Unknown, this.options = n || {};
        }

        return t.prototype.onViewSnapshot = function (t) {
          if (Or(0 < t.docChanges.length || t.syncStateChanged, "We got a new snapshot with no changes?"), !this.options.includeMetadataChanges) {
            for (var e = [], n = 0, r = t.docChanges; n < r.length; n++) {
              var i = r[n];
              i.type !== Ws.Metadata && e.push(i);
            }

            t = new tu(t.query, t.docs, t.oldDocs, e, t.mutatedKeys, t.fromCache, t.syncStateChanged, !0);
          }

          this.raisedInitialEvent ? this.shouldRaiseEvent(t) && this.queryObserver.next(t) : this.shouldRaiseInitialEvent(t, this.onlineState) && this.raiseInitialEvent(t), this.snap = t;
        }, t.prototype.onError = function (t) {
          this.queryObserver.error(t);
        }, t.prototype.applyOnlineStateChange = function (t) {
          this.onlineState = t, this.snap && !this.raisedInitialEvent && this.shouldRaiseInitialEvent(this.snap, t) && this.raiseInitialEvent(this.snap);
        }, t.prototype.shouldRaiseInitialEvent = function (t, e) {
          if (Or(!this.raisedInitialEvent, "Determining whether to raise first event but already had first event"), !t.fromCache) return !0;
          var n = e !== Os.Offline;
          return this.options.waitForSyncWhenOnline && n ? (Or(t.fromCache, "Waiting for sync, but snapshot is not from cache"), !1) : !t.docs.isEmpty() || e === Os.Offline;
        }, t.prototype.shouldRaiseEvent = function (t) {
          if (0 < t.docChanges.length) return !0;
          var e = this.snap && this.snap.hasPendingWrites !== t.hasPendingWrites;
          return !(!t.syncStateChanged && !e) && !0 === this.options.includeMetadataChanges;
        }, t.prototype.raiseInitialEvent = function (t) {
          Or(!this.raisedInitialEvent, "Trying to raise initial events for second time"), t = tu.fromInitialDocuments(t.query, t.docs, t.mutatedKeys, t.fromCache), this.raisedInitialEvent = !0, this.queryObserver.next(t);
        }, t;
      }(),
          Ku = function () {
        function s(t, e, n) {
          this.targetId = t, this.addedKeys = e, this.removedKeys = n;
        }

        return s.fromSnapshot = function (t, e) {
          for (var n = to(), r = to(), i = 0, o = e.docChanges; i < o.length; i++) {
            var a = o[i];

            switch (a.type) {
              case Ws.Added:
                n = n.add(a.doc.key);
                break;

              case Ws.Removed:
                r = r.add(a.doc.key);
            }
          }

          return new s(t, n, r);
        }, s;
      }(),
          ju = function ju(t) {
        this.key = t;
      },
          Gu = function Gu(t) {
        this.key = t;
      },
          Wu = function () {
        function t(t, e) {
          this.query = t, this._syncedDocuments = e, this.syncState = null, this.current = !1, this.limboDocuments = to(), this.mutatedKeys = to(), this.documentSet = new Xs(t.docComparator.bind(t));
        }

        return Object.defineProperty(t.prototype, "syncedDocuments", {
          get: function get() {
            return this._syncedDocuments;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.computeDocChanges = function (t, e) {
          var s = this,
              u = e ? e.changeSet : new Zs(),
              c = e ? e.documentSet : this.documentSet,
              h = e ? e.mutatedKeys : this.mutatedKeys,
              l = c,
              f = !1,
              p = this.query.hasLimit() && c.size === this.query.limit ? c.last() : null;
          if (t.inorderTraversal(function (t, e) {
            var n = c.get(t),
                r = e instanceof Mo ? e : null;
            r && (Or(t.isEqual(r.key), "Mismatching keys found in document changes: " + t + " != " + r.key), r = s.query.matches(r) ? r : null);
            var i = !!n && s.mutatedKeys.has(n.key),
                o = !!r && (r.hasLocalMutations || s.mutatedKeys.has(r.key) && r.hasCommittedMutations),
                a = !1;
            n && r ? n.data.isEqual(r.data) ? i !== o && (u.track({
              type: Ws.Metadata,
              doc: r
            }), a = !0) : s.shouldWaitForSyncedDocument(n, r) || (u.track({
              type: Ws.Modified,
              doc: r
            }), a = !0, p && 0 < s.query.docComparator(r, p) && (f = !0)) : !n && r ? (u.track({
              type: Ws.Added,
              doc: r
            }), a = !0) : n && !r && (u.track({
              type: Ws.Removed,
              doc: n
            }), a = !0, p && (f = !0));
            a && (h = r ? (l = l.add(r), o ? h.add(t) : h.delete(t)) : (l = l.delete(t), h.delete(t)));
          }), this.query.hasLimit()) for (; l.size > this.query.limit;) {
            var n = l.last();
            l = l.delete(n.key), h = h.delete(n.key), u.track({
              type: Ws.Removed,
              doc: n
            });
          }
          return Or(!f || !e, "View was refilled using docs that themselves needed refilling."), {
            documentSet: l,
            changeSet: u,
            needsRefill: f,
            mutatedKeys: h
          };
        }, t.prototype.shouldWaitForSyncedDocument = function (t, e) {
          return t.hasLocalMutations && e.hasCommittedMutations && !e.hasLocalMutations;
        }, t.prototype.applyChanges = function (t, e, n) {
          var o = this;
          Or(!t.needsRefill, "Cannot apply changes that need a refill");
          var r = this.documentSet;
          this.documentSet = t.documentSet, this.mutatedKeys = t.mutatedKeys;
          var i = t.changeSet.getChanges();
          i.sort(function (t, e) {
            return n = t.type, r = e.type, (i = function i(t) {
              switch (t) {
                case Ws.Added:
                  return 1;

                case Ws.Modified:
                case Ws.Metadata:
                  return 2;

                case Ws.Removed:
                  return 0;

                default:
                  return Mr("Unknown ChangeType: " + t);
              }
            })(n) - i(r) || o.query.docComparator(t.doc, e.doc);
            var n, r, i;
          }), this.applyTargetChange(n);
          var a = e ? this.updateLimboDocuments() : [],
              s = 0 === this.limboDocuments.size && this.current ? Hs.Synced : Hs.Local,
              u = s !== this.syncState;
          return this.syncState = s, 0 !== i.length || u ? {
            snapshot: new tu(this.query, t.documentSet, r, i, t.mutatedKeys, s === Hs.Local, u, !1),
            limboChanges: a
          } : {
            limboChanges: a
          };
        }, t.prototype.applyOnlineStateChange = function (t) {
          return this.current && t === Os.Offline ? (this.current = !1, this.applyChanges({
            documentSet: this.documentSet,
            changeSet: new Zs(),
            mutatedKeys: this.mutatedKeys,
            needsRefill: !1
          }, !1)) : {
            limboChanges: []
          };
        }, t.prototype.shouldBeInLimbo = function (t) {
          return !this._syncedDocuments.has(t) && !!this.documentSet.has(t) && !this.documentSet.get(t).hasLocalMutations;
        }, t.prototype.applyTargetChange = function (t) {
          var e = this;
          t && (t.addedDocuments.forEach(function (t) {
            return e._syncedDocuments = e._syncedDocuments.add(t);
          }), t.modifiedDocuments.forEach(function (t) {
            return Or(e._syncedDocuments.has(t), "Modified document " + t + " not found in view.");
          }), t.removedDocuments.forEach(function (t) {
            return e._syncedDocuments = e._syncedDocuments.delete(t);
          }), this.current = t.current);
        }, t.prototype.updateLimboDocuments = function () {
          var e = this;
          if (!this.current) return [];
          var n = this.limboDocuments;
          this.limboDocuments = to(), this.documentSet.forEach(function (t) {
            e.shouldBeInLimbo(t.key) && (e.limboDocuments = e.limboDocuments.add(t.key));
          });
          var r = [];
          return n.forEach(function (t) {
            e.limboDocuments.has(t) || r.push(new Gu(t));
          }), this.limboDocuments.forEach(function (t) {
            n.has(t) || r.push(new ju(t));
          }), r;
        }, t.prototype.synchronizeWithPersistedState = function (t, e) {
          this._syncedDocuments = e, this.limboDocuments = to();
          var n = this.computeDocChanges(t);
          return this.applyChanges(n, !0);
        }, t.prototype.computeInitialSnapshot = function () {
          return tu.fromInitialDocuments(this.query, this.documentSet, this.mutatedKeys, this.syncState === Hs.Local);
        }, t;
      }();

      var zu = "SyncEngine",
          Hu = function Hu(t, e, n) {
        this.query = t, this.targetId = e, this.view = n;
      },
          Yu = function Yu(t) {
        this.key = t;
      },
          Xu = function () {
        function t(t, e, n, r) {
          this.localStore = t, this.remoteStore = e, this.sharedClientState = n, this.currentUser = r, this.syncEngineListener = null, this.queryViewsByQuery = new Po(function (t) {
            return t.canonicalId();
          }), this.queryViewsByTarget = {}, this.limboTargetsByKey = new Ui(Di.comparator), this.limboResolutionsByTarget = {}, this.limboDocumentRefs = new ls(), this.mutationUserCallbacks = {}, this.limboTargetIdGenerator = yo.forSyncEngine(), this.isPrimary = void 0, this.onlineState = Os.Unknown;
        }

        return Object.defineProperty(t.prototype, "isPrimaryClient", {
          get: function get() {
            return !0 === this.isPrimary;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.subscribe = function (t) {
          Or(null !== t, "SyncEngine listener cannot be null"), Or(null === this.syncEngineListener, "SyncEngine already has a subscriber."), this.syncEngineListener = t;
        }, t.prototype.listen = function (a) {
          return h(this, void 0, void 0, function () {
            var e, n, r, i, o;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return this.assertSubscribed("listen()"), (r = this.queryViewsByQuery.get(a)) ? (e = r.targetId, this.sharedClientState.addLocalQueryTarget(e), n = r.view.computeInitialSnapshot(), [3, 4]) : [3, 1];

                case 1:
                  return [4, this.localStore.allocateQuery(a)];

                case 2:
                  return i = t.sent(), o = this.sharedClientState.addLocalQueryTarget(i.targetId), e = i.targetId, [4, this.initializeViewAndComputeSnapshot(i, "current" === o)];

                case 3:
                  n = t.sent(), this.isPrimary && this.remoteStore.listen(i), t.label = 4;

                case 4:
                  return this.syncEngineListener.onWatchChange([n]), [2, e];
              }
            });
          });
        }, t.prototype.initializeViewAndComputeSnapshot = function (s, u) {
          var c = this,
              h = s.query;
          return this.localStore.executeQuery(h).then(function (a) {
            return c.localStore.remoteDocumentKeys(s.targetId).then(function (t) {
              var e = new Wu(h, t),
                  n = e.computeDocChanges(a),
                  r = nu.createSynthesizedTargetChangeForCurrentChange(s.targetId, u && c.onlineState !== Os.Offline),
                  i = e.applyChanges(n, !0 === c.isPrimary, r);
              Or(0 === i.limboChanges.length, "View returned limbo docs before target ack from the server."), Or(!!i.snapshot, "applyChanges for new view should always return a snapshot");
              var o = new Hu(h, s.targetId, e);
              return c.queryViewsByQuery.set(h, o), c.queryViewsByTarget[s.targetId] = o, i.snapshot;
            });
          });
        }, t.prototype.synchronizeViewAndComputeSnapshot = function (i) {
          var t = this;
          return this.localStore.executeQuery(i.query).then(function (r) {
            return t.localStore.remoteDocumentKeys(i.targetId).then(function (n) {
              return h(t, void 0, void 0, function () {
                var e;
                return p(this, function (t) {
                  return e = i.view.synchronizeWithPersistedState(r, n), this.isPrimary && this.updateTrackedLimbos(i.targetId, e.limboChanges), [2, e];
                });
              });
            });
          });
        }, t.prototype.unlisten = function (r) {
          return h(this, void 0, void 0, function () {
            var e,
                n = this;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return this.assertSubscribed("unlisten()"), Or(!!(e = this.queryViewsByQuery.get(r)), "Trying to unlisten on query not found:" + r), this.isPrimary ? (this.sharedClientState.removeLocalQueryTarget(e.targetId), this.sharedClientState.isActiveQueryTarget(e.targetId) ? [3, 2] : [4, this.localStore.releaseQuery(r, !1).then(function () {
                    n.sharedClientState.clearQueryState(e.targetId), n.remoteStore.unlisten(e.targetId), n.removeAndCleanupQuery(e);
                  }).catch(Aa)]) : [3, 3];

                case 1:
                  t.sent(), t.label = 2;

                case 2:
                  return [3, 5];

                case 3:
                  return this.removeAndCleanupQuery(e), [4, this.localStore.releaseQuery(r, !0)];

                case 4:
                  t.sent(), t.label = 5;

                case 5:
                  return [2];
              }
            });
          });
        }, t.prototype.write = function (t, e) {
          var n = this;
          return this.assertSubscribed("write()"), this.localStore.localWrite(t).then(function (t) {
            return n.sharedClientState.addPendingMutation(t.batchId), n.addMutationCallback(t.batchId, e), n.emitNewSnapsAndNotifyLocalStore(t.changes);
          }).then(function () {
            return n.remoteStore.fillWritePipeline();
          });
        }, t.prototype.wrapUpdateFunctionError = function (t) {
          return t;
        }, t.prototype.runTransaction = function (e, n) {
          var r = this;
          void 0 === n && (n = 5), Or(0 <= n, "Got negative number of retries for transaction.");
          var i = this.remoteStore.createTransaction();
          return function () {
            try {
              var t = e(i);
              return !Ds(t) && t.catch && t.then ? t.catch(function (t) {
                return Promise.reject(r.wrapUpdateFunctionError(t));
              }) : Promise.reject(Error("Transaction callback must return a Promise"));
            } catch (t) {
              return Promise.reject(r.wrapUpdateFunctionError(t));
            }
          }().then(function (t) {
            return i.commit().then(function () {
              return t;
            }).catch(function (t) {
              return 0 === n ? Promise.reject(t) : r.runTransaction(e, n - 1);
            });
          });
        }, t.prototype.applyRemoteEvent = function (e) {
          var r = this;
          return this.assertSubscribed("applyRemoteEvent()"), this.localStore.applyRemoteEvent(e).then(function (t) {
            return Br(e.targetChanges, function (t, e) {
              var n = r.limboResolutionsByTarget[Number(t)];
              n && (Or(e.addedDocuments.size + e.modifiedDocuments.size + e.removedDocuments.size <= 1, "Limbo resolution for single document contains multiple changes."), 0 < e.addedDocuments.size ? n.receivedDocument = !0 : 0 < e.modifiedDocuments.size ? Or(n.receivedDocument, "Received change for limbo target document without add.") : 0 < e.removedDocuments.size && (Or(n.receivedDocument, "Received remove for limbo target document without add."), n.receivedDocument = !1));
            }), r.emitNewSnapsAndNotifyLocalStore(t, e);
          }).catch(Aa);
        }, t.prototype.applyOnlineStateChange = function (r, t) {
          if (this.isPrimary && t === Ps.RemoteStore || !this.isPrimary && t === Ps.SharedClientState) {
            var i = [];
            this.queryViewsByQuery.forEach(function (t, e) {
              var n = e.view.applyOnlineStateChange(r);
              Or(0 === n.limboChanges.length, "OnlineState should not affect limbo documents."), n.snapshot && i.push(n.snapshot);
            }), this.syncEngineListener.onOnlineStateChange(r), this.syncEngineListener.onWatchChange(i), this.onlineState = r, this.isPrimary && this.sharedClientState.setOnlineState(r);
          }
        }, t.prototype.rejectListen = function (u, c) {
          return h(this, void 0, void 0, function () {
            var e,
                n,
                r,
                i,
                o,
                a,
                s = this;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return this.assertSubscribed("rejectListens()"), this.sharedClientState.updateQueryState(u, "rejected", c), e = this.limboResolutionsByTarget[u], (n = e && e.key) ? (this.limboTargetsByKey = this.limboTargetsByKey.remove(n), delete this.limboResolutionsByTarget[u], r = (r = new Ui(Di.comparator)).insert(n, new Oo(n, Vi.forDeletedDoc())), i = to().add(n), o = new eu(Vi.MIN, {}, new ji(ui), r, i), [2, this.applyRemoteEvent(o)]) : [3, 1];

                case 1:
                  return Or(!!(a = this.queryViewsByTarget[u]), "Unknown targetId: " + u), [4, this.localStore.releaseQuery(a.query, !1).then(function () {
                    return s.removeAndCleanupQuery(a);
                  }).catch(Aa)];

                case 2:
                  t.sent(), this.syncEngineListener.onWatchError(a.query, c), t.label = 3;

                case 3:
                  return [2];
              }
            });
          });
        }, t.prototype.applyBatchState = function (n, r, i) {
          return h(this, void 0, void 0, function () {
            var e;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return this.assertSubscribed("applyBatchState()"), [4, this.localStore.lookupMutationDocuments(n)];

                case 1:
                  return null === (e = t.sent()) ? (Ar(zu, "Cannot apply mutation batch with id: " + n), [2]) : "pending" !== r ? [3, 3] : [4, this.remoteStore.fillWritePipeline()];

                case 2:
                  return t.sent(), [3, 4];

                case 3:
                  "acknowledged" === r || "rejected" === r ? (this.processUserCallback(n, i || null), this.localStore.removeCachedMutationBatchMetadata(n)) : Mr("Unknown batchState: " + r), t.label = 4;

                case 4:
                  return [4, this.emitNewSnapsAndNotifyLocalStore(e)];

                case 5:
                  return t.sent(), [2];
              }
            });
          });
        }, t.prototype.applySuccessfulWrite = function (t) {
          var e = this;
          this.assertSubscribed("applySuccessfulWrite()");
          var n = t.batch.batchId;
          return this.processUserCallback(n, null), this.localStore.acknowledgeBatch(t).then(function (t) {
            return e.sharedClientState.updateMutationState(n, "acknowledged"), e.emitNewSnapsAndNotifyLocalStore(t);
          }).catch(Aa);
        }, t.prototype.rejectFailedWrite = function (e, n) {
          var r = this;
          return this.assertSubscribed("rejectFailedWrite()"), this.processUserCallback(e, n), this.localStore.rejectBatch(e).then(function (t) {
            return r.sharedClientState.updateMutationState(e, "rejected", n), r.emitNewSnapsAndNotifyLocalStore(t);
          }).catch(Aa);
        }, t.prototype.addMutationCallback = function (t, e) {
          var n = this.mutationUserCallbacks[this.currentUser.toKey()];
          n || (n = new Ui(ui)), n = n.insert(t, e), this.mutationUserCallbacks[this.currentUser.toKey()] = n;
        }, t.prototype.processUserCallback = function (t, e) {
          var n = this.mutationUserCallbacks[this.currentUser.toKey()];

          if (n) {
            var r = n.get(t);
            r && (Or(t === n.minKey(), "Mutation callbacks processed out-of-order?"), e ? r.reject(e) : r.resolve(), n = n.remove(t)), this.mutationUserCallbacks[this.currentUser.toKey()] = n;
          }
        }, t.prototype.removeAndCleanupQuery = function (t) {
          var e = this;

          if (this.sharedClientState.removeLocalQueryTarget(t.targetId), this.queryViewsByQuery.delete(t.query), delete this.queryViewsByTarget[t.targetId], this.isPrimary) {
            var n = this.limboDocumentRefs.referencesForId(t.targetId);
            this.limboDocumentRefs.removeReferencesForId(t.targetId), n.forEach(function (t) {
              e.limboDocumentRefs.containsKey(t) || e.removeLimboTarget(t);
            });
          }
        }, t.prototype.removeLimboTarget = function (t) {
          var e = this.limboTargetsByKey.get(t);
          null !== e && (this.remoteStore.unlisten(e), this.limboTargetsByKey = this.limboTargetsByKey.remove(t), delete this.limboResolutionsByTarget[e]);
        }, t.prototype.updateTrackedLimbos = function (t, e) {
          for (var n = 0, r = e; n < r.length; n++) {
            var i = r[n];
            if (i instanceof ju) this.limboDocumentRefs.addReference(i.key, t), this.trackLimboChange(i);else if (i instanceof Gu) {
              Ar(zu, "Document no longer in limbo: " + i.key), this.limboDocumentRefs.removeReference(i.key, t), this.limboDocumentRefs.containsKey(i.key) || this.removeLimboTarget(i.key);
            } else Mr("Unknown limbo change: " + JSON.stringify(i));
          }
        }, t.prototype.trackLimboChange = function (t) {
          var e = t.key;

          if (!this.limboTargetsByKey.get(e)) {
            Ar(zu, "New document in limbo: " + e);
            var n = this.limboTargetIdGenerator.next(),
                r = pu.atPath(e.path);
            this.limboResolutionsByTarget[n] = new Yu(e), this.remoteStore.listen(new ma(r, n, ha.LimboResolution, wi.INVALID)), this.limboTargetsByKey = this.limboTargetsByKey.insert(e, n);
          }
        }, t.prototype.currentLimboDocs = function () {
          return this.limboTargetsByKey;
        }, t.prototype.emitNewSnapsAndNotifyLocalStore = function (n, u) {
          return h(this, void 0, void 0, function () {
            var o,
                a,
                e,
                s = this;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return o = [], a = [], e = [], this.queryViewsByQuery.forEach(function (t, i) {
                    e.push(Promise.resolve().then(function () {
                      var e = i.view.computeDocChanges(n);
                      return e.needsRefill ? s.localStore.executeQuery(i.query).then(function (t) {
                        return i.view.computeDocChanges(t, e);
                      }) : e;
                    }).then(function (t) {
                      var e = u && u.targetChanges[i.targetId],
                          n = i.view.applyChanges(t, !0 === s.isPrimary, e);

                      if (s.updateTrackedLimbos(i.targetId, n.limboChanges), n.snapshot) {
                        s.isPrimary && s.sharedClientState.updateQueryState(i.targetId, n.snapshot.fromCache ? "not-current" : "current"), o.push(n.snapshot);
                        var r = Ku.fromSnapshot(i.targetId, n.snapshot);
                        a.push(r);
                      }
                    }));
                  }), [4, Promise.all(e)];

                case 1:
                  return t.sent(), this.syncEngineListener.onWatchChange(o), [4, this.localStore.notifyLocalViewChanges(a)];

                case 2:
                  return t.sent(), [2];
              }
            });
          });
        }, t.prototype.assertSubscribed = function (t) {
          Or(null !== this.syncEngineListener, "Trying to call " + t + " before calling subscribe().");
        }, t.prototype.handleCredentialChange = function (r) {
          return h(this, void 0, void 0, function () {
            var e, n;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return e = !this.currentUser.isEqual(r), this.currentUser = r, e ? [4, this.localStore.handleUserChange(r)] : [3, 3];

                case 1:
                  return n = t.sent(), this.sharedClientState.handleUserChange(r, n.removedBatchIds, n.addedBatchIds), [4, this.emitNewSnapsAndNotifyLocalStore(n.affectedDocuments)];

                case 2:
                  t.sent(), t.label = 3;

                case 3:
                  return [4, this.remoteStore.handleCredentialChange()];

                case 4:
                  return t.sent(), [2];
              }
            });
          });
        }, t.prototype.applyPrimaryState = function (c) {
          return h(this, void 0, void 0, function () {
            var e,
                n,
                r,
                i,
                o,
                a,
                s,
                u = this;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return !0 !== c || !0 === this.isPrimary ? [3, 3] : (this.isPrimary = !0, [4, this.remoteStore.applyPrimaryState(!0)]);

                case 1:
                  return t.sent(), e = this.sharedClientState.getAllActiveQueryTargets(), [4, this.synchronizeQueryViewsAndRaiseSnapshots(e.toArray())];

                case 2:
                  for (n = t.sent(), r = 0, i = n; r < i.length; r++) o = i[r], this.remoteStore.listen(o);

                  return [3, 7];

                case 3:
                  return !1 !== c || !1 === this.isPrimary ? [3, 7] : (this.isPrimary = !1, a = [], s = Promise.resolve(), Ur(this.queryViewsByTarget, function (t, e) {
                    u.sharedClientState.isLocalQueryTarget(t) ? a.push(t) : s = s.then(function () {
                      return u.unlisten(e.query);
                    }), u.remoteStore.unlisten(e.targetId);
                  }), [4, s]);

                case 4:
                  return t.sent(), [4, this.synchronizeQueryViewsAndRaiseSnapshots(a)];

                case 5:
                  return t.sent(), this.resetLimboDocuments(), [4, this.remoteStore.applyPrimaryState(!1)];

                case 6:
                  t.sent(), t.label = 7;

                case 7:
                  return [2];
              }
            });
          });
        }, t.prototype.resetLimboDocuments = function () {
          var e = this;
          Ur(this.limboResolutionsByTarget, function (t) {
            e.remoteStore.unlisten(t);
          }), this.limboDocumentRefs.removeAllReferences(), this.limboResolutionsByTarget = [], this.limboTargetsByKey = new Ui(Di.comparator);
        }, t.prototype.synchronizeQueryViewsAndRaiseSnapshots = function (t) {
          for (var e = this, n = Promise.resolve(), a = [], s = [], r = function r(o) {
            n = n.then(function () {
              return h(e, void 0, void 0, function () {
                var e, n, r, i;
                return p(this, function (t) {
                  switch (t.label) {
                    case 0:
                      return (n = this.queryViewsByTarget[o]) ? [4, this.localStore.releaseQuery(n.query, !0)] : [3, 4];

                    case 1:
                      return t.sent(), [4, this.localStore.allocateQuery(n.query)];

                    case 2:
                      return e = t.sent(), [4, this.synchronizeViewAndComputeSnapshot(n)];

                    case 3:
                      return (r = t.sent()).snapshot && s.push(r.snapshot), [3, 8];

                    case 4:
                      return Or(!0 === this.isPrimary, "A secondary tab should never have an active query without an active view."), [4, this.localStore.getQueryForTarget(o)];

                    case 5:
                      return Or(!!(i = t.sent()), "Query data for target " + o + " not found"), [4, this.localStore.allocateQuery(i)];

                    case 6:
                      return e = t.sent(), [4, this.initializeViewAndComputeSnapshot(e, !1)];

                    case 7:
                      t.sent(), t.label = 8;

                    case 8:
                      return a.push(e), [2];
                  }
                });
              });
            });
          }, i = 0, o = t; i < o.length; i++) {
            r(o[i]);
          }

          return n.then(function () {
            return e.syncEngineListener.onWatchChange(s), a;
          });
        }, t.prototype.getActiveClients = function () {
          return this.localStore.getActiveClients();
        }, t.prototype.applyTargetState = function (r, o, n) {
          return h(this, void 0, void 0, function () {
            var e,
                i = this;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  if (this.isPrimary) return Ar(zu, "Ignoring unexpected query state notification."), [2];
                  if (!this.queryViewsByTarget[r]) return [3, 5];

                  switch (o) {
                    case "current":
                    case "not-current":
                      return [3, 1];

                    case "rejected":
                      return [3, 2];
                  }

                  return [3, 4];

                case 1:
                  return [2, this.localStore.getNewDocumentChanges().then(function (n) {
                    return h(i, void 0, void 0, function () {
                      var e;
                      return p(this, function (t) {
                        switch (t.label) {
                          case 0:
                            return e = eu.createSynthesizedRemoteEventForCurrentChange(r, "current" === o), [4, this.emitNewSnapsAndNotifyLocalStore(n, e)];

                          case 1:
                            return t.sent(), [2];
                        }
                      });
                    });
                  }, function (r) {
                    return h(i, void 0, void 0, function () {
                      var n;
                      return p(this, function (t) {
                        switch (t.label) {
                          case 0:
                            return (e = r).code !== Lr.DATA_LOSS || e.message !== xo ? [3, 2] : (n = [], Ur(this.queryViewsByTarget, function (t) {
                              return n.push(t);
                            }), [4, this.synchronizeQueryViewsAndRaiseSnapshots(n)]);

                          case 1:
                            return t.sent(), [3, 3];

                          case 2:
                            throw r;

                          case 3:
                            return [2];
                        }

                        var e;
                      });
                    });
                  })];

                case 2:
                  return e = this.queryViewsByTarget[r], this.removeAndCleanupQuery(e), [4, this.localStore.releaseQuery(e.query, !0)];

                case 3:
                  return t.sent(), this.syncEngineListener.onWatchError(e.query, n), [3, 5];

                case 4:
                  Mr("Unexpected target state: " + o), t.label = 5;

                case 5:
                  return [2];
              }
            });
          });
        }, t.prototype.applyActiveTargetsChange = function (l, f) {
          return h(this, void 0, void 0, function () {
            var e,
                n,
                r,
                i,
                o,
                a,
                s,
                u,
                c,
                h = this;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  if (!this.isPrimary) return [2];
                  e = 0, n = l, t.label = 1;

                case 1:
                  return e < n.length ? (c = n[e], Or(!this.queryViewsByTarget[c], "Trying to add an already active target"), [4, this.localStore.getQueryForTarget(c)]) : [3, 6];

                case 2:
                  return Or(!!(r = t.sent()), "Query data for active target " + c + " not found"), [4, this.localStore.allocateQuery(r)];

                case 3:
                  return i = t.sent(), [4, this.initializeViewAndComputeSnapshot(i, !1)];

                case 4:
                  t.sent(), this.remoteStore.listen(i), t.label = 5;

                case 5:
                  return e++, [3, 1];

                case 6:
                  o = function o(e) {
                    var n;
                    return p(this, function (t) {
                      switch (t.label) {
                        case 0:
                          return (n = a.queryViewsByTarget[e]) ? [4, a.localStore.releaseQuery(n.query, !1).then(function () {
                            h.remoteStore.unlisten(e), h.removeAndCleanupQuery(n);
                          }).catch(Aa)] : [3, 2];

                        case 1:
                          t.sent(), t.label = 2;

                        case 2:
                          return [2];
                      }
                    });
                  }, a = this, s = 0, u = f, t.label = 7;

                case 7:
                  return s < u.length ? (c = u[s], [5, o(c)]) : [3, 10];

                case 8:
                  t.sent(), t.label = 9;

                case 9:
                  return s++, [3, 7];

                case 10:
                  return [2];
              }
            });
          });
        }, t.prototype.enableNetwork = function () {
          return this.localStore.setNetworkEnabled(!0), this.remoteStore.enableNetwork();
        }, t.prototype.disableNetwork = function () {
          return this.localStore.setNetworkEnabled(!1), this.remoteStore.disableNetwork();
        }, t.prototype.getRemoteKeysForTarget = function (t) {
          var e = this.limboResolutionsByTarget[t];
          return e && e.receivedDocument ? to().add(e.key) : this.queryViewsByTarget[t] ? this.queryViewsByTarget[t].view.syncedDocuments : to();
        }, t;
      }(),
          Ju = function () {
        function t(t) {
          this.uid = t;
        }

        return t.prototype.isAuthenticated = function () {
          return null != this.uid;
        }, t.prototype.toKey = function () {
          return this.isAuthenticated() ? "uid:" + this.uid : "anonymous-user";
        }, t.prototype.isEqual = function (t) {
          return t.uid === this.uid;
        }, t.UNAUTHENTICATED = new t(null), t.GOOGLE_CREDENTIALS = new t("google-credentials-uid"), t.FIRST_PARTY = new t("first-party-uid"), t;
      }(),
          $u = "SharedClientState",
          Zu = "firestore_clients",
          tc = "firestore_mutations",
          ec = "firestore_targets",
          nc = function () {
        function a(t, e, n, r) {
          this.user = t, this.batchId = e, this.state = n, Or(void 0 !== (this.error = r) == ("rejected" === n), "MutationMetadata must contain an error iff state is 'rejected'");
        }

        return a.fromWebStorageEntry = function (t, e, n) {
          var r = JSON.parse(n),
              i = "object" == typeof r && -1 !== ["pending", "acknowledged", "rejected"].indexOf(r.state) && (void 0 === r.error || "object" == typeof r.error),
              o = void 0;
          return i && r.error && (i = "string" == typeof r.error.message && "string" == typeof r.error.code) && (o = new xr(r.error.code, r.error.message)), i ? new a(t, e, r.state, o) : (kr($u, "Failed to parse mutation state for ID '" + e + "': " + n), null);
        }, a.prototype.toWebStorageJSON = function () {
          var t = {
            state: this.state,
            updateTimeMs: Date.now()
          };
          return this.error && (t.error = {
            code: this.error.code,
            message: this.error.message
          }), JSON.stringify(t);
        }, a;
      }(),
          rc = function () {
        function o(t, e, n) {
          this.targetId = t, this.state = e, Or(void 0 !== (this.error = n) == ("rejected" === e), "QueryTargetMetadata must contain an error iff state is 'rejected'");
        }

        return o.fromWebStorageEntry = function (t, e) {
          var n = JSON.parse(e),
              r = "object" == typeof n && -1 !== ["not-current", "current", "rejected"].indexOf(n.state) && (void 0 === n.error || "object" == typeof n.error),
              i = void 0;
          return r && n.error && (r = "string" == typeof n.error.message && "string" == typeof n.error.code) && (i = new xr(n.error.code, n.error.message)), r ? new o(t, n.state, i) : (kr($u, "Failed to parse target state for ID '" + t + "': " + e), null);
        }, o.prototype.toWebStorageJSON = function () {
          var t = {
            state: this.state,
            updateTimeMs: Date.now()
          };
          return this.error && (t.error = {
            code: this.error.code,
            message: this.error.message
          }), JSON.stringify(t);
        }, o;
      }(),
          ic = function () {
        function a(t, e) {
          this.clientId = t, this.activeTargetIds = e;
        }

        return a.fromWebStorageEntry = function (t, e) {
          for (var n = JSON.parse(e), r = "object" == typeof n && n.activeTargetIds instanceof Array, i = no(), o = 0; r && o < n.activeTargetIds.length; ++o) r = Ns(n.activeTargetIds[o]), i = i.add(n.activeTargetIds[o]);

          return r ? new a(t, i) : (kr($u, "Failed to parse client data for instance '" + t + "': " + e), null);
        }, a;
      }(),
          oc = function () {
        function n(t, e) {
          this.clientId = t, this.onlineState = e;
        }

        return n.fromWebStorageEntry = function (t) {
          var e = JSON.parse(t);
          return "object" == typeof e && e.onlineState in Os && "string" == typeof e.clientId ? new n(e.clientId, Os[e.onlineState]) : (kr($u, "Failed to parse online state: " + t), null);
        }, n;
      }(),
          ac = function () {
        function t() {
          this.activeTargetIds = no();
        }

        return t.prototype.addQueryTarget = function (t) {
          Or(!this.activeTargetIds.has(t), "Target with ID '" + t + "' already active."), this.activeTargetIds = this.activeTargetIds.add(t);
        }, t.prototype.removeQueryTarget = function (t) {
          this.activeTargetIds = this.activeTargetIds.delete(t);
        }, t.prototype.toWebStorageJSON = function () {
          var t = {
            activeTargetIds: this.activeTargetIds.toArray(),
            updateTimeMs: Date.now()
          };
          return JSON.stringify(t);
        }, t;
      }(),
          sc = function () {
        function a(t, e, n, r, i) {
          if (this.queue = t, this.platform = e, this.persistenceKey = n, this.localClientId = r, this.syncEngine = null, this.onlineStateHandler = null, this.sequenceNumberHandler = null, this.activeClients = {}, this.storageListener = this.handleWebStorageEvent.bind(this), this.started = !1, this.earlyEvents = [], !a.isAvailable(this.platform)) throw new xr(Lr.UNIMPLEMENTED, "LocalStorage is not available on this platform.");
          var o = n.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
          this.storage = this.platform.window.localStorage, this.currentUser = i, this.localClientStorageKey = this.toWebStorageClientStateKey(this.localClientId), this.sequenceNumberKey = "firestore_sequence_number_" + n, this.activeClients[this.localClientId] = new ac(), this.clientStateKeyRe = new RegExp("^" + Zu + "_" + o + "_([^_]*)$"), this.mutationBatchKeyRe = new RegExp("^" + tc + "_" + o + "_(\\d+)(?:_(.*))?$"), this.queryTargetKeyRe = new RegExp("^" + ec + "_" + o + "_(\\d+)$"), this.onlineStateKey = "firestore_online_state_" + n, this.platform.window.addEventListener("storage", this.storageListener);
        }

        return a.isAvailable = function (t) {
          return !(!t.window || null == t.window.localStorage);
        }, a.prototype.start = function () {
          return h(this, void 0, void 0, function () {
            var e,
                n,
                r,
                i,
                o,
                a,
                s,
                u,
                c,
                h,
                l,
                f = this;
            return p(this, function (t) {
              switch (t.label) {
                case 0:
                  return Or(!this.started, "WebStorageSharedClientState already started"), Or(null !== this.syncEngine, "syncEngine property must be set before calling start()"), Or(null !== this.onlineStateHandler, "onlineStateHandler property must be set before calling start()"), [4, this.syncEngine.getActiveClients()];

                case 1:
                  for (e = t.sent(), n = 0, r = e; n < r.length; n++) (i = r[n]) !== this.localClientId && (o = this.getItem(this.toWebStorageClientStateKey(i))) && (a = ic.fromWebStorageEntry(i, o)) && (this.activeClients[a.clientId] = a);

                  for (this.persistClientState(), (s = this.storage.getItem(this.onlineStateKey)) && (u = this.fromWebStorageOnlineState(s)) && this.handleOnlineStateEvent(u), c = 0, h = this.earlyEvents; c < h.length; c++) l = h[c], this.handleWebStorageEvent(l);

                  return this.earlyEvents = [], this.platform.window.addEventListener("unload", function () {
                    return f.shutdown();
                  }), this.started = !0, [2];
              }
            });
          });
        }, a.prototype.writeSequenceNumber = function (t) {
          this.setItem(this.sequenceNumberKey, JSON.stringify(t));
        }, a.prototype.getAllActiveQueryTargets = function () {
          var n = no();
          return Br(this.activeClients, function (t, e) {
            n = n.unionWith(e.activeTargetIds);
          }), n;
        }, a.prototype.isActiveQueryTarget = function (t) {
          for (var e in this.activeClients) if (this.activeClients.hasOwnProperty(e) && this.activeClients[e].activeTargetIds.has(t)) return !0;

          return !1;
        }, a.prototype.addPendingMutation = function (t) {
          this.persistMutationState(t, "pending");
        }, a.prototype.updateMutationState = function (t, e, n) {
          this.persistMutationState(t, e, n), this.removeMutationState(t);
        }, a.prototype.addLocalQueryTarget = function (t) {
          var e = "not-current";

          if (this.isActiveQueryTarget(t)) {
            var n = this.storage.getItem(this.toWebStorageQueryTargetMetadataKey(t));

            if (n) {
              var r = rc.fromWebStorageEntry(t, n);
              r && (e = r.state);
            }
          }

          return this.localClientState.addQueryTarget(t), this.persistClientState(), e;
        }, a.prototype.removeLocalQueryTarget = function (t) {
          this.localClientState.removeQueryTarget(t), this.persistClientState();
        }, a.prototype.isLocalQueryTarget = function (t) {
          return this.localClientState.activeTargetIds.has(t);
        }, a.prototype.clearQueryState = function (t) {
          this.removeItem(this.toWebStorageQueryTargetMetadataKey(t));
        }, a.prototype.updateQueryState = function (t, e, n) {
          this.persistQueryTargetState(t, e, n);
        }, a.prototype.handleUserChange = function (t, e, n) {
          var r = this;
          e.forEach(function (t) {
            r.removeMutationState(t);
          }), this.currentUser = t, n.forEach(function (t) {
            r.addPendingMutation(t);
          });
        }, a.prototype.setOnlineState = function (t) {
          this.persistOnlineState(t);
        }, a.prototype.shutdown = function () {
          this.started && (this.platform.window.removeEventListener("storage", this.storageListener), this.removeItem(this.localClientStorageKey), this.started = !1);
        }, a.prototype.getItem = function (t) {
          var e = this.storage.getItem(t);
          return Ar($u, "READ", t, e), e;
        }, a.prototype.setItem = function (t, e) {
          Ar($u, "SET", t, e), this.storage.setItem(t, e);
        }, a.prototype.removeItem = function (t) {
          Ar($u, "REMOVE", t), this.storage.removeItem(t);
        }, a.prototype.handleWebStorageEvent = function (s) {
          var t = this;

          if (s.storageArea === this.storage) {
            if (Ar($u, "EVENT", s.key, s.newValue), s.key === this.localClientStorageKey) return void kr("Received WebStorage notification for local change. Another client might have garbage-collected our state");
            this.queue.enqueueAndForget(function () {
              return h(t, void 0, void 0, function () {
                var e, n, r, i, o, a;
                return p(this, function (t) {
                  if (!this.started) return this.earlyEvents.push(s), [2];
                  if (null === s.key) return [2];

                  if (this.clientStateKeyRe.test(s.key)) {
                    if (null == s.newValue) return n = this.fromWebStorageClientStateKey(s.key), [2, this.handleClientStateEvent(n, null)];
                    if (e = this.fromWebStorageClientState(s.key, s.newValue)) return [2, this.handleClientStateEvent(e.clientId, e)];
                  } else if (this.mutationBatchKeyRe.test(s.key)) {
                    if (null !== s.newValue && (r = this.fromWebStorageMutationMetadata(s.key, s.newValue))) return [2, this.handleMutationBatchEvent(r)];
                  } else if (this.queryTargetKeyRe.test(s.key)) {
                    if (null !== s.newValue && (i = this.fromWebStorageQueryTargetMetadata(s.key, s.newValue))) return [2, this.handleQueryTargetEvent(i)];
                  } else if (s.key === this.onlineStateKey) {
                    if (null !== s.newValue && (o = this.fromWebStorageOnlineState(s.newValue))) return [2, this.handleOnlineStateEvent(o)];
                  } else s.key === this.sequenceNumberKey && (Or(!!this.sequenceNumberHandler, "Missing sequenceNumberHandler"), (a = function (t) {
                    var e = wi.INVALID;
                    if (null != t) try {
                      var n = JSON.parse(t);
                      Or("number" == typeof n, "Found non-numeric sequence number"), e = n;
                    } catch (t) {
                      kr($u, "Failed to read sequence number from WebStorage", t);
                    }
                    return e;
                  }(s.newValue)) !== wi.INVALID && this.sequenceNumberHandler(a));

                  return [2];
                });
              });
            });
          }
        }, Object.defineProperty(a.prototype, "localClientState", {
          get: function get() {
            return this.activeClients[this.localClientId];
          },
          enumerable: !0,
          configurable: !0
        }), a.prototype.persistClientState = function () {
          this.setItem(this.localClientStorageKey, this.localClientState.toWebStorageJSON());
        }, a.prototype.persistMutationState = function (t, e, n) {
          var r = new nc(this.currentUser, t, e, n),
              i = this.toWebStorageMutationBatchKey(t);
          this.setItem(i, r.toWebStorageJSON());
        }, a.prototype.removeMutationState = function (t) {
          var e = this.toWebStorageMutationBatchKey(t);
          this.removeItem(e);
        }, a.prototype.persistOnlineState = function (t) {
          var e = {
            clientId: this.localClientId,
            onlineState: Os[t]
          };
          this.storage.setItem(this.onlineStateKey, JSON.stringify(e));
        }, a.prototype.persistQueryTargetState = function (t, e, n) {
          var r = this.toWebStorageQueryTargetMetadataKey(t),
              i = new rc(t, e, n);
          this.setItem(r, i.toWebStorageJSON());
        }, a.prototype.toWebStorageClientStateKey = function (t) {
          return Or(-1 === t.indexOf("_"), "Client key cannot contain '_', but was '" + t + "'"), Zu + "_" + this.persistenceKey + "_" + t;
        }, a.prototype.toWebStorageQueryTargetMetadataKey = function (t) {
          return ec + "_" + this.persistenceKey + "_" + t;
        }, a.prototype.toWebStorageMutationBatchKey = function (t) {
          var e = tc + "_" + this.persistenceKey + "_" + t;
          return this.currentUser.isAuthenticated() && (e += "_" + this.currentUser.uid), e;
        }, a.prototype.fromWebStorageClientStateKey = function (t) {
          var e = this.clientStateKeyRe.exec(t);
          return e ? e[1] : null;
        }, a.prototype.fromWebStorageClientState = function (t, e) {
          var n = this.fromWebStorageClientStateKey(t);
          return Or(null !== n, "Cannot parse client state key '" + t + "'"), ic.fromWebStorageEntry(n, e);
        }, a.prototype.fromWebStorageMutationMetadata = function (t, e) {
          var n = this.mutationBatchKeyRe.exec(t);
          Or(null !== n, "Cannot parse mutation batch key '" + t + "'");
          var r = Number(n[1]),
              i = void 0 !== n[2] ? n[2] : null;
          return nc.fromWebStorageEntry(new Ju(i), r, e);
        }, a.prototype.fromWebStorageQueryTargetMetadata = function (t, e) {
          var n = this.queryTargetKeyRe.exec(t);
          Or(null !== n, "Cannot parse query target key '" + t + "'");
          var r = Number(n[1]);
          return rc.fromWebStorageEntry(r, e);
        }, a.prototype.fromWebStorageOnlineState = function (t) {
          return oc.fromWebStorageEntry(t);
        }, a.prototype.handleMutationBatchEvent = function (e) {
          return h(this, void 0, void 0, function () {
            return p(this, function (t) {
              return e.user.uid !== this.currentUser.uid ? (Ar($u, "Ignoring mutation for non-active user " + e.user.uid), [2]) : [2, this.syncEngine.applyBatchState(e.batchId, e.state, e.error)];
            });
          });
        }, a.prototype.handleQueryTargetEvent = function (t) {
          return this.syncEngine.applyTargetState(t.targetId, t.state, t.error);
        }, a.prototype.handleClientStateEvent = function (t, e) {
          var n = this,
              r = this.getAllActiveQueryTargets();
          e ? this.activeClients[t] = e : delete this.activeClients[t];
          var i = this.getAllActiveQueryTargets(),
              o = [],
              a = [];
          return i.forEach(function (e) {
            return h(n, void 0, void 0, function () {
              return p(this, function (t) {
                return r.has(e) || o.push(e), [2];
              });
            });
          }), r.forEach(function (e) {
            return h(n, void 0, void 0, function () {
              return p(this, function (t) {
                return i.has(e) || a.push(e), [2];
              });
            });
          }), this.syncEngine.applyActiveTargetsChange(o, a);
        }, a.prototype.handleOnlineStateEvent = function (t) {
          this.activeClients[t.clientId] && this.onlineStateHandler(t.onlineState);
        }, a;
      }();

      var uc = function () {
        function t() {
          this.localState = new ac(), this.queryState = {}, this.syncEngine = null, this.onlineStateHandler = null, this.sequenceNumberHandler = null;
        }

        return t.prototype.addPendingMutation = function (t) {}, t.prototype.updateMutationState = function (t, e, n) {}, t.prototype.addLocalQueryTarget = function (t) {
          return this.localState.addQueryTarget(t), this.queryState[t] || "not-current";
        }, t.prototype.updateQueryState = function (t, e, n) {
          this.queryState[t] = e;
        }, t.prototype.removeLocalQueryTarget = function (t) {
          this.localState.removeQueryTarget(t);
        }, t.prototype.isLocalQueryTarget = function (t) {
          return this.localState.activeTargetIds.has(t);
        }, t.prototype.clearQueryState = function (t) {
          delete this.queryState[t];
        }, t.prototype.getAllActiveQueryTargets = function () {
          return this.localState.activeTargetIds;
        }, t.prototype.isActiveQueryTarget = function (t) {
          return this.localState.activeTargetIds.has(t);
        }, t.prototype.start = function () {
          return this.localState = new ac(), Promise.resolve();
        }, t.prototype.handleUserChange = function (t, e, n) {}, t.prototype.setOnlineState = function (t) {}, t.prototype.shutdown = function () {}, t.prototype.writeSequenceNumber = function (t) {}, t;
      }(),
          cc = "FirestoreClient",
          hc = function () {
        function t(t, e) {
          this.cacheSizeBytes = t, this.synchronizeTabs = e;
        }

        return t.prototype.lruParams = function () {
          return wa.withCacheSize(this.cacheSizeBytes);
        }, t;
      }(),
          lc = function lc() {},
          fc = function () {
        function t(t, e, n, r) {
          this.platform = t, this.databaseInfo = e, this.credentials = n, this.asyncQueue = r, this.clientId = si.newId(), this._clientShutdown = !1;
        }

        return t.prototype.start = function (t) {
          var n = this;
          this.verifyNotShutdown();
          var r = new Ni(),
              i = new Ni(),
              o = !1;
          return this.credentials.setChangeListener(function (e) {
            o ? n.asyncQueue.enqueueAndForget(function () {
              return n.handleCredentialChange(e);
            }) : (o = !0, n.initializePersistence(t, i, e).then(function (t) {
              return n.initializeRest(e, t);
            }).then(r.resolve, r.reject));
          }), this.asyncQueue.enqueueAndForget(function () {
            return r.promise;
          }), i.promise;
        }, t.prototype.enableNetwork = function () {
          var t = this;
          return this.verifyNotShutdown(), this.asyncQueue.enqueue(function () {
            return t.syncEngine.enableNetwork();
          });
        }, t.prototype.initializePersistence = function (t, e, n) {
          var r = this;
          return t instanceof hc ? this.startIndexedDbPersistence(n, t).then(function (t) {
            return e.resolve(), t;
          }).catch(function (t) {
            if (e.reject(t), !r.canFallback(t)) throw t;
            return console.warn("Error enabling offline persistence. Falling back to persistence disabled: " + t), r.startMemoryPersistence();
          }) : (e.resolve(), this.startMemoryPersistence());
        }, t.prototype.canFallback = function (t) {
          return t instanceof xr ? t.code === Lr.FAILED_PRECONDITION || t.code === Lr.UNIMPLEMENTED : !("undefined" != typeof DOMException && t instanceof DOMException) || 22 === t.code || 20 === t.code || 11 === t.code;
        }, t.prototype.verifyNotShutdown = function () {
          if (this._clientShutdown) throw new xr(Lr.FAILED_PRECONDITION, "The client has already been shutdown.");
        }, t.prototype.startIndexedDbPersistence = function (r, i) {
          var t = this,
              o = Na.buildStoragePrefix(this.databaseInfo),
              a = new Vu(this.databaseInfo.databaseId, {
            useProto3Json: !0
          });
          return Promise.resolve().then(function () {
            return h(t, void 0, void 0, function () {
              var e, n;
              return p(this, function (t) {
                switch (t.label) {
                  case 0:
                    if (i.synchronizeTabs && !sc.isAvailable(this.platform)) throw new xr(Lr.UNIMPLEMENTED, "IndexedDB persistence is only available on platforms that support LocalStorage.");
                    return n = i.lruParams(), i.synchronizeTabs ? (this.sharedClientState = new sc(this.asyncQueue, this.platform, o, this.clientId, r), [4, Na.createMultiClientIndexedDbPersistence(o, this.clientId, this.platform, this.asyncQueue, a, n, {
                      sequenceNumberSyncer: this.sharedClientState
                    })]) : [3, 2];

                  case 1:
                    return e = t.sent(), [3, 4];

                  case 2:
                    return this.sharedClientState = new uc(), [4, Na.createIndexedDbPersistence(o, this.clientId, this.platform, this.asyncQueue, a, n)];

                  case 3:
                    e = t.sent(), t.label = 4;

                  case 4:
                    return [2, (this.persistence = e).referenceDelegate.garbageCollector];
                }
              });
            });
          });
        }, t.prototype.startMemoryPersistence = function () {
          return this.persistence = vs.createEagerPersistence(this.clientId), this.sharedClientState = new uc(), Promise.resolve(null);
        }, t.prototype.initializeRest = function (u, c) {
          var t = this;
          return Ar(cc, "Initializing. user=", u.uid), this.platform.loadConnection(this.databaseInfo).then(function (s) {
            return h(t, void 0, void 0, function () {
              var e,
                  n,
                  r,
                  i,
                  o,
                  a = this;
              return p(this, function (t) {
                switch (t.label) {
                  case 0:
                    return this.localStore = new ps(this.persistence, u), c && (this.lruScheduler = new Ea(c, this.asyncQueue, this.localStore)), e = this.platform.newConnectivityMonitor(), n = this.platform.newSerializer(this.databaseInfo.databaseId), r = new Vs(this.asyncQueue, s, this.credentials, n), i = function i(t) {
                      return a.syncEngine.applyOnlineStateChange(t, Ps.RemoteStore);
                    }, o = function o(t) {
                      return a.syncEngine.applyOnlineStateChange(t, Ps.SharedClientState);
                    }, this.remoteStore = new lu(this.localStore, r, this.asyncQueue, i, e), this.syncEngine = new Xu(this.localStore, this.remoteStore, this.sharedClientState, u), this.sharedClientState.onlineStateHandler = o, this.remoteStore.syncEngine = this.syncEngine, this.sharedClientState.syncEngine = this.syncEngine, this.eventMgr = new Bu(this.syncEngine), [4, this.sharedClientState.start()];

                  case 1:
                    return t.sent(), [4, this.remoteStore.start()];

                  case 2:
                    return t.sent(), [4, this.persistence.setPrimaryStateListener(function (e) {
                      return h(a, void 0, void 0, function () {
                        return p(this, function (t) {
                          switch (t.label) {
                            case 0:
                              return [4, this.syncEngine.applyPrimaryState(e)];

                            case 1:
                              return t.sent(), this.lruScheduler && (e && !this.lruScheduler.started ? this.lruScheduler.start() : e || this.lruScheduler.stop()), [2];
                          }
                        });
                      });
                    })];

                  case 3:
                    return t.sent(), [4, this.persistence.setDatabaseDeletedListener(function () {
                      return h(a, void 0, void 0, function () {
                        return p(this, function (t) {
                          switch (t.label) {
                            case 0:
                              return [4, this.shutdown()];

                            case 1:
                              return t.sent(), [2];
                          }
                        });
                      });
                    })];

                  case 4:
                    return t.sent(), [2];
                }
              });
            });
          });
        }, t.prototype.handleCredentialChange = function (t) {
          return this.asyncQueue.verifyOperationInProgress(), Ar(cc, "Credential Changed. Current user: " + t.uid), this.syncEngine.handleCredentialChange(t);
        }, t.prototype.disableNetwork = function () {
          var t = this;
          return this.verifyNotShutdown(), this.asyncQueue.enqueue(function () {
            return t.syncEngine.disableNetwork();
          });
        }, t.prototype.shutdown = function () {
          var t = this;
          return this.asyncQueue.enqueue(function () {
            return h(t, void 0, void 0, function () {
              return p(this, function (t) {
                switch (t.label) {
                  case 0:
                    return this._clientShutdown ? [3, 4] : (this.lruScheduler && this.lruScheduler.stop(), [4, this.remoteStore.shutdown()]);

                  case 1:
                    return t.sent(), [4, this.sharedClientState.shutdown()];

                  case 2:
                    return t.sent(), [4, this.persistence.shutdown()];

                  case 3:
                    t.sent(), this.credentials.removeChangeListener(), this._clientShutdown = !0, t.label = 4;

                  case 4:
                    return [2];
                }
              });
            });
          });
        }, t.prototype.listen = function (t, e, n) {
          var r = this;
          this.verifyNotShutdown();
          var i = new Qu(t, e, n);
          return this.asyncQueue.enqueueAndForget(function () {
            return r.eventMgr.listen(i);
          }), i;
        }, t.prototype.unlisten = function (t) {
          var e = this;
          this.verifyNotShutdown(), this.asyncQueue.enqueueAndForget(function () {
            return e.eventMgr.unlisten(t);
          });
        }, t.prototype.getDocumentFromLocalCache = function (t) {
          var e = this;
          return this.verifyNotShutdown(), this.asyncQueue.enqueue(function () {
            return e.localStore.readDocument(t);
          }).then(function (t) {
            if (t instanceof Mo) return t;
            if (t instanceof Oo) return null;
            throw new xr(Lr.UNAVAILABLE, "Failed to get document from cache. (However, this document may exist on the server. Run again without setting 'source' in the GetOptions to attempt to retrieve the document from the server.)");
          });
        }, t.prototype.getDocumentsFromLocalCache = function (i) {
          var t = this;
          return this.verifyNotShutdown(), this.asyncQueue.enqueue(function () {
            return t.localStore.executeQuery(i);
          }).then(function (t) {
            var e = to(),
                n = new Wu(i, e),
                r = n.computeDocChanges(t);
            return n.applyChanges(r, !1).snapshot;
          });
        }, t.prototype.write = function (t) {
          var e = this;
          this.verifyNotShutdown();
          var n = new Ni();
          return this.asyncQueue.enqueueAndForget(function () {
            return e.syncEngine.write(t, n);
          }), n.promise;
        }, t.prototype.databaseId = function () {
          return this.databaseInfo.databaseId;
        }, Object.defineProperty(t.prototype, "clientShutdown", {
          get: function get() {
            return this._clientShutdown;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.transaction = function (t) {
          var e = this;
          return this.verifyNotShutdown(), this.asyncQueue.enqueue(function () {
            return h(e, void 0, void 0, function () {
              return p(this, function (t) {
                return [2];
              });
            });
          }).then(function () {
            return e.syncEngine.runTransaction(t);
          });
        }, t;
      }(),
          pc = function () {
        function t(t) {
          this.observer = t, this.muted = !1;
        }

        return t.prototype.next = function (t) {
          this.scheduleEvent(this.observer.next, t);
        }, t.prototype.error = function (t) {
          this.scheduleEvent(this.observer.error, t);
        }, t.prototype.mute = function () {
          this.muted = !0;
        }, t.prototype.scheduleEvent = function (t, e) {
          var n = this;
          this.muted || setTimeout(function () {
            n.muted || t(e);
          }, 0);
        }, t;
      }(),
          dc = function () {
        function e() {
          for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];

          !function (t, e, n, r) {
            if (!(e instanceof Array) || e.length < r) throw new xr(Lr.INVALID_ARGUMENT, "Function " + t + "() requires its " + n + " argument to be an array with at least " + ai(r, "element") + ".");
          }("FieldPath", t, "fieldNames", 1);

          for (var n = 0; n < t.length; ++n) if (zr("FieldPath", "string", n, t[n]), 0 === t[n].length) throw new xr(Lr.INVALID_ARGUMENT, "Invalid field name at argument $(i + 1). Field names must not be empty.");

          this._internalPath = new Ci(t);
        }

        return e.documentId = function () {
          return e._DOCUMENT_ID;
        }, e.prototype.isEqual = function (t) {
          if (!(t instanceof e)) throw ii("isEqual", "FieldPath", 1, t);
          return this._internalPath.isEqual(t._internalPath);
        }, e._DOCUMENT_ID = new e(Ci.keyField().canonicalString()), e;
      }(),
          mc = new RegExp("[~\\*/\\[\\]]");

      var yc = function yc(t, e) {
        this.user = e, this.type = "OAuth", this.authHeaders = {
          Authorization: "Bearer " + t
        };
      },
          gc = function () {
        function t() {
          this.changeListener = null;
        }

        return t.prototype.getToken = function () {
          return Promise.resolve(null);
        }, t.prototype.invalidateToken = function () {}, t.prototype.setChangeListener = function (t) {
          Or(!this.changeListener, "Can only call setChangeListener() once."), (this.changeListener = t)(Ju.UNAUTHENTICATED);
        }, t.prototype.removeChangeListener = function () {
          Or(null !== this.changeListener, "removeChangeListener() when no listener registered"), this.changeListener = null;
        }, t;
      }(),
          vc = function () {
        function t(t) {
          var e = this;
          this.app = t, this.tokenListener = null, this.tokenCounter = 0, this.changeListener = null, this.forceRefresh = !1, this.tokenListener = function () {
            e.tokenCounter++, e.currentUser = e.getUser(), e.changeListener && e.changeListener(e.currentUser);
          }, this.tokenCounter = 0, this.app.INTERNAL.addAuthTokenListener(this.tokenListener);
        }

        return t.prototype.getToken = function () {
          var e = this;
          Or(null != this.tokenListener, "getToken cannot be called after listener removed.");
          var n = this.tokenCounter,
              t = this.forceRefresh;
          return this.forceRefresh = !1, this.app.INTERNAL.getToken(t).then(function (t) {
            if (e.tokenCounter !== n) throw new xr(Lr.ABORTED, "getToken aborted due to token change.");
            return t ? (Or("string" == typeof t.accessToken, "Invalid tokenData returned from getToken():" + t), new yc(t.accessToken, e.currentUser)) : null;
          });
        }, t.prototype.invalidateToken = function () {
          this.forceRefresh = !0;
        }, t.prototype.setChangeListener = function (t) {
          Or(!this.changeListener, "Can only call setChangeListener() once."), this.changeListener = t, this.currentUser && t(this.currentUser);
        }, t.prototype.removeChangeListener = function () {
          Or(null != this.tokenListener, "removeChangeListener() called twice"), Or(null !== this.changeListener, "removeChangeListener() called when no listener registered"), this.app.INTERNAL.removeAuthTokenListener(this.tokenListener), this.tokenListener = null, this.changeListener = null;
        }, t.prototype.getUser = function () {
          var t = this.app.INTERNAL.getUid();
          return Or(null === t || "string" == typeof t, "Received invalid UID: " + t), new Ju(t);
        }, t;
      }(),
          bc = function () {
        function t(t, e) {
          this.gapi = t, this.sessionIndex = e, this.type = "FirstParty", this.user = Ju.FIRST_PARTY;
        }

        return Object.defineProperty(t.prototype, "authHeaders", {
          get: function get() {
            var t = {
              "X-Goog-AuthUser": this.sessionIndex
            },
                e = this.gapi.auth.getAuthHeaderValueForFirstParty([]);
            return e && (t.Authorization = e), t;
          },
          enumerable: !0,
          configurable: !0
        }), t;
      }(),
          wc = function () {
        function t(t, e) {
          this.gapi = t, this.sessionIndex = e;
        }

        return t.prototype.getToken = function () {
          return Promise.resolve(new bc(this.gapi, this.sessionIndex));
        }, t.prototype.setChangeListener = function (t) {
          t(Ju.FIRST_PARTY);
        }, t.prototype.removeChangeListener = function () {}, t.prototype.invalidateToken = function () {}, t;
      }();

      function Ec(t) {
        return function (t, e) {
          if ("object" != typeof t || null === t) return !1;

          for (var n = t, r = 0, i = e; r < i.length; r++) {
            var o = i[r];
            if (o in n && "function" == typeof n[o]) return !0;
          }

          return !1;
        }(t, ["next", "error", "complete"]);
      }

      var Sc,
          Tc,
          Ic = function () {
        function t(t) {
          this._methodName = t;
        }

        return t.delete = function () {
          return Kr("FieldValue.delete", arguments), Cc.instance;
        }, t.serverTimestamp = function () {
          return Kr("FieldValue.serverTimestamp", arguments), Dc.instance;
        }, t.arrayUnion = function () {
          for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];

          return Gr("FieldValue.arrayUnion", arguments, 1), new Nc(t);
        }, t.arrayRemove = function () {
          for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];

          return Gr("FieldValue.arrayRemove", arguments, 1), new Ac(t);
        }, t.increment = function (t) {
          return zr("FieldValue.increment", "number", 1, t), jr("FieldValue.increment", arguments, 1), new kc(t);
        }, t.prototype.isEqual = function (t) {
          return this === t;
        }, t;
      }(),
          Cc = function (t) {
        function e() {
          return t.call(this, "FieldValue.delete") || this;
        }

        return s(e, t), e.instance = new e(), e;
      }(Ic),
          Dc = function (t) {
        function e() {
          return t.call(this, "FieldValue.serverTimestamp") || this;
        }

        return s(e, t), e.instance = new e(), e;
      }(Ic),
          Nc = function (n) {
        function t(t) {
          var e = n.call(this, "FieldValue.arrayUnion") || this;
          return e._elements = t, e;
        }

        return s(t, n), t;
      }(Ic),
          Ac = function (n) {
        function t(t) {
          var e = n.call(this, "FieldValue.arrayRemove") || this;
          return e._elements = t, e;
        }

        return s(t, n), t;
      }(Ic),
          kc = function (n) {
        function t(t) {
          var e = n.call(this, "FieldValue.increment") || this;
          return e._operand = t, e;
        }

        return s(t, n), t;
      }(Ic),
          Rc = qr(Ic, "Use FieldValue.<field>() instead."),
          Mc = /^__.*__$/,
          Oc = function () {
        function t(t, e, n) {
          this.data = t, this.fieldMask = e, this.fieldTransforms = n;
        }

        return t.prototype.toMutations = function (t, e) {
          var n = [];
          return null !== this.fieldMask ? n.push(new ss(t, this.data, this.fieldMask, e)) : n.push(new as(t, this.data, e)), 0 < this.fieldTransforms.length && n.push(new us(t, this.fieldTransforms)), n;
        }, t;
      }(),
          _c = function () {
        function t(t, e, n) {
          this.data = t, this.fieldMask = e, this.fieldTransforms = n;
        }

        return t.prototype.toMutations = function (t, e) {
          var n = [new ss(t, this.data, this.fieldMask, e)];
          return 0 < this.fieldTransforms.length && n.push(new us(t, this.fieldTransforms)), n;
        }, t;
      }();

      function Pc(t) {
        switch (t) {
          case Sc.Set:
          case Sc.MergeSet:
          case Sc.Update:
            return !0;

          case Sc.Argument:
            return !1;

          default:
            throw Mr("Unexpected case for UserDataSource: " + t);
        }
      }

      (Tc = Sc || (Sc = {}))[Tc.Set = 0] = "Set", Tc[Tc.Update = 1] = "Update", Tc[Tc.MergeSet = 2] = "MergeSet", Tc[Tc.Argument = 3] = "Argument";

      var Lc = function () {
        function r(t, e, n, r, i, o) {
          this.dataSource = t, this.methodName = e, this.path = n, this.arrayElement = r, void 0 === i && this.validatePath(), this.arrayElement = void 0 !== r && r, this.fieldTransforms = i || [], this.fieldMask = o || [];
        }

        return r.prototype.childContextForField = function (t) {
          var e = null == this.path ? null : this.path.child(t),
              n = new r(this.dataSource, this.methodName, e, !1, this.fieldTransforms, this.fieldMask);
          return n.validatePathSegment(t), n;
        }, r.prototype.childContextForFieldPath = function (t) {
          var e = null == this.path ? null : this.path.child(t),
              n = new r(this.dataSource, this.methodName, e, !1, this.fieldTransforms, this.fieldMask);
          return n.validatePath(), n;
        }, r.prototype.childContextForArray = function (t) {
          return new r(this.dataSource, this.methodName, null, !0, this.fieldTransforms, this.fieldMask);
        }, r.prototype.createError = function (t) {
          var e = null === this.path || this.path.isEmpty() ? "" : " (found in field " + this.path.toString() + ")";
          return new xr(Lr.INVALID_ARGUMENT, "Function " + this.methodName + "() called with invalid data. " + t + e);
        }, r.prototype.contains = function (e) {
          return void 0 !== this.fieldMask.find(function (t) {
            return e.isPrefixOf(t);
          }) || void 0 !== this.fieldTransforms.find(function (t) {
            return e.isPrefixOf(t.field);
          });
        }, r.prototype.validatePath = function () {
          if (null !== this.path) for (var t = 0; t < this.path.length; t++) this.validatePathSegment(this.path.get(t));
        }, r.prototype.validatePathSegment = function (t) {
          if (Pc(this.dataSource) && Mc.test(t)) throw this.createError("Document fields cannot begin and end with __");
        }, r;
      }(),
          xc = function xc(t, e) {
        this.databaseId = t, this.key = e;
      },
          qc = function () {
        function t(t) {
          this.preConverter = t;
        }

        return t.prototype.parseSetData = function (t, e) {
          var n = new Lc(Sc.Set, t, Ci.EMPTY_PATH);
          Vc("Data must be an object, but it was:", n, e);
          var r = this.parseData(e, n);
          return new Oc(r, null, n.fieldTransforms);
        }, t.prototype.parseMergeData = function (t, e, n) {
          var r = new Lc(Sc.MergeSet, t, Ci.EMPTY_PATH);
          Vc("Data must be an object, but it was:", r, e);
          var i,
              o,
              a = this.parseData(e, r);

          if (n) {
            for (var s = new ji(Ci.comparator), u = 0, c = n; u < c.length; u++) {
              var h = c[u],
                  l = void 0;
              if (h instanceof dc) l = h._internalPath;else {
                if ("string" != typeof h) throw Mr("Expected stringOrFieldPath to be a string or a FieldPath");
                l = Bc(t, h);
              }
              if (!r.contains(l)) throw new xr(Lr.INVALID_ARGUMENT, "Field '" + l + "' is specified in your field mask but missing from your input data.");
              s = s.add(l);
            }

            i = es.fromSet(s), o = r.fieldTransforms.filter(function (t) {
              return i.covers(t.field);
            });
          } else i = es.fromArray(r.fieldMask), o = r.fieldTransforms;

          return new Oc(a, i, o);
        }, t.prototype.parseUpdateData = function (o, t) {
          var a = this,
              s = new Lc(Sc.Update, o, Ci.EMPTY_PATH);
          Vc("Data must be an object, but it was:", s, t);
          var u = new ji(Ci.comparator),
              c = Za.EMPTY;
          Br(t, function (t, e) {
            var n = Bc(o, t),
                r = s.childContextForFieldPath(n);
            if ((e = a.runPreConverter(e, r)) instanceof Cc) u = u.add(n);else {
              var i = a.parseData(e, r);
              null != i && (u = u.add(n), c = c.set(n, i));
            }
          });
          var e = es.fromSet(u);
          return new _c(c, e, s.fieldTransforms);
        }, t.prototype.parseUpdateVarargs = function (t, e, n, r) {
          var i = new Lc(Sc.Update, t, Ci.EMPTY_PATH),
              o = [Uc(t, e)],
              a = [n];
          if (r.length % 2 != 0) throw new xr(Lr.INVALID_ARGUMENT, "Function " + t + "() needs to be called with an even number of arguments that alternate between field names and values.");

          for (var s = 0; s < r.length; s += 2) o.push(Uc(t, r[s])), a.push(r[s + 1]);

          var u = new ji(Ci.comparator),
              c = Za.EMPTY;

          for (s = 0; s < o.length; ++s) {
            var h = o[s],
                l = i.childContextForFieldPath(h),
                f = this.runPreConverter(a[s], l);
            if (f instanceof Cc) u = u.add(h);else {
              var p = this.parseData(f, l);
              null != p && (u = u.add(h), c = c.set(h, p));
            }
          }

          var d = es.fromSet(u);
          return new _c(c, d, i.fieldTransforms);
        }, t.prototype.parseQueryValue = function (t, e) {
          var n = new Lc(Sc.Argument, t, Ci.EMPTY_PATH),
              r = this.parseData(e, n);
          return Or(null != r, "Parsed data should not be null."), Or(0 === n.fieldTransforms.length, "Field transforms should have been disallowed."), r;
        }, t.prototype.runPreConverter = function (t, e) {
          try {
            return this.preConverter(t);
          } catch (t) {
            var n = Qc(t);
            throw e.createError(n);
          }
        }, t.prototype.parseData = function (t, e) {
          if (Fc(t = this.runPreConverter(t, e))) return Vc("Unsupported field value:", e, t), this.parseObject(t, e);
          if (t instanceof Ic) return this.parseSentinelFieldValue(t, e), null;

          if (e.path && e.fieldMask.push(e.path), t instanceof Array) {
            if (e.arrayElement) throw e.createError("Nested arrays are not supported");
            return this.parseArray(t, e);
          }

          return this.parseScalarValue(t, e);
        }, t.prototype.parseObject = function (t, r) {
          var i = this,
              o = new Ui(ui);
          return Qr(t) ? r.path && 0 < r.path.length && r.fieldMask.push(r.path) : Br(t, function (t, e) {
            var n = i.parseData(e, r.childContextForField(t));
            null != n && (o = o.insert(t, n));
          }), new Za(o);
        }, t.prototype.parseArray = function (t, e) {
          for (var n = [], r = 0, i = 0, o = t; i < o.length; i++) {
            var a = o[i],
                s = this.parseData(a, e.childContextForArray(r));
            null == s && (s = Va.INSTANCE), n.push(s), r++;
          }

          return new ts(n);
        }, t.prototype.parseSentinelFieldValue = function (t, e) {
          if (!Pc(e.dataSource)) throw e.createError(t._methodName + "() can only be used with update() and set()");
          if (null === e.path) throw e.createError(t._methodName + "() is not currently supported inside arrays");

          if (t instanceof Cc) {
            if (e.dataSource !== Sc.MergeSet) throw e.dataSource === Sc.Update ? (Or(0 < e.path.length, "FieldValue.delete() at the top level should have already been handled."), e.createError("FieldValue.delete() can only appear at the top level of your update data")) : e.createError("FieldValue.delete() cannot be used with set() unless you pass {merge:true}");
            e.fieldMask.push(e.path);
          } else if (t instanceof Dc) e.fieldTransforms.push(new ns(e.path, Du.instance));else if (t instanceof Nc) {
            var n = this.parseArrayTransformElements(t._methodName, t._elements),
                r = new Nu(n);
            e.fieldTransforms.push(new ns(e.path, r));
          } else if (t instanceof Ac) {
            n = this.parseArrayTransformElements(t._methodName, t._elements);
            var i = new Au(n);
            e.fieldTransforms.push(new ns(e.path, i));
          } else if (t instanceof kc) {
            var o = this.parseQueryValue("FieldValue.increment", t._operand),
                a = new ku(o);
            e.fieldTransforms.push(new ns(e.path, a));
          } else Mr("Unknown FieldValue type: " + t);
        }, t.prototype.parseScalarValue = function (t, e) {
          if (null === t) return Va.INSTANCE;
          if ("number" == typeof t) return Ns(t) ? new Ga(t) : new Wa(t);
          if ("boolean" == typeof t) return Ua.of(t);
          if ("string" == typeof t) return new za(t);
          if (t instanceof Date) return new Ha(Fi.fromDate(t));
          if (t instanceof Fi) return new Ha(new Fi(t.seconds, 1e3 * Math.floor(t.nanoseconds / 1e3)));
          if (t instanceof fu) return new $a(t);
          if (t instanceof mi) return new Xa(t);
          if (t instanceof xc) return new Ja(t.databaseId, t.key);
          throw e.createError("Unsupported field value: " + ei(t));
        }, t.prototype.parseArrayTransformElements = function (r, t) {
          var i = this;
          return t.map(function (t, e) {
            var n = new Lc(Sc.Argument, r, Ci.EMPTY_PATH);
            return i.parseData(t, n.childContextForArray(e));
          });
        }, t;
      }();

      function Fc(t) {
        return !("object" != typeof t || null === t || t instanceof Array || t instanceof Date || t instanceof Fi || t instanceof fu || t instanceof mi || t instanceof xc || t instanceof Ic);
      }

      function Vc(t, e, n) {
        if (!Fc(n) || !ti(n)) {
          var r = ei(n);
          throw "an object" === r ? e.createError(t + " a custom object") : e.createError(t + " " + r);
        }
      }

      function Uc(t, e) {
        if (e instanceof dc) return e._internalPath;
        if ("string" == typeof e) return Bc(t, e);
        throw new xr(Lr.INVALID_ARGUMENT, "Function " + t + "() called with invalid data. Field path arguments must be of type string or FieldPath.");
      }

      function Bc(e, t) {
        try {
          return function (e) {
            if (0 <= e.search(mc)) throw new xr(Lr.INVALID_ARGUMENT, "Invalid field path (" + e + "). Paths must not contain '~', '*', '/', '[', or ']'");

            try {
              return new (dc.bind.apply(dc, [void 0].concat(e.split("."))))();
            } catch (t) {
              throw new xr(Lr.INVALID_ARGUMENT, "Invalid field path (" + e + "). Paths must not be empty, begin with '.', end with '.', or contain '..'");
            }
          }(t)._internalPath;
        } catch (t) {
          var n = Qc(t);
          throw new xr(Lr.INVALID_ARGUMENT, "Function " + e + "() called with invalid data. " + n);
        }
      }

      function Qc(t) {
        return t instanceof Error ? t.message : t.toString();
      }

      var Kc = wa.COLLECTION_DISABLED,
          jc = function () {
        function t(t) {
          if (void 0 === t.host) {
            if (void 0 !== t.ssl) throw new xr(Lr.INVALID_ARGUMENT, "Can't provide ssl option if host option is not set");
            this.host = "firestore.googleapis.com", this.ssl = !0;
          } else Yr("settings", "non-empty string", "host", t.host), this.host = t.host, Xr("settings", "boolean", "ssl", t.ssl), this.ssl = Vr(t.ssl, !0);

          if (ri("settings", t, ["host", "ssl", "credentials", "timestampsInSnapshots", "cacheSizeBytes", "experimentalForceLongPolling"]), Xr("settings", "object", "credentials", t.credentials), this.credentials = t.credentials, Xr("settings", "boolean", "timestampsInSnapshots", t.timestampsInSnapshots), !0 === t.timestampsInSnapshots ? kr("\n  The timestampsInSnapshots setting now defaults to true and you no\n  longer need to explicitly set it. In a future release, the setting\n  will be removed entirely and so it is recommended that you remove it\n  from your firestore.settings() call now.") : !1 === t.timestampsInSnapshots && kr("\n  The timestampsInSnapshots setting will soon be removed. YOU MUST UPDATE\n  YOUR CODE.\n\n  To hide this warning, stop using the timestampsInSnapshots setting in your\n  firestore.settings({ ... }) call.\n\n  Once you remove the setting, Timestamps stored in Cloud Firestore will be\n  read back as Firebase Timestamp objects instead of as system Date objects.\n  So you will also need to update code expecting a Date to instead expect a\n  Timestamp. For example:\n\n  // Old:\n  const date = snapshot.get('created_at');\n  // New:\n  const timestamp = snapshot.get('created_at'); const date =\n  timestamp.toDate();\n\n  Please audit all existing usages of Date when you enable the new\n  behavior."), this.timestampsInSnapshots = Vr(t.timestampsInSnapshots, !0), Xr("settings", "number", "cacheSizeBytes", t.cacheSizeBytes), void 0 === t.cacheSizeBytes) this.cacheSizeBytes = wa.DEFAULT_CACHE_SIZE_BYTES;else {
            if (t.cacheSizeBytes !== Kc && t.cacheSizeBytes < wa.MINIMUM_CACHE_SIZE_BYTES) throw new xr(Lr.INVALID_ARGUMENT, "cacheSizeBytes must be at least " + wa.MINIMUM_CACHE_SIZE_BYTES);
            this.cacheSizeBytes = t.cacheSizeBytes;
          }
          Xr("settings", "boolean", "experimentalForceLongPolling", t.experimentalForceLongPolling), this.forceLongPolling = void 0 !== t.experimentalForceLongPolling && t.experimentalForceLongPolling;
        }

        return t.prototype.isEqual = function (t) {
          return this.host === t.host && this.ssl === t.ssl && this.timestampsInSnapshots === t.timestampsInSnapshots && this.credentials === t.credentials && this.cacheSizeBytes === t.cacheSizeBytes && this.forceLongPolling === t.forceLongPolling;
        }, t;
      }(),
          Gc = function Gc() {},
          Wc = function () {
        function o(t) {
          var e = this;
          this._queue = new ki(), this.INTERNAL = {
            delete: function _delete() {
              return h(e, void 0, void 0, function () {
                return p(this, function (t) {
                  switch (t.label) {
                    case 0:
                      return this.ensureClientConfigured(), [4, this._firestoreClient.shutdown()];

                    case 1:
                      return t.sent(), [2];
                  }
                });
              });
            }
          };
          var n = new Gc();

          if ("object" == typeof t.options) {
            var r = t;
            n.firebaseApp = r, n.databaseId = o.databaseIdFromApp(r), n.persistenceKey = n.firebaseApp.name, n.credentials = new vc(r);
          } else {
            var i = t;
            if (!i.projectId) throw new xr(Lr.INVALID_ARGUMENT, "Must provide projectId");
            n.databaseId = new bi(i.projectId, i.database), n.persistenceKey = "[DEFAULT]", n.credentials = new gc();
          }

          n.settings = new jc({}), this._config = n, this._databaseId = n.databaseId;
        }

        return o.prototype.settings = function (t) {
          if (jr("Firestore.settings", arguments, 1), zr("Firestore.settings", "object", 1, t), Fr(t, "persistence")) throw new xr(Lr.INVALID_ARGUMENT, '"persistence" is now specified with a separate call to firestore.enablePersistence().');
          var e = new jc(t);
          if (this._firestoreClient && !this._config.settings.isEqual(e)) throw new xr(Lr.FAILED_PRECONDITION, "Firestore has already been started and its settings can no longer be changed. You can only call settings() before calling any other methods on a Firestore object.");
          void 0 !== (this._config.settings = e).credentials && (this._config.credentials = function (t) {
            if (!t) return new gc();

            switch (t.type) {
              case "gapi":
                var e = t.client;
                return Or(!("object" != typeof e || null === e || !e.auth || !e.auth.getAuthHeaderValueForFirstParty), "unexpected gapi interface"), new wc(e, t.sessionIndex || "0");

              case "provider":
                return t.client;

              default:
                throw new xr(Lr.INVALID_ARGUMENT, "makeCredentialsProvider failed due to invalid credential type");
            }
          }(e.credentials));
        }, o.prototype.enableNetwork = function () {
          return this.ensureClientConfigured(), this._firestoreClient.enableNetwork();
        }, o.prototype.disableNetwork = function () {
          return this.ensureClientConfigured(), this._firestoreClient.disableNetwork();
        }, o.prototype.enablePersistence = function (t) {
          if (this._firestoreClient) throw new xr(Lr.FAILED_PRECONDITION, "Firestore has already been started and persistence can no longer be enabled. You can only call enablePersistence() before calling any other methods on a Firestore object.");
          var e = !1;
          return t && (void 0 !== t.experimentalTabSynchronization && kr("The 'experimentalTabSynchronization' setting has been renamed to 'synchronizeTabs'. In a future release, the setting will be removed and it is recommended that you update your firestore.enablePersistence() call to use 'synchronizeTabs'."), e = Vr(void 0 !== t.synchronizeTabs ? t.synchronizeTabs : t.experimentalTabSynchronization, !1)), this.configureClient(new hc(this._config.settings.cacheSizeBytes, e));
        }, o.prototype.clearPersistence = function () {
          var t = this,
              n = Na.buildStoragePrefix(this.makeDatabaseInfo()),
              r = new Ni();
          return this._queue.enqueueAndForget(function () {
            return h(t, void 0, void 0, function () {
              var e;
              return p(this, function (t) {
                switch (t.label) {
                  case 0:
                    if (t.trys.push([0, 2,, 3]), void 0 !== this._firestoreClient && !this._firestoreClient.clientShutdown) throw new xr(Lr.FAILED_PRECONDITION, "Persistence cannot be cleared after this Firestore instance is initialized.");
                    return [4, Na.clearPersistence(n)];

                  case 1:
                    return t.sent(), r.resolve(), [3, 3];

                  case 2:
                    return e = t.sent(), r.reject(e), [3, 3];

                  case 3:
                    return [2];
                }
              });
            });
          }), r.promise;
        }, o.prototype.ensureClientConfigured = function () {
          return this._firestoreClient || this.configureClient(new lc()), this._firestoreClient;
        }, o.prototype.makeDatabaseInfo = function () {
          return new gi(this._config.databaseId, this._config.persistenceKey, this._config.settings.host, this._config.settings.ssl, this._config.settings.forceLongPolling);
        }, o.prototype.configureClient = function (t) {
          var r = this;
          Or(!!this._config.settings.host, "FirestoreSettings.host cannot be falsey"), Or(!this._firestoreClient, "configureClient() called multiple times");
          var e = this.makeDatabaseInfo();
          return this._dataConverter = new qc(function (t) {
            if (t instanceof Yc) {
              var e = r._config.databaseId,
                  n = t.firestore._config.databaseId;
              if (!n.isEqual(e)) throw new xr(Lr.INVALID_ARGUMENT, "Document reference is for database " + n.projectId + "/" + n.database + " but should be for database " + e.projectId + "/" + e.database);
              return new xc(r._config.databaseId, t._key);
            }

            return t;
          }), this._firestoreClient = new fc(_r.getPlatform(), e, this._config.credentials, this._queue), this._firestoreClient.start(t);
        }, o.databaseIdFromApp = function (t) {
          var e = t.options;
          if (!Fr(e, "projectId")) throw new xr(Lr.INVALID_ARGUMENT, '"projectId" not provided in firebase.initializeApp.');
          var n = e.projectId;
          if (!n || "string" != typeof n) throw new xr(Lr.INVALID_ARGUMENT, "projectId must be a string in FirebaseApp.options");
          return new bi(n);
        }, Object.defineProperty(o.prototype, "app", {
          get: function get() {
            if (!this._config.firebaseApp) throw new xr(Lr.FAILED_PRECONDITION, "Firestore was not initialized using the Firebase SDK. 'app' is not available");
            return this._config.firebaseApp;
          },
          enumerable: !0,
          configurable: !0
        }), o.prototype.collection = function (t) {
          return jr("Firestore.collection", arguments, 1), zr("Firestore.collection", "non-empty string", 1, t), this.ensureClientConfigured(), new eh(Ti.fromString(t), this);
        }, o.prototype.doc = function (t) {
          return jr("Firestore.doc", arguments, 1), zr("Firestore.doc", "non-empty string", 1, t), this.ensureClientConfigured(), Yc.forPath(Ti.fromString(t), this);
        }, o.prototype.collectionGroup = function (t) {
          if (jr("Firestore.collectionGroup", arguments, 1), zr("Firestore.collectionGroup", "non-empty string", 1, t), 0 <= t.indexOf("/")) throw new xr(Lr.INVALID_ARGUMENT, "Invalid collection ID '" + t + "' passed to function Firestore.collectionGroup(). Collection IDs must not contain '/'.");
          return this.ensureClientConfigured(), new Zc(new pu(Ti.EMPTY_PATH, t), this);
        }, o.prototype.runTransaction = function (e) {
          var n = this;
          return jr("Firestore.runTransaction", arguments, 1), zr("Firestore.runTransaction", "function", 1, e), this.ensureClientConfigured().transaction(function (t) {
            return e(new zc(n, t));
          });
        }, o.prototype.batch = function () {
          return this.ensureClientConfigured(), new Hc(this);
        }, Object.defineProperty(o, "logLevel", {
          get: function get() {
            switch (Dr()) {
              case yr.DEBUG:
                return "debug";

              case yr.ERROR:
                return "error";

              case yr.SILENT:
                return "silent";

              default:
                return Mr("Unknown log level: " + Dr());
            }
          },
          enumerable: !0,
          configurable: !0
        }), o.setLogLevel = function (t) {
          switch (jr("Firestore.setLogLevel", arguments, 1), zr("Firestore.setLogLevel", "non-empty string", 1, t), t) {
            case "debug":
              Nr(yr.DEBUG);
              break;

            case "error":
              Nr(yr.ERROR);
              break;

            case "silent":
              Nr(yr.SILENT);
              break;

            default:
              throw new xr(Lr.INVALID_ARGUMENT, "Invalid log level: " + t);
          }
        }, o.prototype._areTimestampsInSnapshotsEnabled = function () {
          return this._config.settings.timestampsInSnapshots;
        }, o;
      }(),
          zc = function () {
        function t(t, e) {
          this._firestore = t, this._transaction = e;
        }

        return t.prototype.get = function (t) {
          var n = this;
          jr("Transaction.get", arguments, 1);
          var r = oh("Transaction.get", t, this._firestore);
          return this._transaction.lookup([r._key]).then(function (t) {
            if (!t || 1 !== t.length) return Mr("Mismatch in docs returned from document lookup.");
            var e = t[0];
            if (e instanceof Oo) return new Jc(n._firestore, r._key, null, !1, !1);
            if (e instanceof Mo) return new Jc(n._firestore, r._key, e, !1, !1);
            throw Mr("BatchGetDocumentsRequest returned unexpected document type: " + e.constructor.name);
          });
        }, t.prototype.set = function (t, e, n) {
          Wr("Transaction.set", arguments, 2, 3);
          var r = oh("Transaction.set", t, this._firestore),
              i = (n = nh("Transaction.set", n)).merge || n.mergeFields ? this._firestore._dataConverter.parseMergeData("Transaction.set", e, n.mergeFields) : this._firestore._dataConverter.parseSetData("Transaction.set", e);
          return this._transaction.set(r._key, i), this;
        }, t.prototype.update = function (t, e, n) {
          for (var r, i, o = [], a = 3; a < arguments.length; a++) o[a - 3] = arguments[a];

          return i = "string" == typeof e || e instanceof dc ? (Gr("Transaction.update", arguments, 3), r = oh("Transaction.update", t, this._firestore), this._firestore._dataConverter.parseUpdateVarargs("Transaction.update", e, n, o)) : (jr("Transaction.update", arguments, 2), r = oh("Transaction.update", t, this._firestore), this._firestore._dataConverter.parseUpdateData("Transaction.update", e)), this._transaction.update(r._key, i), this;
        }, t.prototype.delete = function (t) {
          jr("Transaction.delete", arguments, 1);
          var e = oh("Transaction.delete", t, this._firestore);
          return this._transaction.delete(e._key), this;
        }, t;
      }(),
          Hc = function () {
        function t(t) {
          this._firestore = t, this._mutations = [], this._committed = !1;
        }

        return t.prototype.set = function (t, e, n) {
          Wr("WriteBatch.set", arguments, 2, 3), this.verifyNotCommitted();
          var r = oh("WriteBatch.set", t, this._firestore),
              i = (n = nh("WriteBatch.set", n)).merge || n.mergeFields ? this._firestore._dataConverter.parseMergeData("WriteBatch.set", e, n.mergeFields) : this._firestore._dataConverter.parseSetData("WriteBatch.set", e);
          return this._mutations = this._mutations.concat(i.toMutations(r._key, is.NONE)), this;
        }, t.prototype.update = function (t, e, n) {
          for (var r, i, o = [], a = 3; a < arguments.length; a++) o[a - 3] = arguments[a];

          return this.verifyNotCommitted(), i = "string" == typeof e || e instanceof dc ? (Gr("WriteBatch.update", arguments, 3), r = oh("WriteBatch.update", t, this._firestore), this._firestore._dataConverter.parseUpdateVarargs("WriteBatch.update", e, n, o)) : (jr("WriteBatch.update", arguments, 2), r = oh("WriteBatch.update", t, this._firestore), this._firestore._dataConverter.parseUpdateData("WriteBatch.update", e)), this._mutations = this._mutations.concat(i.toMutations(r._key, is.exists(!0))), this;
        }, t.prototype.delete = function (t) {
          jr("WriteBatch.delete", arguments, 1), this.verifyNotCommitted();
          var e = oh("WriteBatch.delete", t, this._firestore);
          return this._mutations = this._mutations.concat(new cs(e._key, is.NONE)), this;
        }, t.prototype.commit = function () {
          return h(this, void 0, void 0, function () {
            return p(this, function (t) {
              return this.verifyNotCommitted(), this._committed = !0, 0 < this._mutations.length ? [2, this._firestore.ensureClientConfigured().write(this._mutations)] : [2];
            });
          });
        }, t.prototype.verifyNotCommitted = function () {
          if (this._committed) throw new xr(Lr.FAILED_PRECONDITION, "A write batch can no longer be used after commit() has been called.");
        }, t;
      }(),
          Yc = function () {
        function n(t, e) {
          this._key = t, this.firestore = e, this._firestoreClient = this.firestore.ensureClientConfigured();
        }

        return n.forPath = function (t, e) {
          if (t.length % 2 != 0) throw new xr(Lr.INVALID_ARGUMENT, "Invalid document reference. Document references must have an even number of segments, but " + t.canonicalString() + " has " + t.length);
          return new n(new Di(t), e);
        }, Object.defineProperty(n.prototype, "id", {
          get: function get() {
            return this._key.path.lastSegment();
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(n.prototype, "parent", {
          get: function get() {
            return new eh(this._key.path.popLast(), this.firestore);
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(n.prototype, "path", {
          get: function get() {
            return this._key.path.canonicalString();
          },
          enumerable: !0,
          configurable: !0
        }), n.prototype.collection = function (t) {
          if (jr("DocumentReference.collection", arguments, 1), zr("DocumentReference.collection", "non-empty string", 1, t), !t) throw new xr(Lr.INVALID_ARGUMENT, "Must provide a non-empty collection name to collection()");
          var e = Ti.fromString(t);
          return new eh(this._key.path.child(e), this.firestore);
        }, n.prototype.isEqual = function (t) {
          if (!(t instanceof n)) throw ii("isEqual", "DocumentReference", 1, t);
          return this.firestore === t.firestore && this._key.isEqual(t._key);
        }, n.prototype.set = function (t, e) {
          Wr("DocumentReference.set", arguments, 1, 2);
          var n = (e = nh("DocumentReference.set", e)).merge || e.mergeFields ? this.firestore._dataConverter.parseMergeData("DocumentReference.set", t, e.mergeFields) : this.firestore._dataConverter.parseSetData("DocumentReference.set", t);
          return this._firestoreClient.write(n.toMutations(this._key, is.NONE));
        }, n.prototype.update = function (t, e) {
          for (var n, r = [], i = 2; i < arguments.length; i++) r[i - 2] = arguments[i];

          return n = "string" == typeof t || t instanceof dc ? (Gr("DocumentReference.update", arguments, 2), this.firestore._dataConverter.parseUpdateVarargs("DocumentReference.update", t, e, r)) : (jr("DocumentReference.update", arguments, 1), this.firestore._dataConverter.parseUpdateData("DocumentReference.update", t)), this._firestoreClient.write(n.toMutations(this._key, is.exists(!0)));
        }, n.prototype.delete = function () {
          return jr("DocumentReference.delete", arguments, 0), this._firestoreClient.write([new cs(this._key, is.NONE)]);
        }, n.prototype.onSnapshot = function () {
          for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];

          Wr("DocumentReference.onSnapshot", arguments, 1, 4);
          var n,
              r = {
            includeMetadataChanges: !1
          },
              i = 0;
          "object" != typeof t[i] || Ec(t[i]) || (ri("DocumentReference.onSnapshot", r = t[i], ["includeMetadataChanges"]), Xr("DocumentReference.onSnapshot", "boolean", "includeMetadataChanges", r.includeMetadataChanges), i++);
          var o = {
            includeMetadataChanges: r.includeMetadataChanges
          };
          return n = Ec(t[i]) ? t[i] : (zr("DocumentReference.onSnapshot", "function", i, t[i]), Hr("DocumentReference.onSnapshot", "function", i + 1, t[i + 1]), Hr("DocumentReference.onSnapshot", "function", i + 2, t[i + 2]), {
            next: t[i],
            error: t[i + 1],
            complete: t[i + 2]
          }), this.onSnapshotInternal(o, n);
        }, n.prototype.onSnapshotInternal = function (t, n) {
          var r = this,
              e = function e(t) {
            console.error("Uncaught Error in onSnapshot:", t);
          };

          n.error && (e = n.error.bind(n));

          var i = new pc({
            next: function next(t) {
              if (n.next) {
                Or(t.docs.size <= 1, "Too many documents returned on a document query");
                var e = t.docs.get(r._key);
                n.next(new Jc(r.firestore, r._key, e, t.fromCache, t.hasPendingWrites));
              }
            },
            error: e
          }),
              o = this._firestoreClient.listen(pu.atPath(this._key.path), i, t);

          return function () {
            i.mute(), r._firestoreClient.unlisten(o);
          };
        }, n.prototype.get = function (n) {
          var r = this;
          return Wr("DocumentReference.get", arguments, 0, 1), ih("DocumentReference.get", n), new Promise(function (e, t) {
            n && "cache" === n.source ? r.firestore.ensureClientConfigured().getDocumentFromLocalCache(r._key).then(function (t) {
              e(new Jc(r.firestore, r._key, t, !0, t instanceof Mo && t.hasLocalMutations));
            }, t) : r.getViaSnapshotListener(e, t, n);
          });
        }, n.prototype.getViaSnapshotListener = function (e, n, r) {
          var i = this.onSnapshotInternal({
            includeMetadataChanges: !0,
            waitForSyncWhenOnline: !0
          }, {
            next: function next(t) {
              i(), !t.exists && t.metadata.fromCache ? n(new xr(Lr.UNAVAILABLE, "Failed to get document because the client is offline.")) : t.exists && t.metadata.fromCache && r && "server" === r.source ? n(new xr(Lr.UNAVAILABLE, 'Failed to get document from server. (However, this document does exist in the local cache. Run again without setting source to "server" to retrieve the cached document.)')) : e(t);
            },
            error: n
          });
        }, n;
      }(),
          Xc = function () {
        function t(t, e) {
          this.hasPendingWrites = t, this.fromCache = e;
        }

        return t.prototype.isEqual = function (t) {
          return this.hasPendingWrites === t.hasPendingWrites && this.fromCache === t.fromCache;
        }, t;
      }(),
          Jc = function () {
        function e(t, e, n, r, i) {
          this._firestore = t, this._key = e, this._document = n, this._fromCache = r, this._hasPendingWrites = i;
        }

        return e.prototype.data = function (t) {
          return Wr("DocumentSnapshot.data", arguments, 0, 1), t = rh("DocumentSnapshot.data", t), this._document ? this.convertObject(this._document.data, qa.fromSnapshotOptions(t, this._firestore._areTimestampsInSnapshotsEnabled())) : void 0;
        }, e.prototype.get = function (t, e) {
          if (Wr("DocumentSnapshot.get", arguments, 1, 2), e = rh("DocumentSnapshot.get", e), this._document) {
            var n = this._document.data.field(Uc("DocumentSnapshot.get", t));

            if (void 0 !== n) return this.convertValue(n, qa.fromSnapshotOptions(e, this._firestore._areTimestampsInSnapshotsEnabled()));
          }
        }, Object.defineProperty(e.prototype, "id", {
          get: function get() {
            return this._key.path.lastSegment();
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(e.prototype, "ref", {
          get: function get() {
            return new Yc(this._key, this._firestore);
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(e.prototype, "exists", {
          get: function get() {
            return null !== this._document;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(e.prototype, "metadata", {
          get: function get() {
            return new Xc(this._hasPendingWrites, this._fromCache);
          },
          enumerable: !0,
          configurable: !0
        }), e.prototype.isEqual = function (t) {
          if (!(t instanceof e)) throw ii("isEqual", "DocumentSnapshot", 1, t);
          return this._firestore === t._firestore && this._fromCache === t._fromCache && this._key.isEqual(t._key) && (null === this._document ? null === t._document : this._document.isEqual(t._document));
        }, e.prototype.convertObject = function (t, n) {
          var r = this,
              i = {};
          return t.forEach(function (t, e) {
            i[t] = r.convertValue(e, n);
          }), i;
        }, e.prototype.convertValue = function (t, e) {
          if (t instanceof Za) return this.convertObject(t, e);
          if (t instanceof ts) return this.convertArray(t, e);

          if (t instanceof Ja) {
            var n = t.value(e),
                r = this._firestore.ensureClientConfigured().databaseId();

            return t.databaseId.isEqual(r) || kr("Document " + this._key.path + " contains a document reference within a different database (" + t.databaseId.projectId + "/" + t.databaseId.database + ") which is not supported. It will be treated as a reference in the current database (" + r.projectId + "/" + r.database + ") instead."), new Yc(n, this._firestore);
          }

          return t.value(e);
        }, e.prototype.convertArray = function (t, e) {
          var n = this;
          return t.internalValue.map(function (t) {
            return n.convertValue(t, e);
          });
        }, e;
      }(),
          $c = function (o) {
        function t(t, e, n, r, i) {
          return o.call(this, t, e, n, r, i) || this;
        }

        return s(t, o), t.prototype.data = function (t) {
          var e = o.prototype.data.call(this, t);
          return Or("object" == typeof e, "Document in a QueryDocumentSnapshot should exist"), e;
        }, t;
      }(Jc),
          Zc = function () {
        function c(t, e) {
          this._query = t, this.firestore = e;
        }

        return c.prototype.where = function (t, e, n) {
          if (jr("Query.where", arguments, 3), ni("Query.where", 3, n), "in" !== e && "array-contains-any" !== e) {
            !function (t, e, n, r) {
              if (!e.some(function (t) {
                return t === r;
              })) throw new xr(Lr.INVALID_ARGUMENT, "Invalid value " + ei(r) + " provided to function " + t + "() for its " + oi(n) + " argument. Acceptable values: " + e.join(", "));
            }("Query.where", ["<", "<=", "==", ">=", ">", "array-contains"], 2, e);
          }

          var r,
              i = Uc("Query.where", t),
              o = mu.fromString(e);

          if (i.isKeyField()) {
            if (o === mu.ARRAY_CONTAINS || o === mu.ARRAY_CONTAINS_ANY || o === mu.IN) throw new xr(Lr.INVALID_ARGUMENT, "Invalid Query. You can't perform '" + o.toString() + "' queries on FieldPath.documentId().");

            if ("string" == typeof n) {
              if ("" === n) throw new xr(Lr.INVALID_ARGUMENT, "Function Query.where() requires its third parameter to be a valid document ID if the first parameter is FieldPath.documentId(), but it was an empty string.");
              if (!this._query.isCollectionGroupQuery() && -1 !== n.indexOf("/")) throw new xr(Lr.INVALID_ARGUMENT, "Invalid third parameter to Query.where(). When querying a collection by FieldPath.documentId(), the value provided must be a plain document ID, but '" + n + "' contains a slash.");

              var a = this._query.path.child(Ti.fromString(n));

              if (!Di.isDocumentKey(a)) throw new xr(Lr.INVALID_ARGUMENT, "Invalid third parameter to Query.where(). When querying a collection group by FieldPath.documentId(), the value provided must result in a valid document path, but '" + a + "' is not because it has an odd number of segments (" + a.length + ").");
              r = new Ja(this.firestore._databaseId, new Di(a));
            } else {
              if (!(n instanceof Yc)) throw new xr(Lr.INVALID_ARGUMENT, "Function Query.where() requires its third parameter to be a string or a DocumentReference if the first parameter is FieldPath.documentId(), but it was: " + ei(n) + ".");
              var s = n;
              r = new Ja(this.firestore._databaseId, s._key);
            }
          } else {
            if (o === mu.IN || o === mu.ARRAY_CONTAINS_ANY) {
              if (!Array.isArray(n) || 0 === n.length) throw new xr(Lr.INVALID_ARGUMENT, "Invalid Query. A non-empty array is required for '" + o.toString() + "' filters.");
              if (10 < n.length) throw new xr(Lr.INVALID_ARGUMENT, "Invalid Query. '" + o.toString() + "' filters support a maximum of 10 elements in the value array.");
            }

            r = this.firestore._dataConverter.parseQueryValue("Query.where", n);
          }

          var u = yu.create(i, o, r);
          return this.validateNewFilter(u), new c(this._query.addFilter(u), this.firestore);
        }, c.prototype.orderBy = function (t, e) {
          var n;
          if (Wr("Query.orderBy", arguments, 1, 2), Hr("Query.orderBy", "non-empty string", 2, e), void 0 === e || "asc" === e) n = Eu.ASCENDING;else {
            if ("desc" !== e) throw new xr(Lr.INVALID_ARGUMENT, "Function Query.orderBy() has unknown direction '" + e + "', expected 'asc' or 'desc'.");
            n = Eu.DESCENDING;
          }
          if (null !== this._query.startAt) throw new xr(Lr.INVALID_ARGUMENT, "Invalid query. You must not call Query.startAt() or Query.startAfter() before calling Query.orderBy().");
          if (null !== this._query.endAt) throw new xr(Lr.INVALID_ARGUMENT, "Invalid query. You must not call Query.endAt() or Query.endBefore() before calling Query.orderBy().");
          var r = Uc("Query.orderBy", t),
              i = new Tu(r, n);
          return this.validateNewOrderBy(i), new c(this._query.addOrderBy(i), this.firestore);
        }, c.prototype.limit = function (t) {
          if (jr("Query.limit", arguments, 1), zr("Query.limit", "number", 1, t), t <= 0) throw new xr(Lr.INVALID_ARGUMENT, "Invalid Query. Query limit (" + t + ") is invalid. Limit must be positive.");
          return new c(this._query.withLimit(t), this.firestore);
        }, c.prototype.startAt = function (t) {
          for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];

          Gr("Query.startAt", arguments, 1);
          var r = this.boundFromDocOrFields("Query.startAt", t, e, !0);
          return new c(this._query.withStartAt(r), this.firestore);
        }, c.prototype.startAfter = function (t) {
          for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];

          Gr("Query.startAfter", arguments, 1);
          var r = this.boundFromDocOrFields("Query.startAfter", t, e, !1);
          return new c(this._query.withStartAt(r), this.firestore);
        }, c.prototype.endBefore = function (t) {
          for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];

          Gr("Query.endBefore", arguments, 1);
          var r = this.boundFromDocOrFields("Query.endBefore", t, e, !0);
          return new c(this._query.withEndAt(r), this.firestore);
        }, c.prototype.endAt = function (t) {
          for (var e = [], n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];

          Gr("Query.endAt", arguments, 1);
          var r = this.boundFromDocOrFields("Query.endAt", t, e, !1);
          return new c(this._query.withEndAt(r), this.firestore);
        }, c.prototype.isEqual = function (t) {
          if (!(t instanceof c)) throw ii("isEqual", "Query", 1, t);
          return this.firestore === t.firestore && this._query.isEqual(t._query);
        }, c.prototype.boundFromDocOrFields = function (t, e, n, r) {
          if (ni(t, 1, e), e instanceof Jc) {
            if (0 < n.length) throw new xr(Lr.INVALID_ARGUMENT, "Too many arguments provided to " + t + "().");
            var i = e;
            if (!i.exists) throw new xr(Lr.NOT_FOUND, "Can't use a DocumentSnapshot that doesn't exist for " + t + "().");
            return this.boundFromDocument(t, i._document, r);
          }

          var o = [e].concat(n);
          return this.boundFromFields(t, o, r);
        }, c.prototype.boundFromDocument = function (t, e, n) {
          for (var r = [], i = 0, o = this._query.orderBy; i < o.length; i++) {
            var a = o[i];
            if (a.field.isKeyField()) r.push(new Ja(this.firestore._databaseId, e.key));else {
              var s = e.field(a.field);
              if (s instanceof Ya) throw new xr(Lr.INVALID_ARGUMENT, 'Invalid query. You are trying to start or end a query using a document for which the field "' + a.field + '" is an uncommitted server timestamp. (Since the value of this field is unknown, you cannot start/end a query with it.)');

              if (void 0 === s) {
                var u = a.field.canonicalString();
                throw new xr(Lr.INVALID_ARGUMENT, "Invalid query. You are trying to start or end a query using a document for which the field '" + u + "' (used as the orderBy) does not exist.");
              }

              r.push(s);
            }
          }

          return new Su(r, n);
        }, c.prototype.boundFromFields = function (t, e, n) {
          var r = this._query.explicitOrderBy;
          if (e.length > r.length) throw new xr(Lr.INVALID_ARGUMENT, "Too many arguments provided to " + t + "(). The number of arguments must be less than or equal to the number of Query.orderBy() clauses");

          for (var i = [], o = 0; o < e.length; o++) {
            var a = e[o];

            if (r[o].field.isKeyField()) {
              if ("string" != typeof a) throw new xr(Lr.INVALID_ARGUMENT, "Invalid query. Expected a string for document ID in " + t + "(), but got a " + typeof a);
              if (!this._query.isCollectionGroupQuery() && -1 !== a.indexOf("/")) throw new xr(Lr.INVALID_ARGUMENT, "Invalid query. When querying a collection and ordering by FieldPath.documentId(), the value passed to " + t + "() must be a plain document ID, but '" + a + "' contains a slash.");

              var s = this._query.path.child(Ti.fromString(a));

              if (!Di.isDocumentKey(s)) throw new xr(Lr.INVALID_ARGUMENT, "Invalid query. When querying a collection group and ordering by FieldPath.documentId(), the value passed to " + t + "() must result in a valid document path, but '" + s + "' is not because it contains an odd number of segments.");
              var u = new Di(s);
              i.push(new Ja(this.firestore._databaseId, u));
            } else {
              var c = this.firestore._dataConverter.parseQueryValue(t, a);

              i.push(c);
            }
          }

          return new Su(i, n);
        }, c.prototype.onSnapshot = function () {
          for (var t = [], e = 0; e < arguments.length; e++) t[e] = arguments[e];

          Wr("Query.onSnapshot", arguments, 1, 4);
          var n,
              r = {},
              i = 0;
          return "object" != typeof t[i] || Ec(t[i]) || (ri("Query.onSnapshot", r = t[i], ["includeMetadataChanges"]), Xr("Query.onSnapshot", "boolean", "includeMetadataChanges", r.includeMetadataChanges), i++), n = Ec(t[i]) ? t[i] : (zr("Query.onSnapshot", "function", i, t[i]), Hr("Query.onSnapshot", "function", i + 1, t[i + 1]), Hr("Query.onSnapshot", "function", i + 2, t[i + 2]), {
            next: t[i],
            error: t[i + 1],
            complete: t[i + 2]
          }), this.onSnapshotInternal(r, n);
        }, c.prototype.onSnapshotInternal = function (t, e) {
          var n = this,
              r = function r(t) {
            console.error("Uncaught Error in onSnapshot:", t);
          };

          e.error && (r = e.error.bind(e));
          var i = new pc({
            next: function next(t) {
              e.next && e.next(new th(n.firestore, n._query, t));
            },
            error: r
          }),
              o = this.firestore.ensureClientConfigured(),
              a = o.listen(this._query, i, t);
          return function () {
            i.mute(), o.unlisten(a);
          };
        }, c.prototype.get = function (n) {
          var r = this;
          return Wr("Query.get", arguments, 0, 1), ih("Query.get", n), new Promise(function (e, t) {
            n && "cache" === n.source ? r.firestore.ensureClientConfigured().getDocumentsFromLocalCache(r._query).then(function (t) {
              e(new th(r.firestore, r._query, t));
            }, t) : r.getViaSnapshotListener(e, t, n);
          });
        }, c.prototype.getViaSnapshotListener = function (e, n, r) {
          var i = this.onSnapshotInternal({
            includeMetadataChanges: !0,
            waitForSyncWhenOnline: !0
          }, {
            next: function next(t) {
              i(), t.metadata.fromCache && r && "server" === r.source ? n(new xr(Lr.UNAVAILABLE, 'Failed to get documents from server. (However, these documents may exist in the local cache. Run again without setting source to "server" to retrieve the cached documents.)')) : e(t);
            },
            error: n
          });
        }, c.prototype.validateNewFilter = function (t) {
          if (t instanceof yu) {
            var e = [mu.ARRAY_CONTAINS, mu.ARRAY_CONTAINS_ANY],
                n = [mu.IN, mu.ARRAY_CONTAINS_ANY],
                r = 0 <= e.indexOf(t.op),
                i = 0 <= n.indexOf(t.op);

            if (t.isInequality()) {
              var o = this._query.getInequalityFilterField();

              if (null !== o && !o.isEqual(t.field)) throw new xr(Lr.INVALID_ARGUMENT, "Invalid query. All where filters with an inequality (<, <=, >, or >=) must be on the same field. But you have inequality filters on '" + o.toString() + "' and '" + t.field.toString() + "'");

              var a = this._query.getFirstOrderByField();

              null !== a && this.validateOrderByAndInequalityMatch(t.field, a);
            } else if (i || r) {
              var s = null;
              if (i && (s = this._query.findFilterOperator(n)), null === s && r && (s = this._query.findFilterOperator(e)), null != s) throw s === t.op ? new xr(Lr.INVALID_ARGUMENT, "Invalid query. You cannot use more than one '" + t.op.toString() + "' filter.") : new xr(Lr.INVALID_ARGUMENT, "Invalid query. You cannot use '" + t.op.toString() + "' filters with '" + s.toString() + "' filters.");
            }
          }
        }, c.prototype.validateNewOrderBy = function (t) {
          if (null === this._query.getFirstOrderByField()) {
            var e = this._query.getInequalityFilterField();

            null !== e && this.validateOrderByAndInequalityMatch(e, t.field);
          }
        }, c.prototype.validateOrderByAndInequalityMatch = function (t, e) {
          if (!e.isEqual(t)) throw new xr(Lr.INVALID_ARGUMENT, "Invalid query. You have a where filter with an inequality (<, <=, >, or >=) on field '" + t.toString() + "' and so you must also use '" + t.toString() + "' as your first Query.orderBy(), but your first Query.orderBy() is on field '" + e.toString() + "' instead.");
        }, c;
      }(),
          th = function () {
        function e(t, e, n) {
          this._firestore = t, this._originalQuery = e, this._snapshot = n, this._cachedChanges = null, this._cachedChangesIncludeMetadataChanges = null, this.metadata = new Xc(n.hasPendingWrites, n.fromCache);
        }

        return Object.defineProperty(e.prototype, "docs", {
          get: function get() {
            var e = [];
            return this.forEach(function (t) {
              return e.push(t);
            }), e;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(e.prototype, "empty", {
          get: function get() {
            return this._snapshot.docs.isEmpty();
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(e.prototype, "size", {
          get: function get() {
            return this._snapshot.docs.size;
          },
          enumerable: !0,
          configurable: !0
        }), e.prototype.forEach = function (e, n) {
          var r = this;
          Wr("QuerySnapshot.forEach", arguments, 1, 2), zr("QuerySnapshot.forEach", "function", 1, e), this._snapshot.docs.forEach(function (t) {
            e.call(n, r.convertToDocumentImpl(t));
          });
        }, Object.defineProperty(e.prototype, "query", {
          get: function get() {
            return new Zc(this._originalQuery, this._firestore);
          },
          enumerable: !0,
          configurable: !0
        }), e.prototype.docChanges = function (t) {
          t && (ri("QuerySnapshot.docChanges", t, ["includeMetadataChanges"]), Xr("QuerySnapshot.docChanges", "boolean", "includeMetadataChanges", t.includeMetadataChanges));
          var e = !(!t || !t.includeMetadataChanges);
          if (e && this._snapshot.excludesMetadataChanges) throw new xr(Lr.INVALID_ARGUMENT, "To include metadata changes with your document changes, you must also pass { includeMetadataChanges:true } to onSnapshot().");
          return this._cachedChanges && this._cachedChangesIncludeMetadataChanges === e || (this._cachedChanges = function (i, e, o) {
            {
              if (o.oldDocs.isEmpty()) {
                var n,
                    r = 0;
                return o.docChanges.map(function (t) {
                  var e = new $c(i, t.doc.key, t.doc, o.fromCache, o.mutatedKeys.has(t.doc.key));
                  return Or(t.type === Ws.Added, "Invalid event type for first snapshot"), Or(!n || o.query.docComparator(n, t.doc) < 0, "Got added events in wrong order"), n = t.doc, {
                    type: "added",
                    doc: e,
                    oldIndex: -1,
                    newIndex: r++
                  };
                });
              }

              var a = o.oldDocs;
              return o.docChanges.filter(function (t) {
                return e || t.type !== Ws.Metadata;
              }).map(function (t) {
                var e = new $c(i, t.doc.key, t.doc, o.fromCache, o.mutatedKeys.has(t.doc.key)),
                    n = -1,
                    r = -1;
                return t.type !== Ws.Added && (Or(0 <= (n = a.indexOf(t.doc.key)), "Index for document not found"), a = a.delete(t.doc.key)), t.type !== Ws.Removed && (a = a.add(t.doc), r = a.indexOf(t.doc.key)), {
                  type: function (t) {
                    switch (t) {
                      case Ws.Added:
                        return "added";

                      case Ws.Modified:
                      case Ws.Metadata:
                        return "modified";

                      case Ws.Removed:
                        return "removed";

                      default:
                        return Mr("Unknown change type: " + t);
                    }
                  }(t.type),
                  doc: e,
                  oldIndex: n,
                  newIndex: r
                };
              });
            }
          }(this._firestore, e, this._snapshot), this._cachedChangesIncludeMetadataChanges = e), this._cachedChanges;
        }, e.prototype.isEqual = function (t) {
          if (!(t instanceof e)) throw ii("isEqual", "QuerySnapshot", 1, t);
          return this._firestore === t._firestore && this._originalQuery.isEqual(t._originalQuery) && this._snapshot.isEqual(t._snapshot);
        }, e.prototype.convertToDocumentImpl = function (t) {
          return new $c(this._firestore, t.key, t, this.metadata.fromCache, this._snapshot.mutatedKeys.has(t.key));
        }, e;
      }();

      ["length", "forEach", "map"].concat("undefined" != typeof Symbol ? [Symbol.iterator] : []).forEach(function (t) {
        try {
          Object.defineProperty(th.prototype.docChanges, t, {
            get: function get() {
              return function () {
                throw new xr(Lr.INVALID_ARGUMENT, 'QuerySnapshot.docChanges has been changed from a property into a method, so usages like "querySnapshot.docChanges" should become "querySnapshot.docChanges()"');
              }();
            }
          });
        } catch (t) {}
      });

      var eh = function (r) {
        function t(t, e) {
          var n = r.call(this, pu.atPath(t), e) || this;
          if (t.length % 2 != 1) throw new xr(Lr.INVALID_ARGUMENT, "Invalid collection reference. Collection references must have an odd number of segments, but " + t.canonicalString() + " has " + t.length);
          return n;
        }

        return s(t, r), Object.defineProperty(t.prototype, "id", {
          get: function get() {
            return this._query.path.lastSegment();
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "parent", {
          get: function get() {
            var t = this._query.path.popLast();

            return t.isEmpty() ? null : new Yc(new Di(t), this.firestore);
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "path", {
          get: function get() {
            return this._query.path.canonicalString();
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.doc = function (t) {
          if (Wr("CollectionReference.doc", arguments, 0, 1), 0 === arguments.length && (t = si.newId()), zr("CollectionReference.doc", "non-empty string", 1, t), "" === t) throw new xr(Lr.INVALID_ARGUMENT, "Document path must be a non-empty string");
          var e = Ti.fromString(t);
          return Yc.forPath(this._query.path.child(e), this.firestore);
        }, t.prototype.add = function (t) {
          jr("CollectionReference.add", arguments, 1), zr("CollectionReference.add", "object", 1, t);
          var e = this.doc();
          return e.set(t).then(function () {
            return e;
          });
        }, t;
      }(Zc);

      function nh(t, e) {
        if (void 0 === e) return {
          merge: !1
        };
        if (ri(t, e, ["merge", "mergeFields"]), Xr(t, "boolean", "merge", e.merge), Jr(t, "mergeFields", "a string or a FieldPath", e.mergeFields, function (t) {
          return "string" == typeof t || t instanceof dc;
        }), void 0 !== e.mergeFields && void 0 !== e.merge) throw new xr(Lr.INVALID_ARGUMENT, "Invalid options passed to function " + t + '(): You cannot specify both "merge" and "mergeFields".');
        return e;
      }

      function rh(t, e) {
        return void 0 === e ? {} : (ri(t, e, ["serverTimestamps"]), $r(t, 0, "serverTimestamps", e.serverTimestamps, ["estimate", "previous", "none"]), e);
      }

      function ih(t, e) {
        Hr(t, "object", 1, e), e && (ri(t, e, ["source"]), $r(t, 0, "source", e.source, ["default", "server", "cache"]));
      }

      function oh(t, e, n) {
        if (e instanceof Yc) {
          if (e.firestore !== n) throw new xr(Lr.INVALID_ARGUMENT, "Provided document reference is from a different Firestore instance.");
          return e;
        }

        throw ii(t, "DocumentReference", 1, e);
      }

      var ah = qr(Wc, "Use firebase.firestore() instead."),
          sh = qr(zc, "Use firebase.firestore().runTransaction() instead."),
          uh = qr(Hc, "Use firebase.firestore().batch() instead."),
          ch = qr(Yc, "Use firebase.firestore().doc() instead."),
          hh = qr(Jc),
          lh = qr($c),
          fh = qr(Zc),
          ph = qr(th),
          dh = qr(eh, "Use firebase.firestore().collection() instead."),
          mh = {
        Firestore: ah,
        GeoPoint: fu,
        Timestamp: Fi,
        Blob: yi,
        Transaction: sh,
        WriteBatch: uh,
        DocumentReference: ch,
        DocumentSnapshot: hh,
        Query: fh,
        QueryDocumentSnapshot: lh,
        QuerySnapshot: ph,
        CollectionReference: dh,
        FieldPath: dc,
        FieldValue: Rc,
        setLogLevel: Wc.setLogLevel,
        CACHE_SIZE_UNLIMITED: Kc
      };

      function yh(t) {
        t.INTERNAL.registerService("firestore", function (t) {
          return new Wc(t);
        }, function (t) {
          Or(t && "object" == typeof t, "shallowCopy() expects object parameter.");
          var e = {};

          for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);

          return e;
        }(mh));
      }

      var gh = function () {
        function t() {}

        return t.prototype.addCallback = function (t) {}, t.prototype.shutdown = function () {}, t;
      }(),
          vh = "ConnectivityMonitor",
          bh = function () {
        function t() {
          var t = this;
          this.networkAvailableListener = function () {
            return t.onNetworkAvailable();
          }, this.networkUnavailableListener = function () {
            return t.onNetworkUnavailable();
          }, this.callbacks = [], this.configureNetworkMonitoring();
        }

        return t.prototype.addCallback = function (t) {
          this.callbacks.push(t);
        }, t.prototype.shutdown = function () {
          window.removeEventListener("online", this.networkAvailableListener), window.removeEventListener("offline", this.networkUnavailableListener);
        }, t.prototype.configureNetworkMonitoring = function () {
          window.addEventListener("online", this.networkAvailableListener), window.addEventListener("offline", this.networkUnavailableListener);
        }, t.prototype.onNetworkAvailable = function () {
          Ar(vh, "Network connectivity changed: AVAILABLE");

          for (var t = 0, e = this.callbacks; t < e.length; t++) {
            (0, e[t])(0);
          }
        }, t.prototype.onNetworkUnavailable = function () {
          Ar(vh, "Network connectivity changed: UNAVAILABLE");

          for (var t = 0, e = this.callbacks; t < e.length; t++) {
            (0, e[t])(1);
          }
        }, t.isAvailable = function () {
          return "undefined" != typeof window && void 0 !== window.addEventListener && void 0 !== window.removeEventListener;
        }, t;
      }(),
          wh = function () {
        function t(t) {
          this.sendFn = t.sendFn, this.closeFn = t.closeFn;
        }

        return t.prototype.onOpen = function (t) {
          Or(!this.wrappedOnOpen, "Called onOpen on stream twice!"), this.wrappedOnOpen = t;
        }, t.prototype.onClose = function (t) {
          Or(!this.wrappedOnClose, "Called onClose on stream twice!"), this.wrappedOnClose = t;
        }, t.prototype.onMessage = function (t) {
          Or(!this.wrappedOnMessage, "Called onMessage on stream twice!"), this.wrappedOnMessage = t;
        }, t.prototype.close = function () {
          this.closeFn();
        }, t.prototype.send = function (t) {
          this.sendFn(t);
        }, t.prototype.callOnOpen = function () {
          Or(void 0 !== this.wrappedOnOpen, "Cannot call onOpen because no callback was set"), this.wrappedOnOpen();
        }, t.prototype.callOnClose = function (t) {
          Or(void 0 !== this.wrappedOnClose, "Cannot call onClose because no callback was set"), this.wrappedOnClose(t);
        }, t.prototype.callOnMessage = function (t) {
          Or(void 0 !== this.wrappedOnMessage, "Cannot call onMessage because no callback was set"), this.wrappedOnMessage(t);
        }, t;
      }(),
          Eh = "Connection",
          Sh = {
        BatchGetDocuments: "batchGet",
        Commit: "commit"
      },
          Th = "gl-js/ fire/" + Ir,
          Ih = function () {
        function t(t) {
          this.databaseId = t.databaseId;
          var e = t.ssl ? "https" : "http";
          this.baseUrl = e + "://" + t.host, this.forceLongPolling = t.forceLongPolling;
        }

        return t.prototype.modifyHeadersForRequest = function (t, e) {
          if (e) for (var n in e.authHeaders) e.authHeaders.hasOwnProperty(n) && (t[n] = e.authHeaders[n]);
          t["X-Goog-Api-Client"] = Th;
        }, t.prototype.invokeRPC = function (o, a, s) {
          var u = this,
              c = this.makeUrl(o);
          return new Promise(function (n, r) {
            var i = new Tr();
            i.listenOnce(Er.COMPLETE, function () {
              try {
                switch (i.getLastErrorCode()) {
                  case wr.NO_ERROR:
                    var t = i.getResponseJson();
                    Ar(Eh, "XHR received:", JSON.stringify(t)), n(t);
                    break;

                  case wr.TIMEOUT:
                    Ar(Eh, 'RPC "' + o + '" timed out'), r(new xr(Lr.DEADLINE_EXCEEDED, "Request time out"));
                    break;

                  case wr.HTTP_ERROR:
                    var e = i.getStatus();
                    Ar(Eh, 'RPC "' + o + '" failed with status:', e, "response text:", i.getResponseText()), 0 < e ? r(new xr(function (t) {
                      switch (t) {
                        case 200:
                          return Lr.OK;

                        case 400:
                          return Lr.INVALID_ARGUMENT;

                        case 401:
                          return Lr.UNAUTHENTICATED;

                        case 403:
                          return Lr.PERMISSION_DENIED;

                        case 404:
                          return Lr.NOT_FOUND;

                        case 409:
                          return Lr.ABORTED;

                        case 416:
                          return Lr.OUT_OF_RANGE;

                        case 429:
                          return Lr.RESOURCE_EXHAUSTED;

                        case 499:
                          return Lr.CANCELLED;

                        case 500:
                          return Lr.UNKNOWN;

                        case 501:
                          return Lr.UNIMPLEMENTED;

                        case 503:
                          return Lr.UNAVAILABLE;

                        case 504:
                          return Lr.DEADLINE_EXCEEDED;

                        default:
                          return 200 <= t && t < 300 ? Lr.OK : 400 <= t && t < 500 ? Lr.FAILED_PRECONDITION : 500 <= t && t < 600 ? Lr.INTERNAL : Lr.UNKNOWN;
                      }
                    }(e), "Server responded with status " + i.getStatusText())) : (Ar(Eh, 'RPC "' + o + '" failed'), r(new xr(Lr.UNAVAILABLE, "Connection failed.")));
                    break;

                  default:
                    Mr('RPC "' + o + '" failed with unanticipated webchannel error ' + i.getLastErrorCode() + ": " + i.getLastError() + ", giving up.");
                }
              } finally {
                Ar(Eh, 'RPC "' + o + '" completed.');
              }
            });
            var t = JSON.stringify(a);
            Ar(Eh, "XHR sending: ", c + " " + t);
            var e = {
              "Content-Type": "text/plain"
            };
            u.modifyHeadersForRequest(e, s), i.send(c, "POST", t, e, 15);
          });
        }, t.prototype.invokeStreamingRPC = function (t, e, n) {
          return this.invokeRPC(t, e, n);
        }, t.prototype.openStream = function (t, e) {
          var n = [this.baseUrl, "/", "google.firestore.v1.Firestore", "/", t, "/channel"],
              r = br(),
              i = {
            backgroundChannelTest: !0,
            httpSessionIdParam: "gsessionid",
            initMessageHeaders: {},
            messageUrlParams: {
              database: "projects/" + this.databaseId.projectId + "/databases/" + this.databaseId.database
            },
            sendRawJson: !0,
            supportsCrossDomainXhr: !0,
            internalChannelParams: {
              forwardChannelRequestTimeoutMs: 6e5
            },
            forceLongPolling: this.forceLongPolling
          };
          this.modifyHeadersForRequest(i.initMessageHeaders, e), "object" == typeof navigator && "ReactNative" === navigator.product || (i.httpHeadersOverwriteParam = "$httpHeaders");
          var o = n.join("");
          Ar(Eh, "Creating WebChannel: " + o + " " + i);

          var s = r.createWebChannel(o, i),
              a = !1,
              u = !1,
              c = new wh({
            sendFn: function sendFn(t) {
              u ? Ar(Eh, "Not sending because WebChannel is closed:", t) : (a || (Ar(Eh, "Opening WebChannel transport."), s.open(), a = !0), Ar(Eh, "WebChannel sending:", t), s.send(t));
            },
            closeFn: function closeFn() {
              return s.close();
            }
          }),
              h = function h(t, e) {
            s.listen(t, function (t) {
              try {
                e(t);
              } catch (t) {
                setTimeout(function () {
                  throw t;
                }, 0);
              }
            });
          };

          return h(Sr.EventType.OPEN, function () {
            u || Ar(Eh, "WebChannel transport opened.");
          }), h(Sr.EventType.CLOSE, function () {
            u || (u = !0, Ar(Eh, "WebChannel transport closed"), c.callOnClose());
          }), h(Sr.EventType.ERROR, function (t) {
            u || (u = !0, Ar(Eh, "WebChannel transport errored:", t), c.callOnClose(new xr(Lr.UNAVAILABLE, "The operation could not be completed")));
          }), h(Sr.EventType.MESSAGE, function (t) {
            if (!u) {
              var e = t.data[0];
              Or(!!e, "Got a webchannel message without data.");
              var n = e,
                  r = n.error || n[0] && n[0].error;

              if (r) {
                Ar(Eh, "WebChannel received error:", r);

                var i = r.status,
                    o = function (t) {
                  var e = Bs[t];
                  if (void 0 !== e) return Gs(e);
                }(i),
                    a = r.message;

                void 0 === o && (o = Lr.INTERNAL, a = "Unknown error status: " + i + " with message " + r.message), u = !0, c.callOnClose(new xr(o, a)), s.close();
              } else Ar(Eh, "WebChannel received:", e), c.callOnMessage(e);
            }
          }), setTimeout(function () {
            c.callOnOpen();
          }, 0), c;
        }, t.prototype.makeUrl = function (t) {
          var e = Sh[t];
          Or(void 0 !== e, "Unknown REST mapping for: " + t);
          var n = [this.baseUrl, "/", "v1"];
          return n.push("/projects/"), n.push(this.databaseId.projectId), n.push("/databases/"), n.push(this.databaseId.database), n.push("/documents"), n.push(":"), n.push(e), n.join("");
        }, t;
      }(),
          Ch = function () {
        function t() {
          this.emptyByteString = "", this.base64Available = "undefined" != typeof atob;
        }

        return Object.defineProperty(t.prototype, "document", {
          get: function get() {
            return "undefined" != typeof document ? document : null;
          },
          enumerable: !0,
          configurable: !0
        }), Object.defineProperty(t.prototype, "window", {
          get: function get() {
            return "undefined" != typeof window ? window : null;
          },
          enumerable: !0,
          configurable: !0
        }), t.prototype.loadConnection = function (t) {
          return Promise.resolve(new Ih(t));
        }, t.prototype.newConnectivityMonitor = function () {
          return bh.isAvailable() ? new bh() : new gh();
        }, t.prototype.newSerializer = function (t) {
          return new Vu(t, {
            useProto3Json: !0
          });
        }, t.prototype.formatJSON = function (t) {
          return JSON.stringify(t);
        }, t.prototype.atob = function (t) {
          return atob(t);
        }, t.prototype.btoa = function (t) {
          return btoa(t);
        }, t;
      }();

      _r.setPlatform(new Ch()), yh(Dh);
    }).apply(this, arguments);
  } catch (t) {
    throw console.error(t), new Error("Cannot instantiate firebase-firestore - be sure to load firebase-app.js first.");
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(17), __webpack_require__(64)))

/***/ }),
/* 107 */
/***/ (function(module, exports, __webpack_require__) {

var isObject = __webpack_require__(13);
var setPrototypeOf = __webpack_require__(108).set;
module.exports = function (that, target, C) {
  var S = target.constructor;
  var P;
  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
    setPrototypeOf(that, P);
  } return that;
};


/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */
var isObject = __webpack_require__(13);
var anObject = __webpack_require__(5);
var check = function (O, proto) {
  anObject(O);
  if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
module.exports = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = __webpack_require__(54)(Function.call, __webpack_require__(60).f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};


/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(8);
var dP = __webpack_require__(11);
var DESCRIPTORS = __webpack_require__(9);
var SPECIES = __webpack_require__(4)('species');

module.exports = function (KEY) {
  var C = global[KEY];
  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
    configurable: true,
    get: function () { return this; }
  });
};


/***/ }),
/* 110 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

Object.defineProperty(exports, '__esModule', { value: true });

var tslib_1 = __webpack_require__(67);

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview Firebase constants.  Some of these (@defines) can be overridden at compile-time.
 */
var CONSTANTS = {
    /**
     * @define {boolean} Whether this is the client Node.js SDK.
     */
    NODE_CLIENT: false,
    /**
     * @define {boolean} Whether this is the Admin Node.js SDK.
     */
    NODE_ADMIN: false,
    /**
     * Firebase SDK Version
     */
    SDK_VERSION: '${JSCORE_VERSION}'
};

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Throws an error if the provided assertion is falsy
 */
var assert = function (assertion, message) {
    if (!assertion) {
        throw assertionError(message);
    }
};
/**
 * Returns an Error object suitable for throwing.
 */
var assertionError = function (message) {
    return new Error('Firebase Database (' +
        CONSTANTS.SDK_VERSION +
        ') INTERNAL ASSERT FAILED: ' +
        message);
};

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var stringToByteArray = function (str) {
    // TODO(user): Use native implementations if/when available
    var out = [];
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            out[p++] = c;
        }
        else if (c < 2048) {
            out[p++] = (c >> 6) | 192;
            out[p++] = (c & 63) | 128;
        }
        else if ((c & 0xfc00) === 0xd800 &&
            i + 1 < str.length &&
            (str.charCodeAt(i + 1) & 0xfc00) === 0xdc00) {
            // Surrogate Pair
            c = 0x10000 + ((c & 0x03ff) << 10) + (str.charCodeAt(++i) & 0x03ff);
            out[p++] = (c >> 18) | 240;
            out[p++] = ((c >> 12) & 63) | 128;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
        else {
            out[p++] = (c >> 12) | 224;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
    }
    return out;
};
/**
 * Turns an array of numbers into the string given by the concatenation of the
 * characters to which the numbers correspond.
 * @param bytes Array of numbers representing characters.
 * @return Stringification of the array.
 */
var byteArrayToString = function (bytes) {
    // TODO(user): Use native implementations if/when available
    var out = [];
    var pos = 0, c = 0;
    while (pos < bytes.length) {
        var c1 = bytes[pos++];
        if (c1 < 128) {
            out[c++] = String.fromCharCode(c1);
        }
        else if (c1 > 191 && c1 < 224) {
            var c2 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 31) << 6) | (c2 & 63));
        }
        else if (c1 > 239 && c1 < 365) {
            // Surrogate Pair
            var c2 = bytes[pos++];
            var c3 = bytes[pos++];
            var c4 = bytes[pos++];
            var u = (((c1 & 7) << 18) | ((c2 & 63) << 12) | ((c3 & 63) << 6) | (c4 & 63)) -
                0x10000;
            out[c++] = String.fromCharCode(0xd800 + (u >> 10));
            out[c++] = String.fromCharCode(0xdc00 + (u & 1023));
        }
        else {
            var c2 = bytes[pos++];
            var c3 = bytes[pos++];
            out[c++] = String.fromCharCode(((c1 & 15) << 12) | ((c2 & 63) << 6) | (c3 & 63));
        }
    }
    return out.join('');
};
// Static lookup maps, lazily populated by init_()
var base64 = {
    /**
     * Maps bytes to characters.
     * @type {Object}
     * @private
     */
    byteToCharMap_: null,
    /**
     * Maps characters to bytes.
     * @type {Object}
     * @private
     */
    charToByteMap_: null,
    /**
     * Maps bytes to websafe characters.
     * @type {Object}
     * @private
     */
    byteToCharMapWebSafe_: null,
    /**
     * Maps websafe characters to bytes.
     * @type {Object}
     * @private
     */
    charToByteMapWebSafe_: null,
    /**
     * Our default alphabet, shared between
     * ENCODED_VALS and ENCODED_VALS_WEBSAFE
     * @type {string}
     */
    ENCODED_VALS_BASE: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + 'abcdefghijklmnopqrstuvwxyz' + '0123456789',
    /**
     * Our default alphabet. Value 64 (=) is special; it means "nothing."
     * @type {string}
     */
    get ENCODED_VALS() {
        return this.ENCODED_VALS_BASE + '+/=';
    },
    /**
     * Our websafe alphabet.
     * @type {string}
     */
    get ENCODED_VALS_WEBSAFE() {
        return this.ENCODED_VALS_BASE + '-_.';
    },
    /**
     * Whether this browser supports the atob and btoa functions. This extension
     * started at Mozilla but is now implemented by many browsers. We use the
     * ASSUME_* variables to avoid pulling in the full useragent detection library
     * but still allowing the standard per-browser compilations.
     *
     * @type {boolean}
     */
    HAS_NATIVE_SUPPORT: typeof atob === 'function',
    /**
     * Base64-encode an array of bytes.
     *
     * @param input An array of bytes (numbers with
     *     value in [0, 255]) to encode.
     * @param webSafe Boolean indicating we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */
    encodeByteArray: function (input, webSafe) {
        if (!Array.isArray(input)) {
            throw Error('encodeByteArray takes an array as a parameter');
        }
        this.init_();
        var byteToCharMap = webSafe
            ? this.byteToCharMapWebSafe_
            : this.byteToCharMap_;
        var output = [];
        for (var i = 0; i < input.length; i += 3) {
            var byte1 = input[i];
            var haveByte2 = i + 1 < input.length;
            var byte2 = haveByte2 ? input[i + 1] : 0;
            var haveByte3 = i + 2 < input.length;
            var byte3 = haveByte3 ? input[i + 2] : 0;
            var outByte1 = byte1 >> 2;
            var outByte2 = ((byte1 & 0x03) << 4) | (byte2 >> 4);
            var outByte3 = ((byte2 & 0x0f) << 2) | (byte3 >> 6);
            var outByte4 = byte3 & 0x3f;
            if (!haveByte3) {
                outByte4 = 64;
                if (!haveByte2) {
                    outByte3 = 64;
                }
            }
            output.push(byteToCharMap[outByte1], byteToCharMap[outByte2], byteToCharMap[outByte3], byteToCharMap[outByte4]);
        }
        return output.join('');
    },
    /**
     * Base64-encode a string.
     *
     * @param input A string to encode.
     * @param webSafe If true, we should use the
     *     alternative alphabet.
     * @return The base64 encoded string.
     */
    encodeString: function (input, webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
            return btoa(input);
        }
        return this.encodeByteArray(stringToByteArray(input), webSafe);
    },
    /**
     * Base64-decode a string.
     *
     * @param input to decode.
     * @param webSafe True if we should use the
     *     alternative alphabet.
     * @return string representing the decoded value.
     */
    decodeString: function (input, webSafe) {
        // Shortcut for Mozilla browsers that implement
        // a native base64 encoder in the form of "btoa/atob"
        if (this.HAS_NATIVE_SUPPORT && !webSafe) {
            return atob(input);
        }
        return byteArrayToString(this.decodeStringToByteArray(input, webSafe));
    },
    /**
     * Base64-decode a string.
     *
     * In base-64 decoding, groups of four characters are converted into three
     * bytes.  If the encoder did not apply padding, the input length may not
     * be a multiple of 4.
     *
     * In this case, the last group will have fewer than 4 characters, and
     * padding will be inferred.  If the group has one or two characters, it decodes
     * to one byte.  If the group has three characters, it decodes to two bytes.
     *
     * @param input Input to decode.
     * @param webSafe True if we should use the web-safe alphabet.
     * @return bytes representing the decoded value.
     */
    decodeStringToByteArray: function (input, webSafe) {
        this.init_();
        var charToByteMap = webSafe
            ? this.charToByteMapWebSafe_
            : this.charToByteMap_;
        var output = [];
        for (var i = 0; i < input.length;) {
            var byte1 = charToByteMap[input.charAt(i++)];
            var haveByte2 = i < input.length;
            var byte2 = haveByte2 ? charToByteMap[input.charAt(i)] : 0;
            ++i;
            var haveByte3 = i < input.length;
            var byte3 = haveByte3 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            var haveByte4 = i < input.length;
            var byte4 = haveByte4 ? charToByteMap[input.charAt(i)] : 64;
            ++i;
            if (byte1 == null || byte2 == null || byte3 == null || byte4 == null) {
                throw Error();
            }
            var outByte1 = (byte1 << 2) | (byte2 >> 4);
            output.push(outByte1);
            if (byte3 !== 64) {
                var outByte2 = ((byte2 << 4) & 0xf0) | (byte3 >> 2);
                output.push(outByte2);
                if (byte4 !== 64) {
                    var outByte3 = ((byte3 << 6) & 0xc0) | byte4;
                    output.push(outByte3);
                }
            }
        }
        return output;
    },
    /**
     * Lazy static initialization function. Called before
     * accessing any of the static map variables.
     * @private
     */
    init_: function () {
        if (!this.byteToCharMap_) {
            this.byteToCharMap_ = {};
            this.charToByteMap_ = {};
            this.byteToCharMapWebSafe_ = {};
            this.charToByteMapWebSafe_ = {};
            // We want quick mappings back and forth, so we precompute two maps.
            for (var i = 0; i < this.ENCODED_VALS.length; i++) {
                this.byteToCharMap_[i] = this.ENCODED_VALS.charAt(i);
                this.charToByteMap_[this.byteToCharMap_[i]] = i;
                this.byteToCharMapWebSafe_[i] = this.ENCODED_VALS_WEBSAFE.charAt(i);
                this.charToByteMapWebSafe_[this.byteToCharMapWebSafe_[i]] = i;
                // Be forgiving when decoding and correctly decode both encodings.
                if (i >= this.ENCODED_VALS_BASE.length) {
                    this.charToByteMap_[this.ENCODED_VALS_WEBSAFE.charAt(i)] = i;
                    this.charToByteMapWebSafe_[this.ENCODED_VALS.charAt(i)] = i;
                }
            }
        }
    }
};
/**
 * URL-safe base64 encoding
 */
var base64Encode = function (str) {
    var utf8Bytes = stringToByteArray(str);
    return base64.encodeByteArray(utf8Bytes, true);
};
/**
 * URL-safe base64 decoding
 *
 * NOTE: DO NOT use the global atob() function - it does NOT support the
 * base64Url variant encoding.
 *
 * @param str To be decoded
 * @return Decoded result, if possible
 */
var base64Decode = function (str) {
    try {
        return base64.decodeString(str, true);
    }
    catch (e) {
        console.error('base64Decode failed: ', e);
    }
    return null;
};

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Do a deep-copy of basic JavaScript Objects or Arrays.
 */
function deepCopy(value) {
    return deepExtend(undefined, value);
}
/**
 * Copy properties from source to target (recursively allows extension
 * of Objects and Arrays).  Scalar values in the target are over-written.
 * If target is undefined, an object of the appropriate type will be created
 * (and returned).
 *
 * We recursively copy all child properties of plain Objects in the source- so
 * that namespace- like dictionaries are merged.
 *
 * Note that the target can be a function, in which case the properties in
 * the source Object are copied onto it as static properties of the Function.
 */
function deepExtend(target, source) {
    if (!(source instanceof Object)) {
        return source;
    }
    switch (source.constructor) {
        case Date:
            // Treat Dates like scalars; if the target date object had any child
            // properties - they will be lost!
            var dateValue = source;
            return new Date(dateValue.getTime());
        case Object:
            if (target === undefined) {
                target = {};
            }
            break;
        case Array:
            // Always copy the array source and overwrite the target.
            target = [];
            break;
        default:
            // Not a plain Object - treat it as a scalar.
            return source;
    }
    for (var prop in source) {
        if (!source.hasOwnProperty(prop)) {
            continue;
        }
        target[prop] = deepExtend(target[prop], source[prop]);
    }
    return target;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var Deferred = /** @class */ (function () {
    function Deferred() {
        var _this = this;
        this.promise = new Promise(function (resolve, reject) {
            _this.resolve = resolve;
            _this.reject = reject;
        });
    }
    /**
     * Our API internals are not promiseified and cannot because our callback APIs have subtle expectations around
     * invoking promises inline, which Promises are forbidden to do. This method accepts an optional node-style callback
     * and returns a node-style callback which will resolve or reject the Deferred's promise.
     */
    Deferred.prototype.wrapCallback = function (callback) {
        var _this = this;
        return function (error, value) {
            if (error) {
                _this.reject(error);
            }
            else {
                _this.resolve(value);
            }
            if (typeof callback === 'function') {
                // Attaching noop handler just in case developer wasn't expecting
                // promises
                _this.promise.catch(function () { });
                // Some of our callbacks don't expect a value and our own tests
                // assert that the parameter length is 1
                if (callback.length === 1) {
                    callback(error);
                }
                else {
                    callback(error, value);
                }
            }
        };
    };
    return Deferred;
}());

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns navigator.userAgent string or '' if it's not defined.
 * @return user agent string
 */
function getUA() {
    if (typeof navigator !== 'undefined' &&
        typeof navigator['userAgent'] === 'string') {
        return navigator['userAgent'];
    }
    else {
        return '';
    }
}
/**
 * Detect Cordova / PhoneGap / Ionic frameworks on a mobile device.
 *
 * Deliberately does not rely on checking `file://` URLs (as this fails PhoneGap
 * in the Ripple emulator) nor Cordova `onDeviceReady`, which would normally
 * wait for a callback.
 */
function isMobileCordova() {
    return (typeof window !== 'undefined' &&
        // @ts-ignore Setting up an broadly applicable index signature for Window
        // just to deal with this case would probably be a bad idea.
        !!(window['cordova'] || window['phonegap'] || window['PhoneGap']) &&
        /ios|iphone|ipod|ipad|android|blackberry|iemobile/i.test(getUA()));
}
/**
 * Detect Node.js.
 *
 * @return true if Node.js environment is detected.
 */
// Node detection logic from: https://github.com/iliakan/detect-node/
function isNode() {
    try {
        return (Object.prototype.toString.call(global.process) === '[object process]');
    }
    catch (e) {
        return false;
    }
}
/**
 * Detect Browser Environment
 */
function isBrowser() {
    return typeof self === 'object' && self.self === self;
}
/**
 * Detect React Native.
 *
 * @return true if ReactNative environment is detected.
 */
function isReactNative() {
    return (typeof navigator === 'object' && navigator['product'] === 'ReactNative');
}
/**
 * Detect whether the current SDK build is the Node version.
 *
 * @return true if it's the Node SDK build.
 */
function isNodeSdk() {
    return CONSTANTS.NODE_CLIENT === true || CONSTANTS.NODE_ADMIN === true;
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var ERROR_NAME = 'FirebaseError';
// Based on code from:
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types
var FirebaseError = /** @class */ (function (_super) {
    tslib_1.__extends(FirebaseError, _super);
    function FirebaseError(code, message) {
        var _this = _super.call(this, message) || this;
        _this.code = code;
        _this.name = ERROR_NAME;
        // Fix For ES5
        // https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work
        Object.setPrototypeOf(_this, FirebaseError.prototype);
        // Maintains proper stack trace for where our error was thrown.
        // Only available on V8.
        if (Error.captureStackTrace) {
            Error.captureStackTrace(_this, ErrorFactory.prototype.create);
        }
        return _this;
    }
    return FirebaseError;
}(Error));
var ErrorFactory = /** @class */ (function () {
    function ErrorFactory(service, serviceName, errors) {
        this.service = service;
        this.serviceName = serviceName;
        this.errors = errors;
    }
    ErrorFactory.prototype.create = function (code) {
        var data = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            data[_i - 1] = arguments[_i];
        }
        var customData = data[0] || {};
        var fullCode = this.service + "/" + code;
        var template = this.errors[code];
        var message = template ? replaceTemplate(template, customData) : 'Error';
        // Service Name: Error message (service/code).
        var fullMessage = this.serviceName + ": " + message + " (" + fullCode + ").";
        var error = new FirebaseError(fullCode, fullMessage);
        // Keys with an underscore at the end of their name are not included in
        // error.data for some reason.
        // TODO: Replace with Object.entries when lib is updated to es2017.
        for (var _a = 0, _b = Object.keys(customData); _a < _b.length; _a++) {
            var key = _b[_a];
            if (key.slice(-1) !== '_') {
                if (key in error) {
                    console.warn("Overwriting FirebaseError base field \"" + key + "\" can cause unexpected behavior.");
                }
                error[key] = customData[key];
            }
        }
        return error;
    };
    return ErrorFactory;
}());
function replaceTemplate(template, data) {
    return template.replace(PATTERN, function (_, key) {
        var value = data[key];
        return value != null ? value.toString() : "<" + key + "?>";
    });
}
var PATTERN = /\{\$([^}]+)}/g;

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Evaluates a JSON string into a javascript object.
 *
 * @param {string} str A string containing JSON.
 * @return {*} The javascript object representing the specified JSON.
 */
function jsonEval(str) {
    return JSON.parse(str);
}
/**
 * Returns JSON representing a javascript object.
 * @param {*} data Javascript object to be stringified.
 * @return {string} The JSON contents of the object.
 */
function stringify(data) {
    return JSON.stringify(data);
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Decodes a Firebase auth. token into constituent parts.
 *
 * Notes:
 * - May return with invalid / incomplete claims if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var decode = function (token) {
    var header = {}, claims = {}, data = {}, signature = '';
    try {
        var parts = token.split('.');
        header = jsonEval(base64Decode(parts[0]) || '');
        claims = jsonEval(base64Decode(parts[1]) || '');
        signature = parts[2];
        data = claims['d'] || {};
        delete claims['d'];
    }
    catch (e) { }
    return {
        header: header,
        claims: claims,
        data: data,
        signature: signature
    };
};
/**
 * Decodes a Firebase auth. token and checks the validity of its time-based claims. Will return true if the
 * token is within the time window authorized by the 'nbf' (not-before) and 'iat' (issued-at) claims.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidTimestamp = function (token) {
    var claims = decode(token).claims;
    var now = Math.floor(new Date().getTime() / 1000);
    var validSince = 0, validUntil = 0;
    if (typeof claims === 'object') {
        if (claims.hasOwnProperty('nbf')) {
            validSince = claims['nbf'];
        }
        else if (claims.hasOwnProperty('iat')) {
            validSince = claims['iat'];
        }
        if (claims.hasOwnProperty('exp')) {
            validUntil = claims['exp'];
        }
        else {
            // token will expire after 24h by default
            validUntil = validSince + 86400;
        }
    }
    return (!!now &&
        !!validSince &&
        !!validUntil &&
        now >= validSince &&
        now <= validUntil);
};
/**
 * Decodes a Firebase auth. token and returns its issued at time if valid, null otherwise.
 *
 * Notes:
 * - May return null if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var issuedAtTime = function (token) {
    var claims = decode(token).claims;
    if (typeof claims === 'object' && claims.hasOwnProperty('iat')) {
        return claims['iat'];
    }
    return null;
};
/**
 * Decodes a Firebase auth. token and checks the validity of its format. Expects a valid issued-at time.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isValidFormat = function (token) {
    var decoded = decode(token), claims = decoded.claims;
    return !!claims && typeof claims === 'object' && claims.hasOwnProperty('iat');
};
/**
 * Attempts to peer into an auth token and determine if it's an admin auth token by looking at the claims portion.
 *
 * Notes:
 * - May return a false negative if there's no native base64 decoding support.
 * - Doesn't check if the token is actually valid.
 */
var isAdmin = function (token) {
    var claims = decode(token).claims;
    return typeof claims === 'object' && claims['admin'] === true;
};

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// See http://www.devthought.com/2012/01/18/an-object-is-not-a-hash/
var contains = function (obj, key) {
    return Object.prototype.hasOwnProperty.call(obj, key);
};
var safeGet = function (obj, key) {
    if (Object.prototype.hasOwnProperty.call(obj, key))
        return obj[key];
    // else return undefined.
};
/**
 * Enumerates the keys/values in an object, excluding keys defined on the prototype.
 *
 * @param {?Object.<K,V>} obj Object to enumerate.
 * @param {!function(K, V)} fn Function to call for each key and value.
 * @template K,V
 */
var forEach = function (obj, fn) {
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            fn(key, obj[key]);
        }
    }
};
/**
 * Copies all the (own) properties from one object to another.
 * @param {!Object} objTo
 * @param {!Object} objFrom
 * @return {!Object} objTo
 */
var extend = function (objTo, objFrom) {
    forEach(objFrom, function (key, value) {
        objTo[key] = value;
    });
    return objTo;
};
/**
 * Returns a clone of the specified object.
 * @param {!Object} obj
 * @return {!Object} cloned obj.
 */
var clone = function (obj) {
    return extend({}, obj);
};
/**
 * Returns true if obj has typeof "object" and is not null.  Unlike goog.isObject(), does not return true
 * for functions.
 */
var isNonNullObject = function (obj) {
    return typeof obj === 'object' && obj !== null;
};
var isEmpty = function (obj) {
    for (var key in obj) {
        return false;
    }
    return true;
};
var getCount = function (obj) {
    var rv = 0;
    for (var key in obj) {
        rv++;
    }
    return rv;
};
var map = function (obj, fn, context) {
    var res = {};
    for (var key in obj) {
        res[key] = fn.call(context, obj[key], key, obj);
    }
    return res;
};
var findKey = function (obj, fn, context) {
    for (var key in obj) {
        if (fn.call(context, obj[key], key, obj)) {
            return key;
        }
    }
    return undefined;
};
var findValue = function (obj, fn, context) {
    var key = findKey(obj, fn, context);
    return key && obj[key];
};
var getAnyKey = function (obj) {
    for (var key in obj) {
        return key;
    }
};
var getValues = function (obj) {
    var res = [];
    var i = 0;
    for (var key in obj) {
        res[i++] = obj[key];
    }
    return res;
};
/**
 * Tests whether every key/value pair in an object pass the test implemented
 * by the provided function
 *
 * @param {?Object.<K,V>} obj Object to test.
 * @param {!function(K, V)} fn Function to call for each key and value.
 * @template K,V
 */
var every = function (obj, fn) {
    for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) {
            if (!fn(key, obj[key])) {
                return false;
            }
        }
    }
    return true;
};

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Returns a querystring-formatted string (e.g. &arg=val&arg2=val2) from a params
 * object (e.g. {arg: 'val', arg2: 'val2'})
 * Note: You must prepend it with ? when adding it to a URL.
 */
var querystring = function (querystringParams) {
    var params = [];
    forEach(querystringParams, function (key, value) {
        if (Array.isArray(value)) {
            value.forEach(function (arrayVal) {
                params.push(encodeURIComponent(key) + '=' + encodeURIComponent(arrayVal));
            });
        }
        else {
            params.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));
        }
    });
    return params.length ? '&' + params.join('&') : '';
};
/**
 * Decodes a querystring (e.g. ?arg=val&arg2=val2) into a params object (e.g. {arg: 'val', arg2: 'val2'})
 *
 * @param {string} querystring
 * @return {!Object}
 */
var querystringDecode = function (querystring) {
    var obj = {};
    var tokens = querystring.replace(/^\?/, '').split('&');
    tokens.forEach(function (token) {
        if (token) {
            var key = token.split('=');
            obj[key[0]] = key[1];
        }
    });
    return obj;
};

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * @fileoverview SHA-1 cryptographic hash.
 * Variable names follow the notation in FIPS PUB 180-3:
 * http://csrc.nist.gov/publications/fips/fips180-3/fips180-3_final.pdf.
 *
 * Usage:
 *   var sha1 = new sha1();
 *   sha1.update(bytes);
 *   var hash = sha1.digest();
 *
 * Performance:
 *   Chrome 23:   ~400 Mbit/s
 *   Firefox 16:  ~250 Mbit/s
 *
 */
/**
 * SHA-1 cryptographic hash constructor.
 *
 * The properties declared here are discussed in the above algorithm document.
 * @constructor
 * @final
 * @struct
 */
var Sha1 = /** @class */ (function () {
    function Sha1() {
        /**
         * Holds the previous values of accumulated variables a-e in the compress_
         * function.
         * @private
         */
        this.chain_ = [];
        /**
         * A buffer holding the partially computed hash result.
         * @private
         */
        this.buf_ = [];
        /**
         * An array of 80 bytes, each a part of the message to be hashed.  Referred to
         * as the message schedule in the docs.
         * @private
         */
        this.W_ = [];
        /**
         * Contains data needed to pad messages less than 64 bytes.
         * @private
         */
        this.pad_ = [];
        /**
         * @private {number}
         */
        this.inbuf_ = 0;
        /**
         * @private {number}
         */
        this.total_ = 0;
        this.blockSize = 512 / 8;
        this.pad_[0] = 128;
        for (var i = 1; i < this.blockSize; ++i) {
            this.pad_[i] = 0;
        }
        this.reset();
    }
    Sha1.prototype.reset = function () {
        this.chain_[0] = 0x67452301;
        this.chain_[1] = 0xefcdab89;
        this.chain_[2] = 0x98badcfe;
        this.chain_[3] = 0x10325476;
        this.chain_[4] = 0xc3d2e1f0;
        this.inbuf_ = 0;
        this.total_ = 0;
    };
    /**
     * Internal compress helper function.
     * @param buf Block to compress.
     * @param offset Offset of the block in the buffer.
     * @private
     */
    Sha1.prototype.compress_ = function (buf, offset) {
        if (!offset) {
            offset = 0;
        }
        var W = this.W_;
        // get 16 big endian words
        if (typeof buf === 'string') {
            for (var i = 0; i < 16; i++) {
                // TODO(user): [bug 8140122] Recent versions of Safari for Mac OS and iOS
                // have a bug that turns the post-increment ++ operator into pre-increment
                // during JIT compilation.  We have code that depends heavily on SHA-1 for
                // correctness and which is affected by this bug, so I've removed all uses
                // of post-increment ++ in which the result value is used.  We can revert
                // this change once the Safari bug
                // (https://bugs.webkit.org/show_bug.cgi?id=109036) has been fixed and
                // most clients have been updated.
                W[i] =
                    (buf.charCodeAt(offset) << 24) |
                        (buf.charCodeAt(offset + 1) << 16) |
                        (buf.charCodeAt(offset + 2) << 8) |
                        buf.charCodeAt(offset + 3);
                offset += 4;
            }
        }
        else {
            for (var i = 0; i < 16; i++) {
                W[i] =
                    (buf[offset] << 24) |
                        (buf[offset + 1] << 16) |
                        (buf[offset + 2] << 8) |
                        buf[offset + 3];
                offset += 4;
            }
        }
        // expand to 80 words
        for (var i = 16; i < 80; i++) {
            var t = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];
            W[i] = ((t << 1) | (t >>> 31)) & 0xffffffff;
        }
        var a = this.chain_[0];
        var b = this.chain_[1];
        var c = this.chain_[2];
        var d = this.chain_[3];
        var e = this.chain_[4];
        var f, k;
        // TODO(user): Try to unroll this loop to speed up the computation.
        for (var i = 0; i < 80; i++) {
            if (i < 40) {
                if (i < 20) {
                    f = d ^ (b & (c ^ d));
                    k = 0x5a827999;
                }
                else {
                    f = b ^ c ^ d;
                    k = 0x6ed9eba1;
                }
            }
            else {
                if (i < 60) {
                    f = (b & c) | (d & (b | c));
                    k = 0x8f1bbcdc;
                }
                else {
                    f = b ^ c ^ d;
                    k = 0xca62c1d6;
                }
            }
            var t = (((a << 5) | (a >>> 27)) + f + e + k + W[i]) & 0xffffffff;
            e = d;
            d = c;
            c = ((b << 30) | (b >>> 2)) & 0xffffffff;
            b = a;
            a = t;
        }
        this.chain_[0] = (this.chain_[0] + a) & 0xffffffff;
        this.chain_[1] = (this.chain_[1] + b) & 0xffffffff;
        this.chain_[2] = (this.chain_[2] + c) & 0xffffffff;
        this.chain_[3] = (this.chain_[3] + d) & 0xffffffff;
        this.chain_[4] = (this.chain_[4] + e) & 0xffffffff;
    };
    Sha1.prototype.update = function (bytes, length) {
        // TODO(johnlenz): tighten the function signature and remove this check
        if (bytes == null) {
            return;
        }
        if (length === undefined) {
            length = bytes.length;
        }
        var lengthMinusBlock = length - this.blockSize;
        var n = 0;
        // Using local instead of member variables gives ~5% speedup on Firefox 16.
        var buf = this.buf_;
        var inbuf = this.inbuf_;
        // The outer while loop should execute at most twice.
        while (n < length) {
            // When we have no data in the block to top up, we can directly process the
            // input buffer (assuming it contains sufficient data). This gives ~25%
            // speedup on Chrome 23 and ~15% speedup on Firefox 16, but requires that
            // the data is provided in large chunks (or in multiples of 64 bytes).
            if (inbuf === 0) {
                while (n <= lengthMinusBlock) {
                    this.compress_(bytes, n);
                    n += this.blockSize;
                }
            }
            if (typeof bytes === 'string') {
                while (n < length) {
                    buf[inbuf] = bytes.charCodeAt(n);
                    ++inbuf;
                    ++n;
                    if (inbuf === this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            }
            else {
                while (n < length) {
                    buf[inbuf] = bytes[n];
                    ++inbuf;
                    ++n;
                    if (inbuf === this.blockSize) {
                        this.compress_(buf);
                        inbuf = 0;
                        // Jump to the outer loop so we use the full-block optimization.
                        break;
                    }
                }
            }
        }
        this.inbuf_ = inbuf;
        this.total_ += length;
    };
    /** @override */
    Sha1.prototype.digest = function () {
        var digest = [];
        var totalBits = this.total_ * 8;
        // Add pad 0x80 0x00*.
        if (this.inbuf_ < 56) {
            this.update(this.pad_, 56 - this.inbuf_);
        }
        else {
            this.update(this.pad_, this.blockSize - (this.inbuf_ - 56));
        }
        // Add # bits.
        for (var i = this.blockSize - 1; i >= 56; i--) {
            this.buf_[i] = totalBits & 255;
            totalBits /= 256; // Don't use bit-shifting here!
        }
        this.compress_(this.buf_);
        var n = 0;
        for (var i = 0; i < 5; i++) {
            for (var j = 24; j >= 0; j -= 8) {
                digest[n] = (this.chain_[i] >> j) & 255;
                ++n;
            }
        }
        return digest;
    };
    return Sha1;
}());

/**
 * Helper to make a Subscribe function (just like Promise helps make a
 * Thenable).
 *
 * @param executor Function which can make calls to a single Observer
 *     as a proxy.
 * @param onNoObservers Callback when count of Observers goes to zero.
 */
function createSubscribe(executor, onNoObservers) {
    var proxy = new ObserverProxy(executor, onNoObservers);
    return proxy.subscribe.bind(proxy);
}
/**
 * Implement fan-out for any number of Observers attached via a subscribe
 * function.
 */
var ObserverProxy = /** @class */ (function () {
    /**
     * @param executor Function which can make calls to a single Observer
     *     as a proxy.
     * @param onNoObservers Callback when count of Observers goes to zero.
     */
    function ObserverProxy(executor, onNoObservers) {
        var _this = this;
        this.observers = [];
        this.unsubscribes = [];
        this.observerCount = 0;
        // Micro-task scheduling by calling task.then().
        this.task = Promise.resolve();
        this.finalized = false;
        this.onNoObservers = onNoObservers;
        // Call the executor asynchronously so subscribers that are called
        // synchronously after the creation of the subscribe function
        // can still receive the very first value generated in the executor.
        this.task
            .then(function () {
            executor(_this);
        })
            .catch(function (e) {
            _this.error(e);
        });
    }
    ObserverProxy.prototype.next = function (value) {
        this.forEachObserver(function (observer) {
            observer.next(value);
        });
    };
    ObserverProxy.prototype.error = function (error) {
        this.forEachObserver(function (observer) {
            observer.error(error);
        });
        this.close(error);
    };
    ObserverProxy.prototype.complete = function () {
        this.forEachObserver(function (observer) {
            observer.complete();
        });
        this.close();
    };
    /**
     * Subscribe function that can be used to add an Observer to the fan-out list.
     *
     * - We require that no event is sent to a subscriber sychronously to their
     *   call to subscribe().
     */
    ObserverProxy.prototype.subscribe = function (nextOrObserver, error, complete) {
        var _this = this;
        var observer;
        if (nextOrObserver === undefined &&
            error === undefined &&
            complete === undefined) {
            throw new Error('Missing Observer.');
        }
        // Assemble an Observer object when passed as callback functions.
        if (implementsAnyMethods(nextOrObserver, ['next', 'error', 'complete'])) {
            observer = nextOrObserver;
        }
        else {
            observer = {
                next: nextOrObserver,
                error: error,
                complete: complete
            };
        }
        if (observer.next === undefined) {
            observer.next = noop;
        }
        if (observer.error === undefined) {
            observer.error = noop;
        }
        if (observer.complete === undefined) {
            observer.complete = noop;
        }
        var unsub = this.unsubscribeOne.bind(this, this.observers.length);
        // Attempt to subscribe to a terminated Observable - we
        // just respond to the Observer with the final error or complete
        // event.
        if (this.finalized) {
            // tslint:disable-next-line:no-floating-promises
            this.task.then(function () {
                try {
                    if (_this.finalError) {
                        observer.error(_this.finalError);
                    }
                    else {
                        observer.complete();
                    }
                }
                catch (e) {
                    // nothing
                }
                return;
            });
        }
        this.observers.push(observer);
        return unsub;
    };
    // Unsubscribe is synchronous - we guarantee that no events are sent to
    // any unsubscribed Observer.
    ObserverProxy.prototype.unsubscribeOne = function (i) {
        if (this.observers === undefined || this.observers[i] === undefined) {
            return;
        }
        delete this.observers[i];
        this.observerCount -= 1;
        if (this.observerCount === 0 && this.onNoObservers !== undefined) {
            this.onNoObservers(this);
        }
    };
    ObserverProxy.prototype.forEachObserver = function (fn) {
        if (this.finalized) {
            // Already closed by previous event....just eat the additional values.
            return;
        }
        // Since sendOne calls asynchronously - there is no chance that
        // this.observers will become undefined.
        for (var i = 0; i < this.observers.length; i++) {
            this.sendOne(i, fn);
        }
    };
    // Call the Observer via one of it's callback function. We are careful to
    // confirm that the observe has not been unsubscribed since this asynchronous
    // function had been queued.
    ObserverProxy.prototype.sendOne = function (i, fn) {
        var _this = this;
        // Execute the callback asynchronously
        // tslint:disable-next-line:no-floating-promises
        this.task.then(function () {
            if (_this.observers !== undefined && _this.observers[i] !== undefined) {
                try {
                    fn(_this.observers[i]);
                }
                catch (e) {
                    // Ignore exceptions raised in Observers or missing methods of an
                    // Observer.
                    // Log error to console. b/31404806
                    if (typeof console !== 'undefined' && console.error) {
                        console.error(e);
                    }
                }
            }
        });
    };
    ObserverProxy.prototype.close = function (err) {
        var _this = this;
        if (this.finalized) {
            return;
        }
        this.finalized = true;
        if (err !== undefined) {
            this.finalError = err;
        }
        // Proxy is no longer needed - garbage collect references
        // tslint:disable-next-line:no-floating-promises
        this.task.then(function () {
            _this.observers = undefined;
            _this.onNoObservers = undefined;
        });
    };
    return ObserverProxy;
}());
/** Turn synchronous function into one called asynchronously. */
function async(fn, onError) {
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        Promise.resolve(true)
            .then(function () {
            fn.apply(void 0, args);
        })
            .catch(function (error) {
            if (onError) {
                onError(error);
            }
        });
    };
}
/**
 * Return true if the object passed in implements any of the named methods.
 */
function implementsAnyMethods(obj, methods) {
    if (typeof obj !== 'object' || obj === null) {
        return false;
    }
    for (var _i = 0, methods_1 = methods; _i < methods_1.length; _i++) {
        var method = methods_1[_i];
        if (method in obj && typeof obj[method] === 'function') {
            return true;
        }
    }
    return false;
}
function noop() {
    // do nothing
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Check to make sure the appropriate number of arguments are provided for a public function.
 * Throws an error if it fails.
 *
 * @param fnName The function name
 * @param minCount The minimum number of arguments to allow for the function call
 * @param maxCount The maximum number of argument to allow for the function call
 * @param argCount The actual number of arguments provided.
 */
var validateArgCount = function (fnName, minCount, maxCount, argCount) {
    var argError;
    if (argCount < minCount) {
        argError = 'at least ' + minCount;
    }
    else if (argCount > maxCount) {
        argError = maxCount === 0 ? 'none' : 'no more than ' + maxCount;
    }
    if (argError) {
        var error = fnName +
            ' failed: Was called with ' +
            argCount +
            (argCount === 1 ? ' argument.' : ' arguments.') +
            ' Expects ' +
            argError +
            '.';
        throw new Error(error);
    }
};
/**
 * Generates a string to prefix an error message about failed argument validation
 *
 * @param fnName The function name
 * @param argumentNumber The index of the argument
 * @param optional Whether or not the argument is optional
 * @return The prefix to add to the error thrown for validation.
 */
function errorPrefix(fnName, argumentNumber, optional) {
    var argName = '';
    switch (argumentNumber) {
        case 1:
            argName = optional ? 'first' : 'First';
            break;
        case 2:
            argName = optional ? 'second' : 'Second';
            break;
        case 3:
            argName = optional ? 'third' : 'Third';
            break;
        case 4:
            argName = optional ? 'fourth' : 'Fourth';
            break;
        default:
            throw new Error('errorPrefix called with argumentNumber > 4.  Need to update it?');
    }
    var error = fnName + ' failed: ';
    error += argName + ' argument ';
    return error;
}
/**
 * @param fnName
 * @param argumentNumber
 * @param namespace
 * @param optional
 */
function validateNamespace(fnName, argumentNumber, namespace, optional) {
    if (optional && !namespace) {
        return;
    }
    if (typeof namespace !== 'string') {
        //TODO: I should do more validation here. We only allow certain chars in namespaces.
        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid firebase namespace.');
    }
}
function validateCallback(fnName, argumentNumber, callback, optional) {
    if (optional && !callback) {
        return;
    }
    if (typeof callback !== 'function') {
        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid function.');
    }
}
function validateContextObject(fnName, argumentNumber, context, optional) {
    if (optional && !context) {
        return;
    }
    if (typeof context !== 'object' || context === null) {
        throw new Error(errorPrefix(fnName, argumentNumber, optional) +
            'must be a valid context object.');
    }
}

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// Code originally came from goog.crypt.stringToUtf8ByteArray, but for some reason they
// automatically replaced '\r\n' with '\n', and they didn't handle surrogate pairs,
// so it's been modified.
// Note that not all Unicode characters appear as single characters in JavaScript strings.
// fromCharCode returns the UTF-16 encoding of a character - so some Unicode characters
// use 2 characters in Javascript.  All 4-byte UTF-8 characters begin with a first
// character in the range 0xD800 - 0xDBFF (the first character of a so-called surrogate
// pair).
// See http://www.ecma-international.org/ecma-262/5.1/#sec-15.1.3
/**
 * @param {string} str
 * @return {Array}
 */
var stringToByteArray$1 = function (str) {
    var out = [];
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        // Is this the lead surrogate in a surrogate pair?
        if (c >= 0xd800 && c <= 0xdbff) {
            var high = c - 0xd800; // the high 10 bits.
            i++;
            assert(i < str.length, 'Surrogate pair missing trail surrogate.');
            var low = str.charCodeAt(i) - 0xdc00; // the low 10 bits.
            c = 0x10000 + (high << 10) + low;
        }
        if (c < 128) {
            out[p++] = c;
        }
        else if (c < 2048) {
            out[p++] = (c >> 6) | 192;
            out[p++] = (c & 63) | 128;
        }
        else if (c < 65536) {
            out[p++] = (c >> 12) | 224;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
        else {
            out[p++] = (c >> 18) | 240;
            out[p++] = ((c >> 12) & 63) | 128;
            out[p++] = ((c >> 6) & 63) | 128;
            out[p++] = (c & 63) | 128;
        }
    }
    return out;
};
/**
 * Calculate length without actually converting; useful for doing cheaper validation.
 * @param {string} str
 * @return {number}
 */
var stringLength = function (str) {
    var p = 0;
    for (var i = 0; i < str.length; i++) {
        var c = str.charCodeAt(i);
        if (c < 128) {
            p++;
        }
        else if (c < 2048) {
            p += 2;
        }
        else if (c >= 0xd800 && c <= 0xdbff) {
            // Lead surrogate of a surrogate pair.  The pair together will take 4 bytes to represent.
            p += 4;
            i++; // skip trail surrogate.
        }
        else {
            p += 3;
        }
    }
    return p;
};

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

exports.CONSTANTS = CONSTANTS;
exports.Deferred = Deferred;
exports.ErrorFactory = ErrorFactory;
exports.FirebaseError = FirebaseError;
exports.Sha1 = Sha1;
exports.assert = assert;
exports.assertionError = assertionError;
exports.async = async;
exports.base64 = base64;
exports.base64Decode = base64Decode;
exports.base64Encode = base64Encode;
exports.clone = clone;
exports.contains = contains;
exports.createSubscribe = createSubscribe;
exports.decode = decode;
exports.deepCopy = deepCopy;
exports.deepExtend = deepExtend;
exports.errorPrefix = errorPrefix;
exports.every = every;
exports.extend = extend;
exports.findKey = findKey;
exports.findValue = findValue;
exports.forEach = forEach;
exports.getAnyKey = getAnyKey;
exports.getCount = getCount;
exports.getUA = getUA;
exports.getValues = getValues;
exports.isAdmin = isAdmin;
exports.isBrowser = isBrowser;
exports.isEmpty = isEmpty;
exports.isMobileCordova = isMobileCordova;
exports.isNode = isNode;
exports.isNodeSdk = isNodeSdk;
exports.isNonNullObject = isNonNullObject;
exports.isReactNative = isReactNative;
exports.isValidFormat = isValidFormat;
exports.isValidTimestamp = isValidTimestamp;
exports.issuedAtTime = issuedAtTime;
exports.jsonEval = jsonEval;
exports.map = map;
exports.querystring = querystring;
exports.querystringDecode = querystringDecode;
exports.safeGet = safeGet;
exports.stringLength = stringLength;
exports.stringToByteArray = stringToByteArray$1;
exports.stringify = stringify;
exports.validateArgCount = validateArgCount;
exports.validateCallback = validateCallback;
exports.validateContextObject = validateContextObject;
exports.validateNamespace = validateNamespace;
//# sourceMappingURL=index.cjs.js.map

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(17)))

/***/ }),
/* 111 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LogLevel", function() { return LogLevel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Logger", function() { return Logger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "setLogLevel", function() { return setLogLevel; });
/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * A container for all of the Logger instances
 */
var instances = [];
/**
 * The JS SDK supports 5 log levels and also allows a user the ability to
 * silence the logs altogether.
 *
 * The order is a follows:
 * DEBUG < VERBOSE < INFO < WARN < ERROR
 *
 * All of the log types above the current log level will be captured (i.e. if
 * you set the log level to `INFO`, errors will still be logged, but `DEBUG` and
 * `VERBOSE` logs will not)
 */
var LogLevel;
(function (LogLevel) {
    LogLevel[LogLevel["DEBUG"] = 0] = "DEBUG";
    LogLevel[LogLevel["VERBOSE"] = 1] = "VERBOSE";
    LogLevel[LogLevel["INFO"] = 2] = "INFO";
    LogLevel[LogLevel["WARN"] = 3] = "WARN";
    LogLevel[LogLevel["ERROR"] = 4] = "ERROR";
    LogLevel[LogLevel["SILENT"] = 5] = "SILENT";
})(LogLevel || (LogLevel = {}));
/**
 * The default log level
 */
var defaultLogLevel = LogLevel.INFO;
/**
 * The default log handler will forward DEBUG, VERBOSE, INFO, WARN, and ERROR
 * messages on to their corresponding console counterparts (if the log method
 * is supported by the current log level)
 */
var defaultLogHandler = function (instance, logType) {
    var args = [];
    for (var _i = 2; _i < arguments.length; _i++) {
        args[_i - 2] = arguments[_i];
    }
    if (logType < instance.logLevel) {
        return;
    }
    var now = new Date().toISOString();
    switch (logType) {
        /**
         * By default, `console.debug` is not displayed in the developer console (in
         * chrome). To avoid forcing users to have to opt-in to these logs twice
         * (i.e. once for firebase, and once in the console), we are sending `DEBUG`
         * logs to the `console.log` function.
         */
        case LogLevel.DEBUG:
            console.log.apply(console, ["[" + now + "]  " + instance.name + ":"].concat(args));
            break;
        case LogLevel.VERBOSE:
            console.log.apply(console, ["[" + now + "]  " + instance.name + ":"].concat(args));
            break;
        case LogLevel.INFO:
            console.info.apply(console, ["[" + now + "]  " + instance.name + ":"].concat(args));
            break;
        case LogLevel.WARN:
            console.warn.apply(console, ["[" + now + "]  " + instance.name + ":"].concat(args));
            break;
        case LogLevel.ERROR:
            console.error.apply(console, ["[" + now + "]  " + instance.name + ":"].concat(args));
            break;
        default:
            throw new Error("Attempted to log a message with an invalid logType (value: " + logType + ")");
    }
};
var Logger = /** @class */ (function () {
    /**
     * Gives you an instance of a Logger to capture messages according to
     * Firebase's logging scheme.
     *
     * @param name The name that the logs will be associated with
     */
    function Logger(name) {
        this.name = name;
        /**
         * The log level of the given Logger instance.
         */
        this._logLevel = defaultLogLevel;
        /**
         * The log handler for the Logger instance.
         */
        this._logHandler = defaultLogHandler;
        /**
         * Capture the current instance for later use
         */
        instances.push(this);
    }
    Object.defineProperty(Logger.prototype, "logLevel", {
        get: function () {
            return this._logLevel;
        },
        set: function (val) {
            if (!(val in LogLevel)) {
                throw new TypeError('Invalid value assigned to `logLevel`');
            }
            this._logLevel = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Logger.prototype, "logHandler", {
        get: function () {
            return this._logHandler;
        },
        set: function (val) {
            if (typeof val !== 'function') {
                throw new TypeError('Value assigned to `logHandler` must be a function');
            }
            this._logHandler = val;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * The functions below are all based on the `console` interface
     */
    Logger.prototype.debug = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._logHandler.apply(this, [this, LogLevel.DEBUG].concat(args));
    };
    Logger.prototype.log = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._logHandler.apply(this, [this, LogLevel.VERBOSE].concat(args));
    };
    Logger.prototype.info = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._logHandler.apply(this, [this, LogLevel.INFO].concat(args));
    };
    Logger.prototype.warn = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._logHandler.apply(this, [this, LogLevel.WARN].concat(args));
    };
    Logger.prototype.error = function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        this._logHandler.apply(this, [this, LogLevel.ERROR].concat(args));
    };
    return Logger;
}());

/**
 * @license
 * Copyright 2017 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
function setLogLevel(level) {
    instances.forEach(function (inst) {
        inst.logLevel = level;
    });
}


//# sourceMappingURL=index.esm.js.map


/***/ }),
/* 112 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var core_js_modules_es6_regexp_constructor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(51);
/* harmony import */ var core_js_modules_es6_regexp_constructor__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_constructor__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1);
/* harmony import */ var core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_web_dom_iterable__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(35);
/* harmony import */ var core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_array_sort__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(49);
/* harmony import */ var core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_match__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(6);
/* harmony import */ var core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_replace__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(36);
/* harmony import */ var core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_to_string__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(3);
/* harmony import */ var core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_regexp_split__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(65);
/* harmony import */ var core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es7_symbol_async_iterator__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(2);
/* harmony import */ var core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(core_js_modules_es6_symbol__WEBPACK_IMPORTED_MODULE_8__);









!function (t, e) {
  "object" == typeof exports && "undefined" != typeof module ? e(__webpack_require__(66)) : "function" == typeof define && __webpack_require__(50) ? define(["@firebase/app"], e) : e((t = t || self).firebase);
}(undefined, function (Wh) {
  "use strict";

  try {
    (function () {
      Wh = Wh && Wh.hasOwnProperty("default") ? Wh.default : Wh, function () {
        var t,
            o = "function" == typeof Object.defineProperties ? Object.defineProperty : function (t, e, n) {
          t != Array.prototype && t != Object.prototype && (t[e] = n.value);
        },
            a = "undefined" != typeof window && window === this ? this : "undefined" != typeof global && null != global ? global : this;

        function c(t) {
          var e,
              n,
              i = "undefined" != typeof Symbol && Symbol.iterator && t[Symbol.iterator];
          return i ? i.call(t) : {
            next: (e = t, n = 0, function () {
              return n < e.length ? {
                done: !1,
                value: e[n++]
              } : {
                done: !0
              };
            })
          };
        }

        !function (t, e) {
          if (e) {
            var n = a;
            t = t.split(".");

            for (var i = 0; i < t.length - 1; i++) {
              var r = t[i];
              r in n || (n[r] = {}), n = n[r];
            }

            (e = e(i = n[t = t[t.length - 1]])) != i && null != e && o(n, t, {
              configurable: !0,
              writable: !0,
              value: e
            });
          }
        }("Promise", function (t) {
          function s(t) {
            this.b = 0, this.c = void 0, this.a = [];
            var e = this.f();

            try {
              t(e.resolve, e.reject);
            } catch (t) {
              e.reject(t);
            }
          }

          function e() {
            this.a = null;
          }

          function u(e) {
            return e instanceof s ? e : new s(function (t) {
              t(e);
            });
          }

          if (t) return t;

          e.prototype.b = function (t) {
            if (null == this.a) {
              this.a = [];
              var e = this;
              this.c(function () {
                e.g();
              });
            }

            this.a.push(t);
          };

          var n = a.setTimeout;
          e.prototype.c = function (t) {
            n(t, 0);
          }, e.prototype.g = function () {
            for (; this.a && this.a.length;) {
              var t = this.a;
              this.a = [];

              for (var e = 0; e < t.length; ++e) {
                var n = t[e];
                t[e] = null;

                try {
                  n();
                } catch (t) {
                  this.f(t);
                }
              }
            }

            this.a = null;
          }, e.prototype.f = function (t) {
            this.c(function () {
              throw t;
            });
          }, s.prototype.f = function () {
            function t(e) {
              return function (t) {
                i || (i = !0, e.call(n, t));
              };
            }

            var n = this,
                i = !1;
            return {
              resolve: t(this.o),
              reject: t(this.g)
            };
          }, s.prototype.o = function (t) {
            if (t === this) this.g(new TypeError("A Promise cannot resolve to itself"));else if (t instanceof s) this.u(t);else {
              t: switch (typeof t) {
                case "object":
                  var e = null != t;
                  break t;

                case "function":
                  e = !0;
                  break t;

                default:
                  e = !1;
              }

              e ? this.l(t) : this.h(t);
            }
          }, s.prototype.l = function (t) {
            var e = void 0;

            try {
              e = t.then;
            } catch (t) {
              return void this.g(t);
            }

            "function" == typeof e ? this.v(e, t) : this.h(t);
          }, s.prototype.g = function (t) {
            this.i(2, t);
          }, s.prototype.h = function (t) {
            this.i(1, t);
          }, s.prototype.i = function (t, e) {
            if (0 != this.b) throw Error("Cannot settle(" + t + ", " + e + "): Promise already settled in state" + this.b);
            this.b = t, this.c = e, this.m();
          }, s.prototype.m = function () {
            if (null != this.a) {
              for (var t = 0; t < this.a.length; ++t) r.b(this.a[t]);

              this.a = null;
            }
          };
          var r = new e();
          return s.prototype.u = function (t) {
            var e = this.f();
            t.Ja(e.resolve, e.reject);
          }, s.prototype.v = function (t, e) {
            var n = this.f();

            try {
              t.call(e, n.resolve, n.reject);
            } catch (t) {
              n.reject(t);
            }
          }, s.prototype.then = function (t, e) {
            function n(e, t) {
              return "function" == typeof e ? function (t) {
                try {
                  i(e(t));
                } catch (t) {
                  r(t);
                }
              } : t;
            }

            var i,
                r,
                o = new s(function (t, e) {
              i = t, r = e;
            });
            return this.Ja(n(t, i), n(e, r)), o;
          }, s.prototype.catch = function (t) {
            return this.then(void 0, t);
          }, s.prototype.Ja = function (t, e) {
            function n() {
              switch (i.b) {
                case 1:
                  t(i.c);
                  break;

                case 2:
                  e(i.c);
                  break;

                default:
                  throw Error("Unexpected state: " + i.b);
              }
            }

            var i = this;
            null == this.a ? r.b(n) : this.a.push(n);
          }, s.resolve = u, s.reject = function (n) {
            return new s(function (t, e) {
              e(n);
            });
          }, s.race = function (r) {
            return new s(function (t, e) {
              for (var n = c(r), i = n.next(); !i.done; i = n.next()) u(i.value).Ja(t, e);
            });
          }, s.all = function (t) {
            var o = c(t),
                a = o.next();
            return a.done ? u([]) : new s(function (n, t) {
              function e(e) {
                return function (t) {
                  i[e] = t, 0 == --r && n(i);
                };
              }

              for (var i = [], r = 0; i.push(void 0), r++, u(a.value).Ja(e(i.length - 1), t), !(a = o.next()).done;);
            });
          }, s;
        });
        var u = u || {},
            l = this;

        function h(t) {
          return "string" == typeof t;
        }

        function n(t) {
          return "boolean" == typeof t;
        }

        var f = /^[\w+/_-]+[=]{0,2}$/,
            d = null;

        function s() {}

        function p(t) {
          var e = typeof t;

          if ("object" == e) {
            if (!t) return "null";
            if (t instanceof Array) return "array";
            if (t instanceof Object) return e;
            var n = Object.prototype.toString.call(t);
            if ("[object Window]" == n) return "object";
            if ("[object Array]" == n || "number" == typeof t.length && void 0 !== t.splice && void 0 !== t.propertyIsEnumerable && !t.propertyIsEnumerable("splice")) return "array";
            if ("[object Function]" == n || void 0 !== t.call && void 0 !== t.propertyIsEnumerable && !t.propertyIsEnumerable("call")) return "function";
          } else if ("function" == e && void 0 === t.call) return "object";

          return e;
        }

        function i(t) {
          return null === t;
        }

        function v(t) {
          return "array" == p(t);
        }

        function m(t) {
          var e = p(t);
          return "array" == e || "object" == e && "number" == typeof t.length;
        }

        function g(t) {
          return "function" == p(t);
        }

        function b(t) {
          var e = typeof t;
          return "object" == e && null != t || "function" == e;
        }

        var e = "closure_uid_" + (1e9 * Math.random() >>> 0),
            r = 0;

        function y(t, e, n) {
          return t.call.apply(t.bind, arguments);
        }

        function w(e, n, t) {
          if (!e) throw Error();

          if (2 < arguments.length) {
            var i = Array.prototype.slice.call(arguments, 2);
            return function () {
              var t = Array.prototype.slice.call(arguments);
              return Array.prototype.unshift.apply(t, i), e.apply(n, t);
            };
          }

          return function () {
            return e.apply(n, arguments);
          };
        }

        function I(t, e, n) {
          return (I = Function.prototype.bind && -1 != Function.prototype.bind.toString().indexOf("native code") ? y : w).apply(null, arguments);
        }

        function T(e, t) {
          var n = Array.prototype.slice.call(arguments, 1);
          return function () {
            var t = n.slice();
            return t.push.apply(t, arguments), e.apply(this, t);
          };
        }

        var k = Date.now || function () {
          return +new Date();
        };

        function E(t, o) {
          function e() {}

          e.prototype = o.prototype, t.qb = o.prototype, t.prototype = new e(), (t.prototype.constructor = t).cd = function (t, e, n) {
            for (var i = Array(arguments.length - 2), r = 2; r < arguments.length; r++) i[r - 2] = arguments[r];

            return o.prototype[e].apply(t, i);
          };
        }

        function S(t) {
          if (!t) return !1;

          try {
            return !!t.$goog_Thenable;
          } catch (t) {
            return !1;
          }
        }

        function A(t) {
          if (Error.captureStackTrace) Error.captureStackTrace(this, A);else {
            var e = Error().stack;
            e && (this.stack = e);
          }
          t && (this.message = String(t));
        }

        function N(t, e) {
          for (var n = "", i = (t = t.split("%s")).length - 1, r = 0; r < i; r++) n += t[r] + (r < e.length ? e[r] : "%s");

          A.call(this, n + t[i]);
        }

        function O(t, e) {
          throw new N("Failure" + (t ? ": " + t : ""), Array.prototype.slice.call(arguments, 1));
        }

        function _(t, e) {
          this.c = t, this.f = e, this.b = 0, this.a = null;
        }

        function P(t, e) {
          t.f(e), t.b < 100 && (t.b++, e.next = t.a, t.a = e);
        }

        function C() {
          this.b = this.a = null;
        }

        E(A, Error), A.prototype.name = "CustomError", E(N, A), N.prototype.name = "AssertionError", _.prototype.get = function () {
          if (0 < this.b) {
            this.b--;
            var t = this.a;
            this.a = t.next, t.next = null;
          } else t = this.c();

          return t;
        };
        var R = new _(function () {
          return new D();
        }, function (t) {
          t.reset();
        });

        function D() {
          this.next = this.b = this.a = null;
        }

        C.prototype.add = function (t, e) {
          var n = R.get();
          n.set(t, e), this.b ? this.b.next = n : this.a = n, this.b = n;
        }, D.prototype.set = function (t, e) {
          this.a = t, this.b = e, this.next = null;
        }, D.prototype.reset = function () {
          this.next = this.b = this.a = null;
        };
        var L = Array.prototype.indexOf ? function (t, e) {
          return Array.prototype.indexOf.call(t, e, void 0);
        } : function (t, e) {
          if (h(t)) return h(e) && 1 == e.length ? t.indexOf(e, 0) : -1;

          for (var n = 0; n < t.length; n++) if (n in t && t[n] === e) return n;

          return -1;
        },
            x = Array.prototype.forEach ? function (t, e, n) {
          Array.prototype.forEach.call(t, e, n);
        } : function (t, e, n) {
          for (var i = t.length, r = h(t) ? t.split("") : t, o = 0; o < i; o++) o in r && e.call(n, r[o], o, t);
        };
        var M = Array.prototype.map ? function (t, e) {
          return Array.prototype.map.call(t, e, void 0);
        } : function (t, e) {
          for (var n = t.length, i = Array(n), r = h(t) ? t.split("") : t, o = 0; o < n; o++) o in r && (i[o] = e.call(void 0, r[o], o, t));

          return i;
        },
            j = Array.prototype.some ? function (t, e) {
          return Array.prototype.some.call(t, e, void 0);
        } : function (t, e) {
          for (var n = t.length, i = h(t) ? t.split("") : t, r = 0; r < n; r++) if (r in i && e.call(void 0, i[r], r, t)) return !0;

          return !1;
        };

        function U(t, e) {
          return 0 <= L(t, e);
        }

        function V(t, e) {
          var n;
          return (n = 0 <= (e = L(t, e))) && Array.prototype.splice.call(t, e, 1), n;
        }

        function K(n, i) {
          !function (t, e) {
            for (var n = h(t) ? t.split("") : t, i = t.length - 1; 0 <= i; --i) i in n && e.call(void 0, n[i], i, t);
          }(n, function (t, e) {
            i.call(void 0, t, e, n) && 1 == Array.prototype.splice.call(n, e, 1).length && 0;
          });
        }

        function F(t) {
          return Array.prototype.concat.apply([], arguments);
        }

        function q(t) {
          var e = t.length;

          if (0 < e) {
            for (var n = Array(e), i = 0; i < e; i++) n[i] = t[i];

            return n;
          }

          return [];
        }

        var H,
            B = String.prototype.trim ? function (t) {
          return t.trim();
        } : function (t) {
          return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(t)[1];
        },
            G = /&/g,
            W = /</g,
            X = />/g,
            J = /"/g,
            z = /'/g,
            Y = /\x00/g,
            $ = /[\x00&<>"']/;

        function Z(t, e) {
          return -1 != t.indexOf(e);
        }

        function Q(t, e) {
          return t < e ? -1 : e < t ? 1 : 0;
        }

        t: {
          var tt = l.navigator;

          if (tt) {
            var et = tt.userAgent;

            if (et) {
              H = et;
              break t;
            }
          }

          H = "";
        }

        function nt(t) {
          return Z(H, t);
        }

        function it(t, e) {
          for (var n in t) e.call(void 0, t[n], n, t);
        }

        function rt(t) {
          for (var e in t) return !1;

          return !0;
        }

        function ot(t) {
          var e,
              n = {};

          for (e in t) n[e] = t[e];

          return n;
        }

        var at,
            st,
            ut = "constructor hasOwnProperty isPrototypeOf propertyIsEnumerable toLocaleString toString valueOf".split(" ");

        function ct(t, e) {
          for (var n, i, r = 1; r < arguments.length; r++) {
            for (n in i = arguments[r]) t[n] = i[n];

            for (var o = 0; o < ut.length; o++) n = ut[o], Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]);
          }
        }

        function ht(t, e) {
          for (var n = t.split("%s"), i = "", r = Array.prototype.slice.call(arguments, 1); r.length && 1 < n.length;) i += n.shift() + r.shift();

          return i + n.join("%s");
        }

        function lt(t) {
          return $.test(t) && (-1 != t.indexOf("&") && (t = t.replace(G, "&amp;")), -1 != t.indexOf("<") && (t = t.replace(W, "&lt;")), -1 != t.indexOf(">") && (t = t.replace(X, "&gt;")), -1 != t.indexOf('"') && (t = t.replace(J, "&quot;")), -1 != t.indexOf("'") && (t = t.replace(z, "&#39;")), -1 != t.indexOf("\0") && (t = t.replace(Y, "&#0;"))), t;
        }

        function ft(t) {
          l.setTimeout(function () {
            throw t;
          }, 0);
        }

        function dt(t, e) {
          st || function () {
            if (l.Promise && l.Promise.resolve) {
              var t = l.Promise.resolve(void 0);

              st = function st() {
                t.then(mt);
              };
            } else st = function st() {
              var t = mt;
              !g(l.setImmediate) || l.Window && l.Window.prototype && !nt("Edge") && l.Window.prototype.setImmediate == l.setImmediate ? (at || (at = function () {
                var t = l.MessageChannel;
                if (void 0 === t && "undefined" != typeof window && window.postMessage && window.addEventListener && !nt("Presto") && (t = function t() {
                  var t = document.createElement("IFRAME");
                  t.style.display = "none", t.src = "", document.documentElement.appendChild(t);
                  var e = t.contentWindow;
                  (t = e.document).open(), t.write(""), t.close();
                  var n = "callImmediate" + Math.random(),
                      i = "file:" == e.location.protocol ? "*" : e.location.protocol + "//" + e.location.host;
                  t = I(function (t) {
                    "*" != i && t.origin != i || t.data != n || this.port1.onmessage();
                  }, this), e.addEventListener("message", t, !1), this.port1 = {}, this.port2 = {
                    postMessage: function postMessage() {
                      e.postMessage(n, i);
                    }
                  };
                }), void 0 === t || nt("Trident") || nt("MSIE")) return "undefined" != typeof document && "onreadystatechange" in document.createElement("SCRIPT") ? function (t) {
                  var e = document.createElement("SCRIPT");
                  e.onreadystatechange = function () {
                    e.onreadystatechange = null, e.parentNode.removeChild(e), e = null, t(), t = null;
                  }, document.documentElement.appendChild(e);
                } : function (t) {
                  l.setTimeout(t, 0);
                };
                var e = new t(),
                    n = {},
                    i = n;
                return e.port1.onmessage = function () {
                  if (void 0 !== n.next) {
                    var t = (n = n.next).yb;
                    n.yb = null, t();
                  }
                }, function (t) {
                  i.next = {
                    yb: t
                  }, i = i.next, e.port2.postMessage(0);
                };
              }()), at(t)) : l.setImmediate(t);
            };
          }(), pt || (st(), pt = !0), vt.add(t, e);
        }

        var pt = !1,
            vt = new C();

        function mt() {
          for (var t; n = e = void 0, n = null, (e = vt).a && (n = e.a, e.a = e.a.next, e.a || (e.b = null), n.next = null), t = n;) {
            try {
              t.a.call(t.b);
            } catch (t) {
              ft(t);
            }

            P(R, t);
          }

          var e, n;
          pt = !1;
        }

        function gt(t, e) {
          if (this.a = bt, this.i = void 0, this.f = this.b = this.c = null, this.g = this.h = !1, t != s) try {
            var n = this;
            t.call(e, function (t) {
              Pt(n, yt, t);
            }, function (t) {
              if (!(t instanceof jt)) try {
                if (t instanceof Error) throw t;
                throw Error("Promise rejected.");
              } catch (t) {}
              Pt(n, wt, t);
            });
          } catch (t) {
            Pt(this, wt, t);
          }
        }

        var bt = 0,
            yt = 2,
            wt = 3;

        function It() {
          this.next = this.f = this.b = this.g = this.a = null, this.c = !1;
        }

        It.prototype.reset = function () {
          this.f = this.b = this.g = this.a = null, this.c = !1;
        };

        var Tt = new _(function () {
          return new It();
        }, function (t) {
          t.reset();
        });

        function kt(t, e, n) {
          var i = Tt.get();
          return i.g = t, i.b = e, i.f = n, i;
        }

        function Et(t) {
          if (t instanceof gt) return t;
          var e = new gt(s);
          return Pt(e, yt, t), e;
        }

        function St(n) {
          return new gt(function (t, e) {
            e(n);
          });
        }

        function At(t, e, n) {
          Ct(t, e, n, null) || dt(T(e, t));
        }

        function Nt(n) {
          return new gt(function (i) {
            var r = n.length,
                o = [];
            if (r) for (var t = function t(_t2, e, n) {
              r--, o[_t2] = e ? {
                Eb: !0,
                value: n
              } : {
                Eb: !1,
                reason: n
              }, 0 == r && i(o);
            }, e = 0; e < n.length; e++) At(n[e], T(t, e, !0), T(t, e, !1));else i(o);
          });
        }

        function Ot(t, e) {
          t.b || t.a != yt && t.a != wt || Rt(t), t.f ? t.f.next = e : t.b = e, t.f = e;
        }

        function _t(t, r, o, a) {
          var e = kt(null, null, null);
          return e.a = new gt(function (n, i) {
            e.g = r ? function (t) {
              try {
                var e = r.call(a, t);
                n(e);
              } catch (t) {
                i(t);
              }
            } : n, e.b = o ? function (t) {
              try {
                var e = o.call(a, t);
                void 0 === e && t instanceof jt ? i(t) : n(e);
              } catch (t) {
                i(t);
              }
            } : i;
          }), Ot(e.a.c = t, e), e.a;
        }

        function Pt(t, e, n) {
          var i, r;
          t.a == bt && (t === n && (e = wt, n = new TypeError("Promise cannot resolve to itself")), t.a = 1, Ct(n, t.Lc, t.Mc, t) || (t.i = n, t.a = e, t.c = null, Rt(t), e != wt || n instanceof jt || (r = n, (i = t).g = !0, dt(function () {
            i.g && Mt.call(null, r);
          }))));
        }

        function Ct(t, e, n, i) {
          if (t instanceof gt) return Ot(t, kt(e || s, n || null, i)), !0;
          if (S(t)) return t.then(e, n, i), !0;
          if (b(t)) try {
            var r = t.then;
            if (g(r)) return function (t, e, n, i, r) {
              function o(t) {
                a || (a = !0, i.call(r, t));
              }

              var a = !1;

              try {
                e.call(t, function (t) {
                  a || (a = !0, n.call(r, t));
                }, o);
              } catch (t) {
                o(t);
              }
            }(t, r, e, n, i), !0;
          } catch (t) {
            return n.call(i, t), !0;
          }
          return !1;
        }

        function Rt(t) {
          t.h || (t.h = !0, dt(t.Xb, t));
        }

        function Dt(t) {
          var e = null;
          return t.b && (e = t.b, t.b = e.next, e.next = null), t.b || (t.f = null), e;
        }

        function Lt(t, e, n, i) {
          if (n == wt && e.b && !e.c) for (; t && t.g; t = t.c) t.g = !1;
          if (e.a) e.a.c = null, xt(e, n, i);else try {
            e.c ? e.g.call(e.f) : xt(e, n, i);
          } catch (t) {
            Mt.call(null, t);
          }
          P(Tt, e);
        }

        function xt(t, e, n) {
          e == yt ? t.g.call(t.f, n) : t.b && t.b.call(t.f, n);
        }

        gt.prototype.then = function (t, e, n) {
          return _t(this, g(t) ? t : null, g(e) ? e : null, n);
        }, gt.prototype.$goog_Thenable = !0, (t = gt.prototype).ia = function (t, e) {
          return (t = kt(t, t, e)).c = !0, Ot(this, t), this;
        }, t.s = function (t, e) {
          return _t(this, null, t, e);
        }, t.cancel = function (t) {
          this.a == bt && dt(function () {
            !function t(e, n) {
              if (e.a == bt) if (e.c) {
                var i = e.c;

                if (i.b) {
                  for (var r = 0, o = null, a = null, s = i.b; s && (s.c || (r++, s.a == e && (o = s), !(o && 1 < r))); s = s.next) o || (a = s);

                  o && (i.a == bt && 1 == r ? t(i, n) : (a ? ((r = a).next == i.f && (i.f = r), r.next = r.next.next) : Dt(i), Lt(i, o, wt, n)));
                }

                e.c = null;
              } else Pt(e, wt, n);
            }(this, new jt(t));
          }, this);
        }, t.Lc = function (t) {
          this.a = bt, Pt(this, yt, t);
        }, t.Mc = function (t) {
          this.a = bt, Pt(this, wt, t);
        }, t.Xb = function () {
          for (var t; t = Dt(this);) Lt(this, t, this.a, this.i);

          this.h = !1;
        };
        var Mt = ft;

        function jt(t) {
          A.call(this, t);
        }

        function Ut() {
          this.qa = this.qa, this.ja = this.ja;
        }

        E(jt, A);
        var Vt = 0;

        function Kt(t) {
          if (!t.qa && (t.qa = !0, t.va(), 0 != Vt)) t[e] || (t[e] = ++r);
        }

        function Ft(t) {
          return Ft[" "](t), t;
        }

        Ut.prototype.qa = !(jt.prototype.name = "cancel"), Ut.prototype.va = function () {
          if (this.ja) for (; this.ja.length;) this.ja.shift()();
        }, Ft[" "] = s;
        var qt,
            Ht,
            Bt = nt("Opera"),
            Gt = nt("Trident") || nt("MSIE"),
            Wt = nt("Edge"),
            Xt = Wt || Gt,
            Jt = nt("Gecko") && !(Z(H.toLowerCase(), "webkit") && !nt("Edge")) && !(nt("Trident") || nt("MSIE")) && !nt("Edge"),
            zt = Z(H.toLowerCase(), "webkit") && !nt("Edge");

        function Yt() {
          var t = l.document;
          return t ? t.documentMode : void 0;
        }

        t: {
          var $t = "",
              Zt = (Ht = H, Jt ? /rv:([^\);]+)(\)|;)/.exec(Ht) : Wt ? /Edge\/([\d\.]+)/.exec(Ht) : Gt ? /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/.exec(Ht) : zt ? /WebKit\/(\S+)/.exec(Ht) : Bt ? /(?:Version)[ \/]?(\S+)/.exec(Ht) : void 0);

          if (Zt && ($t = Zt ? Zt[1] : ""), Gt) {
            var Qt = Yt();

            if (null != Qt && Qt > parseFloat($t)) {
              qt = String(Qt);
              break t;
            }
          }

          qt = $t;
        }

        var te,
            ee = {};

        function ne(s) {
          return t = s, e = function e() {
            for (var t = 0, e = B(String(qt)).split("."), n = B(String(s)).split("."), i = Math.max(e.length, n.length), r = 0; 0 == t && r < i; r++) {
              var o = e[r] || "",
                  a = n[r] || "";

              do {
                if (o = /(\d*)(\D*)(.*)/.exec(o) || ["", "", "", ""], a = /(\d*)(\D*)(.*)/.exec(a) || ["", "", "", ""], 0 == o[0].length && 0 == a[0].length) break;
                t = Q(0 == o[1].length ? 0 : parseInt(o[1], 10), 0 == a[1].length ? 0 : parseInt(a[1], 10)) || Q(0 == o[2].length, 0 == a[2].length) || Q(o[2], a[2]), o = o[3], a = a[3];
              } while (0 == t);
            }

            return 0 <= t;
          }, n = ee, Object.prototype.hasOwnProperty.call(n, t) ? n[t] : n[t] = e(t);
          var t, e, n;
        }

        var ie = l.document;
        te = ie && Gt ? Yt() || ("CSS1Compat" == ie.compatMode ? parseInt(qt, 10) : 5) : void 0;

        var re = Object.freeze || function (t) {
          return t;
        },
            oe = !Gt || 9 <= Number(te),
            ae = Gt && !ne("9"),
            se = function () {
          if (!l.addEventListener || !Object.defineProperty) return !1;
          var t = !1,
              e = Object.defineProperty({}, "passive", {
            get: function get() {
              t = !0;
            }
          });

          try {
            l.addEventListener("test", s, e), l.removeEventListener("test", s, e);
          } catch (t) {}

          return t;
        }();

        function ue(t, e) {
          this.type = t, this.b = this.target = e, this.Kb = !0;
        }

        function ce(t, e) {
          if (ue.call(this, t ? t.type : ""), this.relatedTarget = this.b = this.target = null, this.button = this.screenY = this.screenX = this.clientY = this.clientX = 0, this.key = "", this.metaKey = this.shiftKey = this.altKey = this.ctrlKey = !1, this.pointerId = 0, this.pointerType = "", this.a = null, t) {
            var n = this.type = t.type,
                i = t.changedTouches && t.changedTouches.length ? t.changedTouches[0] : null;

            if (this.target = t.target || t.srcElement, this.b = e, e = t.relatedTarget) {
              if (Jt) {
                t: {
                  try {
                    Ft(e.nodeName);
                    var r = !0;
                    break t;
                  } catch (t) {}

                  r = !1;
                }

                r || (e = null);
              }
            } else "mouseover" == n ? e = t.fromElement : "mouseout" == n && (e = t.toElement);

            this.relatedTarget = e, this.screenY = i ? (this.clientX = void 0 !== i.clientX ? i.clientX : i.pageX, this.clientY = void 0 !== i.clientY ? i.clientY : i.pageY, this.screenX = i.screenX || 0, i.screenY || 0) : (this.clientX = void 0 !== t.clientX ? t.clientX : t.pageX, this.clientY = void 0 !== t.clientY ? t.clientY : t.pageY, this.screenX = t.screenX || 0, t.screenY || 0), this.button = t.button, this.key = t.key || "", this.ctrlKey = t.ctrlKey, this.altKey = t.altKey, this.shiftKey = t.shiftKey, this.metaKey = t.metaKey, this.pointerId = t.pointerId || 0, this.pointerType = h(t.pointerType) ? t.pointerType : he[t.pointerType] || "", (this.a = t).defaultPrevented && this.preventDefault();
          }
        }

        ue.prototype.preventDefault = function () {
          this.Kb = !1;
        }, E(ce, ue);
        var he = re({
          2: "touch",
          3: "pen",
          4: "mouse"
        });
        ce.prototype.preventDefault = function () {
          ce.qb.preventDefault.call(this);
          var t = this.a;
          if (t.preventDefault) t.preventDefault();else if (t.returnValue = !1, ae) try {
            (t.ctrlKey || 112 <= t.keyCode && t.keyCode <= 123) && (t.keyCode = -1);
          } catch (t) {}
        }, ce.prototype.f = function () {
          return this.a;
        };
        var le = "closure_listenable_" + (1e6 * Math.random() | 0),
            fe = 0;

        function de(t, e, n, i, r) {
          this.listener = t, this.proxy = null, this.src = e, this.type = n, this.capture = !!i, this.Na = r, this.key = ++fe, this.oa = this.Ia = !1;
        }

        function pe(t) {
          t.oa = !0, t.listener = null, t.proxy = null, t.src = null, t.Na = null;
        }

        function ve(t) {
          this.src = t, this.a = {}, this.b = 0;
        }

        function me(t, e) {
          var n = e.type;
          n in t.a && V(t.a[n], e) && (pe(e), 0 == t.a[n].length && (delete t.a[n], t.b--));
        }

        function ge(t, e, n, i) {
          for (var r = 0; r < t.length; ++r) {
            var o = t[r];
            if (!o.oa && o.listener == e && o.capture == !!n && o.Na == i) return r;
          }

          return -1;
        }

        ve.prototype.add = function (t, e, n, i, r) {
          var o = t.toString();
          (t = this.a[o]) || (t = this.a[o] = [], this.b++);
          var a = ge(t, e, i, r);
          return -1 < a ? (e = t[a], n || (e.Ia = !1)) : ((e = new de(e, this.src, o, !!i, r)).Ia = n, t.push(e)), e;
        };

        var be = "closure_lm_" + (1e6 * Math.random() | 0),
            ye = {};

        function we(t, e, n, i, r) {
          if (i && i.once) Te(t, e, n, i, r);else if (v(e)) for (var o = 0; o < e.length; o++) we(t, e[o], n, i, r);else n = Ce(n), t && t[le] ? De(t, e, n, b(i) ? !!i.capture : !!i, r) : Ie(t, e, n, !1, i, r);
        }

        function Ie(t, e, n, i, r, o) {
          if (!e) throw Error("Invalid event type");

          var a,
              s,
              u = b(r) ? !!r.capture : !!r,
              c = _e(t);

          if (c || (t[be] = c = new ve(t)), !(n = c.add(e, n, i, u, o)).proxy) if (a = Oe, i = s = oe ? function (t) {
            return a.call(s.src, s.listener, t);
          } : function (t) {
            if (!(t = a.call(s.src, s.listener, t))) return t;
          }, (n.proxy = i).src = t, i.listener = n, t.addEventListener) se || (r = u), void 0 === r && (r = !1), t.addEventListener(e.toString(), i, r);else if (t.attachEvent) t.attachEvent(Se(e.toString()), i);else {
            if (!t.addListener || !t.removeListener) throw Error("addEventListener and attachEvent are unavailable.");
            t.addListener(i);
          }
        }

        function Te(t, e, n, i, r) {
          if (v(e)) for (var o = 0; o < e.length; o++) Te(t, e[o], n, i, r);else n = Ce(n), t && t[le] ? Le(t, e, n, b(i) ? !!i.capture : !!i, r) : Ie(t, e, n, !0, i, r);
        }

        function ke(t, e, n, i, r) {
          if (v(e)) for (var o = 0; o < e.length; o++) ke(t, e[o], n, i, r);else i = b(i) ? !!i.capture : !!i, n = Ce(n), t && t[le] ? (t = t.m, (e = String(e).toString()) in t.a && -1 < (n = ge(o = t.a[e], n, i, r)) && (pe(o[n]), Array.prototype.splice.call(o, n, 1), 0 == o.length && (delete t.a[e], t.b--))) : t && (t = _e(t)) && (e = t.a[e.toString()], t = -1, e && (t = ge(e, n, i, r)), (n = -1 < t ? e[t] : null) && Ee(n));
        }

        function Ee(t) {
          if ("number" != typeof t && t && !t.oa) {
            var e = t.src;
            if (e && e[le]) me(e.m, t);else {
              var n = t.type,
                  i = t.proxy;
              e.removeEventListener ? e.removeEventListener(n, i, t.capture) : e.detachEvent ? e.detachEvent(Se(n), i) : e.addListener && e.removeListener && e.removeListener(i), (n = _e(e)) ? (me(n, t), 0 == n.b && (n.src = null, e[be] = null)) : pe(t);
            }
          }
        }

        function Se(t) {
          return t in ye ? ye[t] : ye[t] = "on" + t;
        }

        function Ae(t, e, n, i) {
          var r = !0;
          if ((t = _e(t)) && (e = t.a[e.toString()])) for (e = e.concat(), t = 0; t < e.length; t++) {
            var o = e[t];
            o && o.capture == n && !o.oa && (o = Ne(o, i), r = r && !1 !== o);
          }
          return r;
        }

        function Ne(t, e) {
          var n = t.listener,
              i = t.Na || t.src;
          return t.Ia && Ee(t), n.call(i, e);
        }

        function Oe(t, e) {
          if (t.oa) return !0;
          if (oe) return Ne(t, new ce(e, this));
          if (!e) t: {
            e = ["window", "event"];

            for (var n = l, i = 0; i < e.length; i++) if (null == (n = n[e[i]])) {
              e = null;
              break t;
            }

            e = n;
          }

          if (e = new ce(i = e, this), n = !0, !(i.keyCode < 0 || null != i.returnValue)) {
            t: {
              var r = !1;
              if (0 == i.keyCode) try {
                i.keyCode = -1;
                break t;
              } catch (t) {
                r = !0;
              }
              (r || null == i.returnValue) && (i.returnValue = !0);
            }

            for (i = [], r = e.b; r; r = r.parentNode) i.push(r);

            for (t = t.type, r = i.length - 1; 0 <= r; r--) {
              e.b = i[r];
              var o = Ae(i[r], t, !0, e);
              n = n && o;
            }

            for (r = 0; r < i.length; r++) e.b = i[r], o = Ae(i[r], t, !1, e), n = n && o;
          }

          return n;
        }

        function _e(t) {
          return (t = t[be]) instanceof ve ? t : null;
        }

        var Pe = "__closure_events_fn_" + (1e9 * Math.random() >>> 0);

        function Ce(e) {
          return g(e) ? e : (e[Pe] || (e[Pe] = function (t) {
            return e.handleEvent(t);
          }), e[Pe]);
        }

        function Re() {
          Ut.call(this), this.m = new ve(this), (this.Qb = this).Va = null;
        }

        function De(t, e, n, i, r) {
          t.m.add(String(e), n, !1, i, r);
        }

        function Le(t, e, n, i, r) {
          t.m.add(String(e), n, !0, i, r);
        }

        function xe(t, e, n, i) {
          if (!(e = t.m.a[String(e)])) return !0;
          e = e.concat();

          for (var r = !0, o = 0; o < e.length; ++o) {
            var a = e[o];

            if (a && !a.oa && a.capture == n) {
              var s = a.listener,
                  u = a.Na || a.src;
              a.Ia && me(t.m, a), r = !1 !== s.call(u, i) && r;
            }
          }

          return r && 0 != i.Kb;
        }

        function Me(t, e, n) {
          if (g(t)) n && (t = I(t, n));else {
            if (!t || "function" != typeof t.handleEvent) throw Error("Invalid listener argument");
            t = I(t.handleEvent, t);
          }
          return 2147483647 < Number(e) ? -1 : l.setTimeout(t, e || 0);
        }

        function je(n) {
          var i = null;
          return new gt(function (t, e) {
            -1 == (i = Me(function () {
              t(void 0);
            }, n)) && e(Error("Failed to schedule timer."));
          }).s(function (t) {
            throw l.clearTimeout(i), t;
          });
        }

        function Ue(t) {
          if (t.S && "function" == typeof t.S) return t.S();
          if (h(t)) return t.split("");

          if (m(t)) {
            for (var e = [], n = t.length, i = 0; i < n; i++) e.push(t[i]);

            return e;
          }

          for (i in e = [], n = 0, t) e[n++] = t[i];

          return e;
        }

        function Ve(t) {
          if (t.U && "function" == typeof t.U) return t.U();

          if (!t.S || "function" != typeof t.S) {
            if (m(t) || h(t)) {
              var e = [];
              t = t.length;

              for (var n = 0; n < t; n++) e.push(n);

              return e;
            }

            for (var i in e = [], n = 0, t) e[n++] = i;

            return e;
          }
        }

        function Ke(t, e) {
          this.b = {}, this.a = [], this.c = 0;
          var n = arguments.length;

          if (1 < n) {
            if (n % 2) throw Error("Uneven number of arguments");

            for (var i = 0; i < n; i += 2) this.set(arguments[i], arguments[i + 1]);
          } else if (t) if (t instanceof Ke) for (n = t.U(), i = 0; i < n.length; i++) this.set(n[i], t.get(n[i]));else for (i in t) this.set(i, t[i]);
        }

        function Fe(t) {
          if (t.c != t.a.length) {
            for (var e = 0, n = 0; e < t.a.length;) {
              var i = t.a[e];
              qe(t.b, i) && (t.a[n++] = i), e++;
            }

            t.a.length = n;
          }

          if (t.c != t.a.length) {
            var r = {};

            for (n = e = 0; e < t.a.length;) qe(r, i = t.a[e]) || (r[t.a[n++] = i] = 1), e++;

            t.a.length = n;
          }
        }

        function qe(t, e) {
          return Object.prototype.hasOwnProperty.call(t, e);
        }

        E(Re, Ut), Re.prototype[le] = !0, Re.prototype.addEventListener = function (t, e, n, i) {
          we(this, t, e, n, i);
        }, Re.prototype.removeEventListener = function (t, e, n, i) {
          ke(this, t, e, n, i);
        }, Re.prototype.dispatchEvent = function (t) {
          var e,
              n = this.Va;
          if (n) for (e = []; n; n = n.Va) e.push(n);
          n = this.Qb;
          var i = t.type || t;
          if (h(t)) t = new ue(t, n);else if (t instanceof ue) t.target = t.target || n;else {
            var r = t;
            ct(t = new ue(i, n), r);
          }
          if (r = !0, e) for (var o = e.length - 1; 0 <= o; o--) {
            var a = t.b = e[o];
            r = xe(a, i, !0, t) && r;
          }
          if (r = xe(a = t.b = n, i, !0, t) && r, r = xe(a, i, !1, t) && r, e) for (o = 0; o < e.length; o++) r = xe(a = t.b = e[o], i, !1, t) && r;
          return r;
        }, Re.prototype.va = function () {
          if (Re.qb.va.call(this), this.m) {
            var t,
                e = this.m;

            for (t in e.a) {
              for (var n = e.a[t], i = 0; i < n.length; i++) pe(n[i]);

              delete e.a[t], e.b--;
            }
          }

          this.Va = null;
        }, (t = Ke.prototype).S = function () {
          Fe(this);

          for (var t = [], e = 0; e < this.a.length; e++) t.push(this.b[this.a[e]]);

          return t;
        }, t.U = function () {
          return Fe(this), this.a.concat();
        }, t.clear = function () {
          this.b = {}, this.c = this.a.length = 0;
        }, t.get = function (t, e) {
          return qe(this.b, t) ? this.b[t] : e;
        }, t.set = function (t, e) {
          qe(this.b, t) || (this.c++, this.a.push(t)), this.b[t] = e;
        }, t.forEach = function (t, e) {
          for (var n = this.U(), i = 0; i < n.length; i++) {
            var r = n[i],
                o = this.get(r);
            t.call(e, o, r, this);
          }
        };
        var He = /^(?:([^:/?#.]+):)?(?:\/\/(?:([^/?#]*)@)?([^/#?]*?)(?::([0-9]+))?(?=[/#?]|$))?([^?#]+)?(?:\?([^#]*))?(?:#([\s\S]*))?$/;

        function Be(t, e) {
          var n;
          this.b = this.i = this.f = "", this.m = null, this.g = this.c = "", this.h = !1, t instanceof Be ? (this.h = void 0 !== e ? e : t.h, Ge(this, t.f), this.i = t.i, this.b = t.b, We(this, t.m), this.c = t.c, Xe(this, dn(t.a)), this.g = t.g) : t && (n = String(t).match(He)) ? (this.h = !!e, Ge(this, n[1] || "", !0), this.i = Ze(n[2] || ""), this.b = Ze(n[3] || "", !0), We(this, n[4]), this.c = Ze(n[5] || "", !0), Xe(this, n[6] || "", !0), this.g = Ze(n[7] || "")) : (this.h = !!e, this.a = new sn(null, this.h));
        }

        function Ge(t, e, n) {
          t.f = n ? Ze(e, !0) : e, t.f && (t.f = t.f.replace(/:$/, ""));
        }

        function We(t, e) {
          if (e) {
            if (e = Number(e), isNaN(e) || e < 0) throw Error("Bad port number " + e);
            t.m = e;
          } else t.m = null;
        }

        function Xe(t, e, n) {
          var i, r;
          e instanceof sn ? (t.a = e, i = t.a, (r = t.h) && !i.f && (un(i), i.c = null, i.a.forEach(function (t, e) {
            var n = e.toLowerCase();
            e != n && (hn(this, e), fn(this, n, t));
          }, i)), i.f = r) : (n || (e = Qe(e, on)), t.a = new sn(e, t.h));
        }

        function Je(t, e, n) {
          t.a.set(e, n);
        }

        function ze(t, e) {
          return t.a.get(e);
        }

        function Ye(t) {
          return t instanceof Be ? new Be(t) : new Be(t, void 0);
        }

        function $e(t, e) {
          var n = new Be(null, void 0);
          return Ge(n, "https"), t && (n.b = t), e && (n.c = e), n;
        }

        function Ze(t, e) {
          return t ? e ? decodeURI(t.replace(/%25/g, "%2525")) : decodeURIComponent(t) : "";
        }

        function Qe(t, e, n) {
          return h(t) ? (t = encodeURI(t).replace(e, tn), n && (t = t.replace(/%25([0-9a-fA-F]{2})/g, "%$1")), t) : null;
        }

        function tn(t) {
          return "%" + ((t = t.charCodeAt(0)) >> 4 & 15).toString(16) + (15 & t).toString(16);
        }

        Be.prototype.toString = function () {
          var t = [],
              e = this.f;
          e && t.push(Qe(e, en, !0), ":");
          var n = this.b;
          return (n || "file" == e) && (t.push("//"), (e = this.i) && t.push(Qe(e, en, !0), "@"), t.push(encodeURIComponent(String(n)).replace(/%25([0-9a-fA-F]{2})/g, "%$1")), null != (n = this.m) && t.push(":", String(n))), (n = this.c) && (this.b && "/" != n.charAt(0) && t.push("/"), t.push(Qe(n, "/" == n.charAt(0) ? rn : nn, !0))), (n = this.a.toString()) && t.push("?", n), (n = this.g) && t.push("#", Qe(n, an)), t.join("");
        }, Be.prototype.resolve = function (t) {
          var e = new Be(this),
              n = !!t.f;
          n ? Ge(e, t.f) : n = !!t.i, n ? e.i = t.i : n = !!t.b, n ? e.b = t.b : n = null != t.m;
          var i = t.c;
          if (n) We(e, t.m);else if (n = !!t.c) {
            if ("/" != i.charAt(0)) if (this.b && !this.c) i = "/" + i;else {
              var r = e.c.lastIndexOf("/");
              -1 != r && (i = e.c.substr(0, r + 1) + i);
            }
            if (".." == (r = i) || "." == r) i = "";else if (Z(r, "./") || Z(r, "/.")) {
              i = 0 == r.lastIndexOf("/", 0), r = r.split("/");

              for (var o = [], a = 0; a < r.length;) {
                var s = r[a++];
                "." == s ? i && a == r.length && o.push("") : ".." == s ? ((1 < o.length || 1 == o.length && "" != o[0]) && o.pop(), i && a == r.length && o.push("")) : (o.push(s), i = !0);
              }

              i = o.join("/");
            } else i = r;
          }
          return n ? e.c = i : n = "" !== t.a.toString(), n ? Xe(e, dn(t.a)) : n = !!t.g, n && (e.g = t.g), e;
        };
        var en = /[#\/\?@]/g,
            nn = /[#\?:]/g,
            rn = /[#\?]/g,
            on = /[#\?@]/g,
            an = /#/g;

        function sn(t, e) {
          this.b = this.a = null, this.c = t || null, this.f = !!e;
        }

        function un(n) {
          n.a || (n.a = new Ke(), n.b = 0, n.c && function (t, e) {
            if (t) {
              t = t.split("&");

              for (var n = 0; n < t.length; n++) {
                var i = t[n].indexOf("="),
                    r = null;

                if (0 <= i) {
                  var o = t[n].substring(0, i);
                  r = t[n].substring(i + 1);
                } else o = t[n];

                e(o, r ? decodeURIComponent(r.replace(/\+/g, " ")) : "");
              }
            }
          }(n.c, function (t, e) {
            n.add(decodeURIComponent(t.replace(/\+/g, " ")), e);
          }));
        }

        function cn(t) {
          var e = Ve(t);
          if (void 0 === e) throw Error("Keys are undefined");
          var n = new sn(null, void 0);
          t = Ue(t);

          for (var i = 0; i < e.length; i++) {
            var r = e[i],
                o = t[i];
            v(o) ? fn(n, r, o) : n.add(r, o);
          }

          return n;
        }

        function hn(t, e) {
          un(t), e = pn(t, e), qe(t.a.b, e) && (t.c = null, t.b -= t.a.get(e).length, qe((t = t.a).b, e) && (delete t.b[e], t.c--, t.a.length > 2 * t.c && Fe(t)));
        }

        function ln(t, e) {
          return un(t), e = pn(t, e), qe(t.a.b, e);
        }

        function fn(t, e, n) {
          hn(t, e), 0 < n.length && (t.c = null, t.a.set(pn(t, e), q(n)), t.b += n.length);
        }

        function dn(t) {
          var e = new sn();
          return e.c = t.c, t.a && (e.a = new Ke(t.a), e.b = t.b), e;
        }

        function pn(t, e) {
          return e = String(e), t.f && (e = e.toLowerCase()), e;
        }

        (t = sn.prototype).add = function (t, e) {
          un(this), this.c = null, t = pn(this, t);
          var n = this.a.get(t);
          return n || this.a.set(t, n = []), n.push(e), this.b += 1, this;
        }, t.clear = function () {
          this.a = this.c = null, this.b = 0;
        }, t.forEach = function (n, i) {
          un(this), this.a.forEach(function (t, e) {
            x(t, function (t) {
              n.call(i, t, e, this);
            }, this);
          }, this);
        }, t.U = function () {
          un(this);

          for (var t = this.a.S(), e = this.a.U(), n = [], i = 0; i < e.length; i++) for (var r = t[i], o = 0; o < r.length; o++) n.push(e[i]);

          return n;
        }, t.S = function (t) {
          un(this);
          var e = [];
          if (h(t)) ln(this, t) && (e = F(e, this.a.get(pn(this, t))));else {
            t = this.a.S();

            for (var n = 0; n < t.length; n++) e = F(e, t[n]);
          }
          return e;
        }, t.set = function (t, e) {
          return un(this), this.c = null, ln(this, t = pn(this, t)) && (this.b -= this.a.get(t).length), this.a.set(t, [e]), this.b += 1, this;
        }, t.get = function (t, e) {
          return t && 0 < (t = this.S(t)).length ? String(t[0]) : e;
        }, t.toString = function () {
          if (this.c) return this.c;
          if (!this.a) return "";

          for (var t = [], e = this.a.U(), n = 0; n < e.length; n++) {
            var i = e[n],
                r = encodeURIComponent(String(i));
            i = this.S(i);

            for (var o = 0; o < i.length; o++) {
              var a = r;
              "" !== i[o] && (a += "=" + encodeURIComponent(String(i[o]))), t.push(a);
            }
          }

          return this.c = t.join("&");
        };
        var vn = !Gt || 9 <= Number(te);

        function mn(t, e) {
          this.a = t === yn && e || "", this.b = bn;
        }

        function gn(t) {
          return t instanceof mn && t.constructor === mn && t.b === bn ? t.a : (O("expected object of type Const, got '" + t + "'"), "type_error:Const");
        }

        mn.prototype.na = !0, mn.prototype.ma = function () {
          return this.a;
        }, mn.prototype.toString = function () {
          return "Const{" + this.a + "}";
        };
        var bn = {},
            yn = {};

        function wn() {
          this.a = "", this.b = Sn;
        }

        function In(t) {
          return t instanceof wn && t.constructor === wn && t.b === Sn ? t.a : (O("expected object of type TrustedResourceUrl, got '" + t + "' of type " + p(t)), "type_error:TrustedResourceUrl");
        }

        function Tn(t, n) {
          var e,
              i,
              r = gn(t);
          if (!En.test(r)) throw Error("Invalid TrustedResourceUrl format: " + r);
          return t = r.replace(kn, function (t, e) {
            if (!Object.prototype.hasOwnProperty.call(n, e)) throw Error('Found marker, "' + e + '", in format string, "' + r + '", but no valid label mapping found in args: ' + JSON.stringify(n));
            return (t = n[e]) instanceof mn ? gn(t) : encodeURIComponent(String(t));
          }), e = t, (i = new wn()).a = e, i;
        }

        wn.prototype.na = !0, wn.prototype.ma = function () {
          return this.a.toString();
        }, wn.prototype.toString = function () {
          return "TrustedResourceUrl{" + this.a + "}";
        };
        var kn = /%{(\w+)}/g,
            En = /^((https:)?\/\/[0-9a-z.:[\]-]+\/|\/[^/\\]|[^:/\\%]+\/|[^:/\\%]*[?#]|about:blank#)/i,
            Sn = {};

        function An() {
          this.a = "", this.b = Pn;
        }

        function Nn(t) {
          return t instanceof An && t.constructor === An && t.b === Pn ? t.a : (O("expected object of type SafeUrl, got '" + t + "' of type " + p(t)), "type_error:SafeUrl");
        }

        An.prototype.na = !0, An.prototype.ma = function () {
          return this.a.toString();
        }, An.prototype.toString = function () {
          return "SafeUrl{" + this.a + "}";
        };
        var On = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;

        function _n(t) {
          return t instanceof An ? t : (t = "object" == typeof t && t.na ? t.ma() : String(t), On.test(t) || (t = "about:invalid#zClosurez"), Cn(t));
        }

        var Pn = {};

        function Cn(t) {
          var e = new An();
          return e.a = t, e;
        }

        function Rn() {
          this.a = "", this.b = Dn;
        }

        Cn("about:blank"), Rn.prototype.na = !0, Rn.prototype.ma = function () {
          return this.a.toString();
        }, Rn.prototype.toString = function () {
          return "SafeHtml{" + this.a + "}";
        };
        var Dn = {};

        function Ln(t) {
          var e = new Rn();
          return e.a = t, e;
        }

        function xn(t) {
          var e = document;
          return h(t) ? e.getElementById(t) : t;
        }

        function Mn(n, t) {
          it(t, function (t, e) {
            t && "object" == typeof t && t.na && (t = t.ma()), "style" == e ? n.style.cssText = t : "class" == e ? n.className = t : "for" == e ? n.htmlFor = t : jn.hasOwnProperty(e) ? n.setAttribute(jn[e], t) : 0 == e.lastIndexOf("aria-", 0) || 0 == e.lastIndexOf("data-", 0) ? n.setAttribute(e, t) : n[e] = t;
          });
        }

        Ln("<!DOCTYPE html>"), Ln(""), Ln("<br>");
        var jn = {
          cellpadding: "cellPadding",
          cellspacing: "cellSpacing",
          colspan: "colSpan",
          frameborder: "frameBorder",
          height: "height",
          maxlength: "maxLength",
          nonce: "nonce",
          role: "role",
          rowspan: "rowSpan",
          type: "type",
          usemap: "useMap",
          valign: "vAlign",
          width: "width"
        };

        function Un(t, e, n) {
          var i = arguments,
              r = document,
              o = String(i[0]),
              a = i[1];

          if (!vn && a && (a.name || a.type)) {
            if (o = ["<", o], a.name && o.push(' name="', lt(a.name), '"'), a.type) {
              o.push(' type="', lt(a.type), '"');
              var s = {};
              ct(s, a), delete s.type, a = s;
            }

            o.push(">"), o = o.join("");
          }

          return o = r.createElement(o), a && (h(a) ? o.className = a : v(a) ? o.className = a.join(" ") : Mn(o, a)), 2 < i.length && function (e, n, t) {
            function i(t) {
              t && n.appendChild(h(t) ? e.createTextNode(t) : t);
            }

            for (var r = 2; r < t.length; r++) {
              var o = t[r];
              !m(o) || b(o) && 0 < o.nodeType ? i(o) : x(Vn(o) ? q(o) : o, i);
            }
          }(r, o, i), o;
        }

        function Vn(t) {
          if (t && "number" == typeof t.length) {
            if (b(t)) return "function" == typeof t.item || "string" == typeof t.item;
            if (g(t)) return "function" == typeof t.item;
          }

          return !1;
        }

        function Kn(t) {
          var e = [];
          return function t(e, n, i) {
            if (null == n) i.push("null");else {
              if ("object" == typeof n) {
                if (v(n)) {
                  var r = n;
                  n = r.length, i.push("[");

                  for (var o = "", a = 0; a < n; a++) i.push(o), t(e, r[a], i), o = ",";

                  return void i.push("]");
                }

                if (!(n instanceof String || n instanceof Number || n instanceof Boolean)) {
                  for (r in i.push("{"), o = "", n) Object.prototype.hasOwnProperty.call(n, r) && "function" != typeof (a = n[r]) && (i.push(o), Bn(r, i), i.push(":"), t(e, a, i), o = ",");

                  return void i.push("}");
                }

                n = n.valueOf();
              }

              switch (typeof n) {
                case "string":
                  Bn(n, i);
                  break;

                case "number":
                  i.push(isFinite(n) && !isNaN(n) ? String(n) : "null");
                  break;

                case "boolean":
                  i.push(String(n));
                  break;

                case "function":
                  i.push("null");
                  break;

                default:
                  throw Error("Unknown type: " + typeof n);
              }
            }
          }(new Fn(), t, e), e.join("");
        }

        function Fn() {}

        var qn = {
          '"': '\\"',
          "\\": "\\\\",
          "/": "\\/",
          "\b": "\\b",
          "\f": "\\f",
          "\n": "\\n",
          "\r": "\\r",
          "\t": "\\t",
          "\v": "\\u000b"
        },
            Hn = /\uffff/.test("￿") ? /[\\"\x00-\x1f\x7f-\uffff]/g : /[\\"\x00-\x1f\x7f-\xff]/g;

        function Bn(t, e) {
          e.push('"', t.replace(Hn, function (t) {
            var e = qn[t];
            return e || (e = "\\u" + (65536 | t.charCodeAt(0)).toString(16).substr(1), qn[t] = e), e;
          }), '"');
        }

        function Gn() {
          var t = hi();
          return Gt && !!te && 11 == te || /Edge\/\d+/.test(t);
        }

        function Wn() {
          return l.window && l.window.location.href || self && self.location && self.location.href || "";
        }

        function Xn(t, e) {
          e = e || l.window;
          var n = "about:blank";
          t && (n = Nn(_n(t)).toString()), e.location.href = n;
        }

        function Jn(t) {
          return !!((t = (t || hi()).toLowerCase()).match(/android/) || t.match(/webos/) || t.match(/iphone|ipad|ipod/) || t.match(/blackberry/) || t.match(/windows phone/) || t.match(/iemobile/));
        }

        function zn(t) {
          t = t || l.window;

          try {
            t.close();
          } catch (t) {}
        }

        function Yn(t, e, n) {
          var i = Math.floor(1e9 * Math.random()).toString();
          e = e || 500, n = n || 600;
          var r = (window.screen.availHeight - n) / 2,
              o = (window.screen.availWidth - e) / 2;

          for (s in e = {
            width: e,
            height: n,
            top: 0 < r ? r : 0,
            left: 0 < o ? o : 0,
            location: !0,
            resizable: !0,
            statusbar: !0,
            toolbar: !1
          }, n = hi().toLowerCase(), i && (e.target = i, Z(n, "crios/") && (e.target = "_blank")), si(hi()) == oi && (t = t || "http://localhost", e.scrollbars = !0), n = t || "", (t = e) || (t = {}), i = window, e = n instanceof An ? n : _n(void 0 !== n.href ? n.href : String(n)), n = t.target || n.target, r = [], t) switch (s) {
            case "width":
            case "height":
            case "top":
            case "left":
              r.push(s + "=" + t[s]);
              break;

            case "target":
            case "noopener":
            case "noreferrer":
              break;

            default:
              r.push(s + "=" + (t[s] ? 1 : 0));
          }

          var a,
              s = r.join(",");
          if ((nt("iPhone") && !nt("iPod") && !nt("iPad") || nt("iPad") || nt("iPod")) && i.navigator && i.navigator.standalone && n && "_self" != n ? (s = i.document.createElement("A"), e instanceof An || e instanceof An || (e = "object" == typeof e && e.na ? e.ma() : String(e), On.test(e) || (e = "about:invalid#zClosurez"), e = Cn(e)), s.href = Nn(e), s.setAttribute("target", n), t.noreferrer && s.setAttribute("rel", "noreferrer"), (t = document.createEvent("MouseEvent")).initMouseEvent("click", !0, !0, i, 1), s.dispatchEvent(t), s = {}) : t.noreferrer ? (s = i.open("", n, s), t = Nn(e).toString(), s && (Xt && Z(t, ";") && (t = "'" + t.replace(/'/g, "%27") + "'"), s.opener = null, t = Ln('<meta name="referrer" content="no-referrer"><meta http-equiv="refresh" content="0; url=' + lt(t) + '">'), s.document.write((a = t) instanceof Rn && a.constructor === Rn && a.b === Dn ? a.a : (O("expected object of type SafeHtml, got '" + a + "' of type " + p(a)), "type_error:SafeHtml")), s.document.close())) : (s = i.open(Nn(e).toString(), n, s)) && t.noopener && (s.opener = null), s) try {
            s.focus();
          } catch (t) {}
          return s;
        }

        var $n = /^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$/,
            Zn = /^[^@]+@[^@]+$/;

        function Qn() {
          var e = null;
          return new gt(function (t) {
            "complete" == l.document.readyState ? t() : (e = function e() {
              t();
            }, Te(window, "load", e));
          }).s(function (t) {
            throw ke(window, "load", e), t;
          });
        }

        function ti(t) {
          return t = t || hi(), !("file:" !== vi() || !t.toLowerCase().match(/iphone|ipad|ipod|android/));
        }

        function ei() {
          var t = l.window;

          try {
            return !(!t || t == t.top);
          } catch (t) {
            return !1;
          }
        }

        function ni() {
          return void 0 !== l.WorkerGlobalScope && "function" == typeof l.importScripts;
        }

        function ii() {
          return Wh.INTERNAL.hasOwnProperty("reactNative") ? "ReactNative" : Wh.INTERNAL.hasOwnProperty("node") ? "Node" : ni() ? "Worker" : "Browser";
        }

        function ri() {
          var t = ii();
          return "ReactNative" === t || "Node" === t;
        }

        var oi = "Firefox",
            ai = "Chrome";

        function si(t) {
          var e = t.toLowerCase();
          return Z(e, "opera/") || Z(e, "opr/") || Z(e, "opios/") ? "Opera" : Z(e, "iemobile") ? "IEMobile" : Z(e, "msie") || Z(e, "trident/") ? "IE" : Z(e, "edge/") ? "Edge" : Z(e, "firefox/") ? oi : Z(e, "silk/") ? "Silk" : Z(e, "blackberry") ? "Blackberry" : Z(e, "webos") ? "Webos" : !Z(e, "safari/") || Z(e, "chrome/") || Z(e, "crios/") || Z(e, "android") ? !Z(e, "chrome/") && !Z(e, "crios/") || Z(e, "edge/") ? Z(e, "android") ? "Android" : (t = t.match(/([a-zA-Z\d\.]+)\/[a-zA-Z\d\.]*$/)) && 2 == t.length ? t[1] : "Other" : ai : "Safari";
        }

        var ui = {
          Sc: "FirebaseCore-web",
          Uc: "FirebaseUI-web"
        };

        function ci(t, e) {
          e = e || [];
          var n,
              i = [],
              r = {};

          for (n in ui) r[ui[n]] = !0;

          for (n = 0; n < e.length; n++) void 0 !== r[e[n]] && (delete r[e[n]], i.push(e[n]));

          return i.sort(), (e = i).length || (e = ["FirebaseCore-web"]), "Browser" === (i = ii()) ? i = si(r = hi()) : "Worker" === i && (i = si(r = hi()) + "-" + i), i + "/JsCore/" + t + "/" + e.join(",");
        }

        function hi() {
          return l.navigator && l.navigator.userAgent || "";
        }

        function li(t, e) {
          t = t.split("."), e = e || l;

          for (var n = 0; n < t.length && "object" == typeof e && null != e; n++) e = e[t[n]];

          return n != t.length && (e = void 0), e;
        }

        function fi() {
          try {
            var t = l.localStorage,
                e = wi();
            if (t) return t.setItem(e, "1"), t.removeItem(e), !Gn() || !!l.indexedDB;
          } catch (t) {
            return ni() && !!l.indexedDB;
          }

          return !1;
        }

        function di() {
          return (pi() || "chrome-extension:" === vi() || ti()) && !ri() && fi() && !ni();
        }

        function pi() {
          return "http:" === vi() || "https:" === vi();
        }

        function vi() {
          return l.location && l.location.protocol || null;
        }

        function mi(t) {
          return !Jn(t = t || hi()) && si(t) != oi;
        }

        function gi(t) {
          return void 0 === t ? null : Kn(t);
        }

        function bi(t) {
          var e,
              n = {};

          for (e in t) t.hasOwnProperty(e) && null !== t[e] && void 0 !== t[e] && (n[e] = t[e]);

          return n;
        }

        function yi(t) {
          if (null !== t) return JSON.parse(t);
        }

        function wi(t) {
          return t || Math.floor(1e9 * Math.random()).toString();
        }

        function Ii(t) {
          return "Safari" != si(t = t || hi()) && !t.toLowerCase().match(/iphone|ipad|ipod/);
        }

        function Ti() {
          var t = l.___jsl;
          if (t && t.H) for (var e in t.H) if (t.H[e].r = t.H[e].r || [], t.H[e].L = t.H[e].L || [], t.H[e].r = t.H[e].L.concat(), t.CP) for (var n = 0; n < t.CP.length; n++) t.CP[n] = null;
        }

        function ki(t, e) {
          if (e < t) throw Error("Short delay should be less than long delay!");
          this.a = t, this.c = e, t = hi(), e = ii(), this.b = Jn(t) || "ReactNative" === e;
        }

        function Ei() {
          var t = l.document;
          return !t || void 0 === t.visibilityState || "visible" == t.visibilityState;
        }

        function Si(t) {
          try {
            var e = new Date(parseInt(t, 10));
            if (!isNaN(e.getTime()) && !/[^0-9]/.test(t)) return e.toUTCString();
          } catch (t) {}

          return null;
        }

        function Ai() {
          return !(!li("fireauth.oauthhelper", l) && !li("fireauth.iframe", l));
        }

        ki.prototype.get = function () {
          var t = l.navigator;
          return !t || "boolean" != typeof t.onLine || !pi() && "chrome-extension:" !== vi() && void 0 === t.connection || t.onLine ? this.b ? this.c : this.a : Math.min(5e3, this.a);
        };

        var Ni,
            Oi = {};

        function _i(t) {
          Oi[t] || (Oi[t] = !0, "undefined" != typeof console && "function" == typeof console.warn && console.warn(t));
        }

        try {
          var Pi = {};
          Object.defineProperty(Pi, "abcd", {
            configurable: !0,
            enumerable: !0,
            value: 1
          }), Object.defineProperty(Pi, "abcd", {
            configurable: !0,
            enumerable: !0,
            value: 2
          }), Ni = 2 == Pi.abcd;
        } catch (t) {
          Ni = !1;
        }

        function Ci(t, e, n) {
          Ni ? Object.defineProperty(t, e, {
            configurable: !0,
            enumerable: !0,
            value: n
          }) : t[e] = n;
        }

        function Ri(t, e) {
          if (e) for (var n in e) e.hasOwnProperty(n) && Ci(t, n, e[n]);
        }

        function Di(t) {
          var e = {};
          return Ri(e, t), e;
        }

        function Li(t) {
          var e = t;
          if ("object" == typeof t && null != t) for (var n in e = "length" in t ? [] : {}, t) Ci(e, n, Li(t[n]));
          return e;
        }

        function xi(t) {
          var e = {},
              n = t[ji],
              i = t[Ui];
          if (!(t = t[Vi]) || t != Mi && !n) throw Error("Invalid provider user info!");
          e[Fi] = i || null, e[Ki] = n || null, Ci(this, Hi, t), Ci(this, qi, Li(e));
        }

        var Mi = "EMAIL_SIGNIN",
            ji = "email",
            Ui = "newEmail",
            Vi = "requestType",
            Ki = "email",
            Fi = "fromEmail",
            qi = "data",
            Hi = "operation";

        function Bi(t, e) {
          this.code = Wi + t, this.message = e || Xi[t] || "";
        }

        function Gi(t) {
          var e = t && t.code;
          return e ? new Bi(e.substring(Wi.length), t.message) : null;
        }

        E(Bi, Error), Bi.prototype.w = function () {
          return {
            code: this.code,
            message: this.message
          };
        }, Bi.prototype.toJSON = function () {
          return this.w();
        };
        var Wi = "auth/",
            Xi = {
          "admin-restricted-operation": "This operation is restricted to administrators only.",
          "argument-error": "",
          "app-not-authorized": "This app, identified by the domain where it's hosted, is not authorized to use Firebase Authentication with the provided API key. Review your key configuration in the Google API console.",
          "app-not-installed": "The requested mobile application corresponding to the identifier (Android package name or iOS bundle ID) provided is not installed on this device.",
          "captcha-check-failed": "The reCAPTCHA response token provided is either invalid, expired, already used or the domain associated with it does not match the list of whitelisted domains.",
          "code-expired": "The SMS code has expired. Please re-send the verification code to try again.",
          "cordova-not-ready": "Cordova framework is not ready.",
          "cors-unsupported": "This browser is not supported.",
          "credential-already-in-use": "This credential is already associated with a different user account.",
          "custom-token-mismatch": "The custom token corresponds to a different audience.",
          "requires-recent-login": "This operation is sensitive and requires recent authentication. Log in again before retrying this request.",
          "dynamic-link-not-activated": "Please activate Dynamic Links in the Firebase Console and agree to the terms and conditions.",
          "email-already-in-use": "The email address is already in use by another account.",
          "expired-action-code": "The action code has expired. ",
          "cancelled-popup-request": "This operation has been cancelled due to another conflicting popup being opened.",
          "internal-error": "An internal error has occurred.",
          "invalid-app-credential": "The phone verification request contains an invalid application verifier. The reCAPTCHA token response is either invalid or expired.",
          "invalid-app-id": "The mobile app identifier is not registed for the current project.",
          "invalid-user-token": "This user's credential isn't valid for this project. This can happen if the user's token has been tampered with, or if the user isn't for the project associated with this API key.",
          "invalid-auth-event": "An internal error has occurred.",
          "invalid-verification-code": "The SMS verification code used to create the phone auth credential is invalid. Please resend the verification code sms and be sure use the verification code provided by the user.",
          "invalid-continue-uri": "The continue URL provided in the request is invalid.",
          "invalid-cordova-configuration": "The following Cordova plugins must be installed to enable OAuth sign-in: cordova-plugin-buildinfo, cordova-universal-links-plugin, cordova-plugin-browsertab, cordova-plugin-inappbrowser and cordova-plugin-customurlscheme.",
          "invalid-custom-token": "The custom token format is incorrect. Please check the documentation.",
          "invalid-dynamic-link-domain": "The provided dynamic link domain is not configured or authorized for the current project.",
          "invalid-email": "The email address is badly formatted.",
          "invalid-api-key": "Your API key is invalid, please check you have copied it correctly.",
          "invalid-cert-hash": "The SHA-1 certificate hash provided is invalid.",
          "invalid-credential": "The supplied auth credential is malformed or has expired.",
          "invalid-message-payload": "The email template corresponding to this action contains invalid characters in its message. Please fix by going to the Auth email templates section in the Firebase Console.",
          "invalid-oauth-provider": "EmailAuthProvider is not supported for this operation. This operation only supports OAuth providers.",
          "invalid-oauth-client-id": "The OAuth client ID provided is either invalid or does not match the specified API key.",
          "unauthorized-domain": "This domain is not authorized for OAuth operations for your Firebase project. Edit the list of authorized domains from the Firebase console.",
          "invalid-action-code": "The action code is invalid. This can happen if the code is malformed, expired, or has already been used.",
          "wrong-password": "The password is invalid or the user does not have a password.",
          "invalid-persistence-type": "The specified persistence type is invalid. It can only be local, session or none.",
          "invalid-phone-number": "The format of the phone number provided is incorrect. Please enter the phone number in a format that can be parsed into E.164 format. E.164 phone numbers are written in the format [+][country code][subscriber number including area code].",
          "invalid-provider-id": "The specified provider ID is invalid.",
          "invalid-recipient-email": "The email corresponding to this action failed to send as the provided recipient email address is invalid.",
          "invalid-sender": "The email template corresponding to this action contains an invalid sender email or name. Please fix by going to the Auth email templates section in the Firebase Console.",
          "invalid-verification-id": "The verification ID used to create the phone auth credential is invalid.",
          "missing-android-pkg-name": "An Android Package Name must be provided if the Android App is required to be installed.",
          "auth-domain-config-required": "Be sure to include authDomain when calling firebase.initializeApp(), by following the instructions in the Firebase console.",
          "missing-app-credential": "The phone verification request is missing an application verifier assertion. A reCAPTCHA response token needs to be provided.",
          "missing-verification-code": "The phone auth credential was created with an empty SMS verification code.",
          "missing-continue-uri": "A continue URL must be provided in the request.",
          "missing-iframe-start": "An internal error has occurred.",
          "missing-ios-bundle-id": "An iOS Bundle ID must be provided if an App Store ID is provided.",
          "missing-or-invalid-nonce": "The OIDC ID token requires a valid unhashed nonce.",
          "missing-phone-number": "To send verification codes, provide a phone number for the recipient.",
          "missing-verification-id": "The phone auth credential was created with an empty verification ID.",
          "app-deleted": "This instance of FirebaseApp has been deleted.",
          "account-exists-with-different-credential": "An account already exists with the same email address but different sign-in credentials. Sign in using a provider associated with this email address.",
          "network-request-failed": "A network error (such as timeout, interrupted connection or unreachable host) has occurred.",
          "no-auth-event": "An internal error has occurred.",
          "no-such-provider": "User was not linked to an account with the given provider.",
          "null-user": "A null user object was provided as the argument for an operation which requires a non-null user object.",
          "operation-not-allowed": "The given sign-in provider is disabled for this Firebase project. Enable it in the Firebase console, under the sign-in method tab of the Auth section.",
          "operation-not-supported-in-this-environment": 'This operation is not supported in the environment this application is running on. "location.protocol" must be http, https or chrome-extension and web storage must be enabled.',
          "popup-blocked": "Unable to establish a connection with the popup. It may have been blocked by the browser.",
          "popup-closed-by-user": "The popup has been closed by the user before finalizing the operation.",
          "provider-already-linked": "User can only be linked to one identity for the given provider.",
          "quota-exceeded": "The project's quota for this operation has been exceeded.",
          "redirect-cancelled-by-user": "The redirect operation has been cancelled by the user before finalizing.",
          "redirect-operation-pending": "A redirect sign-in operation is already pending.",
          "rejected-credential": "The request contains malformed or mismatching credentials.",
          timeout: "The operation has timed out.",
          "user-token-expired": "The user's credential is no longer valid. The user must sign in again.",
          "too-many-requests": "We have blocked all requests from this device due to unusual activity. Try again later.",
          "unauthorized-continue-uri": "The domain of the continue URL is not whitelisted.  Please whitelist the domain in the Firebase console.",
          "unsupported-persistence-type": "The current environment does not support the specified persistence type.",
          "user-cancelled": "User did not grant your application the permissions it requested.",
          "user-not-found": "There is no user record corresponding to this identifier. The user may have been deleted.",
          "user-disabled": "The user account has been disabled by an administrator.",
          "user-mismatch": "The supplied credentials do not correspond to the previously signed in user.",
          "user-signed-out": "",
          "weak-password": "The password must be 6 characters long or more.",
          "web-storage-unsupported": "This browser is not supported or 3rd party cookies and data may be disabled."
        };

        function Ji(t) {
          var e = t[Qi];
          if (void 0 === e) throw new Bi("missing-continue-uri");
          if ("string" != typeof e || "string" == typeof e && !e.length) throw new Bi("invalid-continue-uri");
          this.h = e, this.b = this.a = null, this.g = !1;
          var n = t[zi];

          if (n && "object" == typeof n) {
            e = n[nr];
            var i = n[tr];

            if (n = n[er], "string" == typeof e && e.length) {
              if (this.a = e, void 0 !== i && "boolean" != typeof i) throw new Bi("argument-error", tr + " property must be a boolean when specified.");
              if (this.g = !!i, void 0 !== n && ("string" != typeof n || "string" == typeof n && !n.length)) throw new Bi("argument-error", er + " property must be a non empty string when specified.");
              this.b = n || null;
            } else {
              if (void 0 !== e) throw new Bi("argument-error", nr + " property must be a non empty string when specified.");
              if (void 0 !== i || void 0 !== n) throw new Bi("missing-android-pkg-name");
            }
          } else if (void 0 !== n) throw new Bi("argument-error", zi + " property must be a non null object when specified.");

          if (this.f = null, (e = t[Zi]) && "object" == typeof e) {
            if ("string" == typeof (e = e[ir]) && e.length) this.f = e;else if (void 0 !== e) throw new Bi("argument-error", ir + " property must be a non empty string when specified.");
          } else if (void 0 !== e) throw new Bi("argument-error", Zi + " property must be a non null object when specified.");

          if (void 0 !== (e = t[$i]) && "boolean" != typeof e) throw new Bi("argument-error", $i + " property must be a boolean when specified.");
          if (this.c = !!e, void 0 !== (t = t[Yi]) && ("string" != typeof t || "string" == typeof t && !t.length)) throw new Bi("argument-error", Yi + " property must be a non empty string when specified.");
          this.i = t || null;
        }

        var zi = "android",
            Yi = "dynamicLinkDomain",
            $i = "handleCodeInApp",
            Zi = "iOS",
            Qi = "url",
            tr = "installApp",
            er = "minimumVersion",
            nr = "packageName",
            ir = "bundleId";

        function rr(t) {
          var e = {};

          for (var n in e.continueUrl = t.h, e.canHandleCodeInApp = t.c, (e.androidPackageName = t.a) && (e.androidMinimumVersion = t.b, e.androidInstallApp = t.g), e.iOSBundleId = t.f, e.dynamicLinkDomain = t.i, e) null === e[n] && delete e[n];

          return e;
        }

        var or = null,
            ar = null;

        function sr(t) {
          var e = "";
          return function (i, t) {
            function e(t) {
              for (; r < i.length;) {
                var e = i.charAt(r++),
                    n = ar[e];
                if (null != n) return n;
                if (!/^[\s\xa0]*$/.test(e)) throw Error("Unknown base64 encoding at char: " + e);
              }

              return t;
            }

            !function () {
              if (!or) {
                or = {}, ar = {};

                for (var t = 0; t < 65; t++) or[t] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".charAt(t), 62 <= (ar[or[t]] = t) && (ar["ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_.".charAt(t)] = t);
              }
            }();

            for (var r = 0;;) {
              var n = e(-1),
                  o = e(0),
                  a = e(64),
                  s = e(64);
              if (64 === s && -1 === n) break;
              t(n << 2 | o >> 4), 64 != a && (t(o << 4 & 240 | a >> 2), 64 != s && t(a << 6 & 192 | s));
            }
          }(t, function (t) {
            e += String.fromCharCode(t);
          }), e;
        }

        function ur(t) {
          this.c = t.sub, this.a = t.provider_id || t.firebase && t.firebase.sign_in_provider || null, this.b = !!t.is_anonymous || "anonymous" == this.a;
        }

        function cr(t) {
          return (t = hr(t)) && t.sub && t.iss && t.aud && t.exp ? new ur(t) : null;
        }

        function hr(t) {
          if (!t) return null;
          if (3 != (t = t.split(".")).length) return null;

          for (var e = (4 - (t = t[1]).length % 4) % 4, n = 0; n < e; n++) t += ".";

          try {
            return JSON.parse(sr(t));
          } catch (t) {}

          return null;
        }

        ur.prototype.f = function () {
          return this.b;
        };

        var lr,
            fr = {
          Yc: {
            ab: "https://www.googleapis.com/identitytoolkit/v3/relyingparty/",
            ib: "https://securetoken.googleapis.com/v1/token",
            id: "p"
          },
          $c: {
            ab: "https://staging-www.sandbox.googleapis.com/identitytoolkit/v3/relyingparty/",
            ib: "https://staging-securetoken.sandbox.googleapis.com/v1/token",
            id: "s"
          },
          ad: {
            ab: "https://www-googleapis-test.sandbox.google.com/identitytoolkit/v3/relyingparty/",
            ib: "https://test-securetoken.sandbox.googleapis.com/v1/token",
            id: "t"
          }
        };

        function dr(t) {
          for (var e in fr) if (fr[e].id === t) return {
            firebaseEndpoint: (t = fr[e]).ab,
            secureTokenEndpoint: t.ib
          };

          return null;
        }

        lr = dr("__EID__") ? "__EID__" : void 0;
        var pr = "oauth_consumer_key oauth_nonce oauth_signature oauth_signature_method oauth_timestamp oauth_token oauth_version".split(" "),
            vr = ["client_id", "response_type", "scope", "redirect_uri", "state"],
            mr = {
          Tc: {
            Oa: "locale",
            Ba: 500,
            Aa: 600,
            Pa: "facebook.com",
            hb: vr
          },
          Vc: {
            Oa: null,
            Ba: 500,
            Aa: 620,
            Pa: "github.com",
            hb: vr
          },
          Wc: {
            Oa: "hl",
            Ba: 515,
            Aa: 680,
            Pa: "google.com",
            hb: vr
          },
          bd: {
            Oa: "lang",
            Ba: 485,
            Aa: 705,
            Pa: "twitter.com",
            hb: pr
          }
        };

        function gr(t) {
          for (var e in mr) if (mr[e].Pa == t) return mr[e];

          return null;
        }

        function br(t) {
          var e = {};
          e["facebook.com"] = kr, e["google.com"] = Sr, e["github.com"] = Er, e["twitter.com"] = Ar;
          var n = t && t[wr];

          try {
            if (n) return e[n] ? new e[n](t) : new Tr(t);
            if (void 0 !== t[yr]) return new Ir(t);
          } catch (t) {}

          return null;
        }

        var yr = "idToken",
            wr = "providerId";

        function Ir(t) {
          var e = t[wr];

          if (!e && t[yr]) {
            var n = cr(t[yr]);
            n && n.a && (e = n.a);
          }

          if (!e) throw Error("Invalid additional user info!");
          "anonymous" != e && "custom" != e || (e = null), n = !1, void 0 !== t.isNewUser ? n = !!t.isNewUser : "identitytoolkit#SignupNewUserResponse" === t.kind && (n = !0), Ci(this, "providerId", e), Ci(this, "isNewUser", n);
        }

        function Tr(t) {
          Ir.call(this, t), Ci(this, "profile", Li((t = yi(t.rawUserInfo || "{}")) || {}));
        }

        function kr(t) {
          if (Tr.call(this, t), "facebook.com" != this.providerId) throw Error("Invalid provider ID!");
        }

        function Er(t) {
          if (Tr.call(this, t), "github.com" != this.providerId) throw Error("Invalid provider ID!");
          Ci(this, "username", this.profile && this.profile.login || null);
        }

        function Sr(t) {
          if (Tr.call(this, t), "google.com" != this.providerId) throw Error("Invalid provider ID!");
        }

        function Ar(t) {
          if (Tr.call(this, t), "twitter.com" != this.providerId) throw Error("Invalid provider ID!");
          Ci(this, "username", t.screenName || null);
        }

        function Nr(t) {
          this.a = Ye(t);
        }

        function Or(t) {
          var e = Ye(t),
              n = ze(e, "link"),
              i = ze(Ye(n), "link");
          return ze(Ye(e = ze(e, "deep_link_id")), "link") || e || i || n || t;
        }

        function _r() {}

        function Pr(t, n) {
          return t.then(function (t) {
            if (t[ya]) {
              var e = cr(t[ya]);
              if (!e || n != e.c) throw new Bi("user-mismatch");
              return t;
            }

            throw new Bi("user-mismatch");
          }).s(function (t) {
            throw t && t.code && t.code == Wi + "user-not-found" ? new Bi("user-mismatch") : t;
          });
        }

        function Cr(t, e) {
          if (!e) throw new Bi("internal-error", "failed to construct a credential");
          this.a = e, Ci(this, "providerId", t), Ci(this, "signInMethod", t);
        }

        function Rr(t) {
          return {
            pendingToken: t.a,
            requestUri: "http://localhost"
          };
        }

        function Dr(t) {
          if (t && t.providerId && t.signInMethod && 0 == t.providerId.indexOf("saml.") && t.pendingToken) try {
            return new Cr(t.providerId, t.pendingToken);
          } catch (t) {}
          return null;
        }

        function Lr(t, e, n) {
          if (this.a = null, e.idToken || e.accessToken) e.idToken && Ci(this, "idToken", e.idToken), e.accessToken && Ci(this, "accessToken", e.accessToken), e.nonce && !e.pendingToken && Ci(this, "nonce", e.nonce), e.pendingToken && (this.a = e.pendingToken);else {
            if (!e.oauthToken || !e.oauthTokenSecret) throw new Bi("internal-error", "failed to construct a credential");
            Ci(this, "accessToken", e.oauthToken), Ci(this, "secret", e.oauthTokenSecret);
          }
          Ci(this, "providerId", t), Ci(this, "signInMethod", n);
        }

        function xr(t) {
          var e = {};
          return t.idToken && (e.id_token = t.idToken), t.accessToken && (e.access_token = t.accessToken), t.secret && (e.oauth_token_secret = t.secret), e.providerId = t.providerId, t.nonce && !t.a && (e.nonce = t.nonce), e = {
            postBody: cn(e).toString(),
            requestUri: "http://localhost"
          }, t.a && (delete e.postBody, e.pendingToken = t.a), e;
        }

        function Mr(t) {
          if (t && t.providerId && t.signInMethod) {
            var e = {
              idToken: t.oauthIdToken,
              accessToken: t.oauthTokenSecret ? null : t.oauthAccessToken,
              oauthTokenSecret: t.oauthTokenSecret,
              oauthToken: t.oauthTokenSecret && t.oauthAccessToken,
              nonce: t.nonce,
              pendingToken: t.pendingToken
            };

            try {
              return new Lr(t.providerId, e, t.signInMethod);
            } catch (t) {}
          }

          return null;
        }

        function jr(t, e) {
          this.Dc = e || [], Ri(this, {
            providerId: t,
            isOAuthProvider: !0
          }), this.zb = {}, this.cb = (gr(t) || {}).Oa || null, this.$a = null;
        }

        function Ur(t) {
          if ("string" != typeof t || 0 != t.indexOf("saml.")) throw new Bi("argument-error", 'SAML provider IDs must be prefixed with "saml."');
          jr.call(this, t, []);
        }

        function Vr(t) {
          jr.call(this, t, vr), this.a = [];
        }

        function Kr() {
          Vr.call(this, "facebook.com");
        }

        function Fr(t) {
          if (!t) throw new Bi("argument-error", "credential failed: expected 1 argument (the OAuth access token).");
          var e = t;
          return b(t) && (e = t.accessToken), new Kr().credential({
            accessToken: e
          });
        }

        function qr() {
          Vr.call(this, "github.com");
        }

        function Hr(t) {
          if (!t) throw new Bi("argument-error", "credential failed: expected 1 argument (the OAuth access token).");
          var e = t;
          return b(t) && (e = t.accessToken), new qr().credential({
            accessToken: e
          });
        }

        function Br() {
          Vr.call(this, "google.com"), this.ua("profile");
        }

        function Gr(t, e) {
          var n = t;
          return b(t) && (n = t.idToken, e = t.accessToken), new Br().credential({
            idToken: n,
            accessToken: e
          });
        }

        function Wr() {
          jr.call(this, "twitter.com", pr);
        }

        function Xr(t, e) {
          var n = t;
          if (b(n) || (n = {
            oauthToken: t,
            oauthTokenSecret: e
          }), !n.oauthToken || !n.oauthTokenSecret) throw new Bi("argument-error", "credential failed: expected 2 arguments (the OAuth access token and secret).");
          return new Lr("twitter.com", n, "twitter.com");
        }

        function Jr(t, e, n) {
          this.a = t, this.c = e, Ci(this, "providerId", "password"), Ci(this, "signInMethod", n === Yr.EMAIL_LINK_SIGN_IN_METHOD ? Yr.EMAIL_LINK_SIGN_IN_METHOD : Yr.EMAIL_PASSWORD_SIGN_IN_METHOD);
        }

        function zr(t) {
          return t && t.email && t.password ? new Jr(t.email, t.password, t.signInMethod) : null;
        }

        function Yr() {
          Ri(this, {
            providerId: "password",
            isOAuthProvider: !1
          });
        }

        function $r(t, e) {
          if (!(e = Zr(e))) throw new Bi("argument-error", "Invalid email link!");
          return new Jr(t, e, Yr.EMAIL_LINK_SIGN_IN_METHOD);
        }

        function Zr(t) {
          var e = ze((t = new Nr(t = Or(t))).a, "oobCode") || null;
          return "signIn" === (ze(t.a, "mode") || null) && e ? e : null;
        }

        function Qr(t) {
          if (!(t.Ta && t.Sa || t.Fa && t.$)) throw new Bi("internal-error");
          this.a = t, Ci(this, "providerId", "phone"), Ci(this, "signInMethod", "phone");
        }

        function to(e) {
          if (e && "phone" === e.providerId && (e.verificationId && e.verificationCode || e.temporaryProof && e.phoneNumber)) {
            var n = {};
            return x(["verificationId", "verificationCode", "temporaryProof", "phoneNumber"], function (t) {
              e[t] && (n[t] = e[t]);
            }), new Qr(n);
          }

          return null;
        }

        function eo(t) {
          return t.a.Fa && t.a.$ ? {
            temporaryProof: t.a.Fa,
            phoneNumber: t.a.$
          } : {
            sessionInfo: t.a.Ta,
            code: t.a.Sa
          };
        }

        function no(t) {
          try {
            this.a = t || Wh.auth();
          } catch (t) {
            throw new Bi("argument-error", "Either an instance of firebase.auth.Auth must be passed as an argument to the firebase.auth.PhoneAuthProvider constructor, or the default firebase App instance must be initialized via firebase.initializeApp().");
          }

          Ri(this, {
            providerId: "phone",
            isOAuthProvider: !1
          });
        }

        function io(t, e) {
          if (!t) throw new Bi("missing-verification-id");
          if (!e) throw new Bi("missing-verification-code");
          return new Qr({
            Ta: t,
            Sa: e
          });
        }

        function ro(t) {
          if (t.temporaryProof && t.phoneNumber) return new Qr({
            Fa: t.temporaryProof,
            $: t.phoneNumber
          });
          var e = t && t.providerId;
          if (!e || "password" === e) return null;
          var n = t && t.oauthAccessToken,
              i = t && t.oauthTokenSecret,
              r = t && t.nonce,
              o = t && t.oauthIdToken,
              a = t && t.pendingToken;

          try {
            switch (e) {
              case "google.com":
                return Gr(o, n);

              case "facebook.com":
                return Fr(n);

              case "github.com":
                return Hr(n);

              case "twitter.com":
                return Xr(n, i);

              default:
                return n || i || o || a ? a ? 0 == e.indexOf("saml.") ? new Cr(e, a) : new Lr(e, {
                  pendingToken: a,
                  idToken: t.oauthIdToken,
                  accessToken: t.oauthAccessToken
                }, e) : new Vr(e).credential({
                  idToken: o,
                  accessToken: n,
                  rawNonce: r
                }) : null;
            }
          } catch (t) {
            return null;
          }
        }

        function oo(t) {
          if (!t.isOAuthProvider) throw new Bi("invalid-oauth-provider");
        }

        function ao(t, e, n, i, r, o) {
          if (this.c = t, this.b = e || null, this.g = n || null, this.f = i || null, this.h = o || null, this.a = r || null, !this.g && !this.a) throw new Bi("invalid-auth-event");
          if (this.g && this.a) throw new Bi("invalid-auth-event");
          if (this.g && !this.f) throw new Bi("invalid-auth-event");
        }

        function so(t) {
          return (t = t || {}).type ? new ao(t.type, t.eventId, t.urlResponse, t.sessionId, t.error && Gi(t.error), t.postBody) : null;
        }

        function uo() {
          this.b = null, this.a = [];
        }

        E(Tr, Ir), E(kr, Tr), E(Er, Tr), E(Sr, Tr), E(Ar, Tr), Cr.prototype.la = function (t) {
          return ja(t, Rr(this));
        }, Cr.prototype.b = function (t, e) {
          var n = Rr(this);
          return n.idToken = e, Ua(t, n);
        }, Cr.prototype.f = function (t, e) {
          return Pr(Va(t, Rr(this)), e);
        }, Cr.prototype.w = function () {
          return {
            providerId: this.providerId,
            signInMethod: this.signInMethod,
            pendingToken: this.a
          };
        }, Lr.prototype.la = function (t) {
          return ja(t, xr(this));
        }, Lr.prototype.b = function (t, e) {
          var n = xr(this);
          return n.idToken = e, Ua(t, n);
        }, Lr.prototype.f = function (t, e) {
          return Pr(Va(t, xr(this)), e);
        }, Lr.prototype.w = function () {
          var t = {
            providerId: this.providerId,
            signInMethod: this.signInMethod
          };
          return this.idToken && (t.oauthIdToken = this.idToken), this.accessToken && (t.oauthAccessToken = this.accessToken), this.secret && (t.oauthTokenSecret = this.secret), this.nonce && (t.nonce = this.nonce), this.a && (t.pendingToken = this.a), t;
        }, jr.prototype.Da = function (t) {
          return this.zb = ot(t), this;
        }, E(Ur, jr), E(Vr, jr), Vr.prototype.ua = function (t) {
          return U(this.a, t) || this.a.push(t), this;
        }, Vr.prototype.Fb = function () {
          return q(this.a);
        }, Vr.prototype.credential = function (t, e) {
          var n;
          if (!(n = b(t) ? {
            idToken: t.idToken || null,
            accessToken: t.accessToken || null,
            nonce: t.rawNonce || null
          } : {
            idToken: t || null,
            accessToken: e || null
          }).idToken && !n.accessToken) throw new Bi("argument-error", "credential failed: must provide the ID token and/or the access token.");
          return new Lr(this.providerId, n, this.providerId);
        }, E(Kr, Vr), Ci(Kr, "PROVIDER_ID", "facebook.com"), Ci(Kr, "FACEBOOK_SIGN_IN_METHOD", "facebook.com"), E(qr, Vr), Ci(qr, "PROVIDER_ID", "github.com"), Ci(qr, "GITHUB_SIGN_IN_METHOD", "github.com"), E(Br, Vr), Ci(Br, "PROVIDER_ID", "google.com"), Ci(Br, "GOOGLE_SIGN_IN_METHOD", "google.com"), E(Wr, jr), Ci(Wr, "PROVIDER_ID", "twitter.com"), Ci(Wr, "TWITTER_SIGN_IN_METHOD", "twitter.com"), Jr.prototype.la = function (t) {
          return this.signInMethod == Yr.EMAIL_LINK_SIGN_IN_METHOD ? ps(t, Xa, {
            email: this.a,
            oobCode: this.c
          }) : ps(t, hs, {
            email: this.a,
            password: this.c
          });
        }, Jr.prototype.b = function (t, e) {
          return this.signInMethod == Yr.EMAIL_LINK_SIGN_IN_METHOD ? ps(t, Ja, {
            idToken: e,
            email: this.a,
            oobCode: this.c
          }) : ps(t, rs, {
            idToken: e,
            email: this.a,
            password: this.c
          });
        }, Jr.prototype.f = function (t, e) {
          return Pr(this.la(t), e);
        }, Jr.prototype.w = function () {
          return {
            email: this.a,
            password: this.c,
            signInMethod: this.signInMethod
          };
        }, Ri(Yr, {
          PROVIDER_ID: "password"
        }), Ri(Yr, {
          EMAIL_LINK_SIGN_IN_METHOD: "emailLink"
        }), Ri(Yr, {
          EMAIL_PASSWORD_SIGN_IN_METHOD: "password"
        }), Qr.prototype.la = function (t) {
          return t.Ua(eo(this));
        }, Qr.prototype.b = function (t, e) {
          var n = eo(this);
          return n.idToken = e, ps(t, fs, n);
        }, Qr.prototype.f = function (t, e) {
          var n = eo(this);
          return n.operation = "REAUTH", Pr(t = ps(t, ds, n), e);
        }, Qr.prototype.w = function () {
          var t = {
            providerId: "phone"
          };
          return this.a.Ta && (t.verificationId = this.a.Ta), this.a.Sa && (t.verificationCode = this.a.Sa), this.a.Fa && (t.temporaryProof = this.a.Fa), this.a.$ && (t.phoneNumber = this.a.$), t;
        }, no.prototype.Ua = function (i, r) {
          var o = this.a.c;
          return Et(r.verify()).then(function (t) {
            if (!h(t)) throw new Bi("argument-error", "An implementation of firebase.auth.ApplicationVerifier.prototype.verify() must return a firebase.Promise that resolves with a string.");

            switch (r.type) {
              case "recaptcha":
                return (e = o, n = {
                  phoneNumber: i,
                  recaptchaToken: t
                }, ps(e, ns, n)).then(function (t) {
                  return "function" == typeof r.reset && r.reset(), t;
                }, function (t) {
                  throw "function" == typeof r.reset && r.reset(), t;
                });

              default:
                throw new Bi("argument-error", 'Only firebase.auth.ApplicationVerifiers with type="recaptcha" are currently supported.');
            }

            var e, n;
          });
        }, Ri(no, {
          PROVIDER_ID: "phone"
        }), Ri(no, {
          PHONE_SIGN_IN_METHOD: "phone"
        }), ao.prototype.getUid = function () {
          var t = [];
          return t.push(this.c), this.b && t.push(this.b), this.f && t.push(this.f), this.i && t.push(this.i), t.join("-");
        }, ao.prototype.w = function () {
          return {
            type: this.c,
            eventId: this.b,
            urlResponse: this.g,
            sessionId: this.f,
            postBody: this.h,
            error: this.a && this.a.w()
          };
        };
        var co,
            ho = null;

        function lo(t) {
          var e = "unauthorized-domain",
              n = void 0,
              i = Ye(t);
          t = i.b, "chrome-extension" == (i = i.f) ? n = ht("This chrome extension ID (chrome-extension://%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.", t) : "http" == i || "https" == i ? n = ht("This domain (%s) is not authorized to run this operation. Add it to the OAuth redirect domains list in the Firebase console -> Auth section -> Sign in method tab.", t) : e = "operation-not-supported-in-this-environment", Bi.call(this, e, n);
        }

        function fo(t, e, n) {
          Bi.call(this, t, n), (t = e || {}).Ab && Ci(this, "email", t.Ab), t.$ && Ci(this, "phoneNumber", t.$), t.credential && Ci(this, "credential", t.credential);
        }

        function po(t) {
          if (t.code) {
            var e = t.code || "";
            0 == e.indexOf(Wi) && (e = e.substring(Wi.length));
            var n = {
              credential: ro(t)
            };
            if (t.email) n.Ab = t.email;else if (t.phoneNumber) n.$ = t.phoneNumber;else if (!n.credential) return new Bi(e, t.message || void 0);
            return new fo(e, n, t.message);
          }

          return null;
        }

        function vo() {}

        function mo(t) {
          return t.c || (t.c = t.b());
        }

        function go() {}

        function bo(t) {
          if (t.f || "undefined" != typeof XMLHttpRequest || "undefined" == typeof ActiveXObject) return t.f;

          for (var e = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"], n = 0; n < e.length; n++) {
            var i = e[n];

            try {
              return new ActiveXObject(i), t.f = i;
            } catch (t) {}
          }

          throw Error("Could not create ActiveXObject. ActiveX might be disabled, or MSXML might not be installed");
        }

        function yo() {}

        function wo() {
          this.a = new XDomainRequest(), this.readyState = 0, this.onreadystatechange = null, this.responseType = this.responseText = this.response = "", this.status = -1, this.statusText = "", this.a.onload = I(this.dc, this), this.a.onerror = I(this.Gb, this), this.a.onprogress = I(this.ec, this), this.a.ontimeout = I(this.ic, this);
        }

        function Io(t, e) {
          t.readyState = e, t.onreadystatechange && t.onreadystatechange();
        }

        function To(t, e, n) {
          this.reset(t, e, n, void 0, void 0);
        }

        function ko(t) {
          this.f = t, this.b = this.c = this.a = null;
        }

        function Eo(t, e) {
          this.name = t, this.value = e;
        }

        uo.prototype.subscribe = function (t) {
          var n = this;
          this.a.push(t), this.b || (this.b = function (t) {
            for (var e = 0; e < n.a.length; e++) n.a[e](t);
          }, "function" == typeof (t = li("universalLinks.subscribe", l)) && t(null, this.b));
        }, uo.prototype.unsubscribe = function (e) {
          K(this.a, function (t) {
            return t == e;
          });
        }, E(lo, Bi), E(fo, Bi), fo.prototype.w = function () {
          var t = {
            code: this.code,
            message: this.message
          };
          this.email && (t.email = this.email), this.phoneNumber && (t.phoneNumber = this.phoneNumber);
          var e = this.credential && this.credential.w();
          return e && ct(t, e), t;
        }, fo.prototype.toJSON = function () {
          return this.w();
        }, vo.prototype.c = null, E(go, vo), go.prototype.a = function () {
          var t = bo(this);
          return t ? new ActiveXObject(t) : new XMLHttpRequest();
        }, go.prototype.b = function () {
          var t = {};
          return bo(this) && (t[0] = !0, t[1] = !0), t;
        }, co = new go(), E(yo, vo), yo.prototype.a = function () {
          var t = new XMLHttpRequest();
          if ("withCredentials" in t) return t;
          if ("undefined" != typeof XDomainRequest) return new wo();
          throw Error("Unsupported browser");
        }, yo.prototype.b = function () {
          return {};
        }, (t = wo.prototype).open = function (t, e, n) {
          if (null != n && !n) throw Error("Only async requests are supported.");
          this.a.open(t, e);
        }, t.send = function (t) {
          if (t) {
            if ("string" != typeof t) throw Error("Only string data is supported");
            this.a.send(t);
          } else this.a.send();
        }, t.abort = function () {
          this.a.abort();
        }, t.setRequestHeader = function () {}, t.getResponseHeader = function (t) {
          return "content-type" == t.toLowerCase() ? this.a.contentType : "";
        }, t.dc = function () {
          this.status = 200, this.response = this.responseText = this.a.responseText, Io(this, 4);
        }, t.Gb = function () {
          this.status = 500, this.response = this.responseText = "", Io(this, 4);
        }, t.ic = function () {
          this.Gb();
        }, t.ec = function () {
          this.status = 200, Io(this, 1);
        }, t.getAllResponseHeaders = function () {
          return "content-type: " + this.a.contentType;
        }, To.prototype.a = null, To.prototype.reset = function (t, e, n, i, r) {
          delete this.a;
        }, Eo.prototype.toString = function () {
          return this.name;
        };
        var So = new Eo("SEVERE", 1e3),
            Ao = new Eo("WARNING", 900),
            No = new Eo("CONFIG", 700),
            Oo = new Eo("FINE", 500);

        ko.prototype.log = function (t, e, n) {
          if (t.value >= function t(e) {
            return e.c ? e.c : e.a ? t(e.a) : (O("Root logger has no level set."), null);
          }(this).value) for (g(e) && (e = e()), t = new To(t, String(e), this.f), n && (t.a = n), n = this; n;) n = n.a;
        };

        var _o,
            Po = {},
            Co = null;

        function Ro(t) {
          var e;

          if (Co || (Co = new ko(""), (Po[""] = Co).c = No), !(e = Po[t])) {
            e = new ko(t);
            var n = t.lastIndexOf("."),
                i = t.substr(n + 1);
            (n = Ro(t.substr(0, n))).b || (n.b = {}), (n.b[i] = e).a = n, Po[t] = e;
          }

          return e;
        }

        function Do(t, e) {
          t && t.log(Oo, e, void 0);
        }

        function Lo(t) {
          this.f = t;
        }

        function xo(t) {
          Re.call(this), this.u = t, this.readyState = Mo, this.status = 0, this.responseType = this.responseText = this.response = this.statusText = "", this.onreadystatechange = null, this.i = new Headers(), this.b = null, this.o = "GET", this.g = "", this.a = !1, this.h = Ro("goog.net.FetchXmlHttp"), this.l = this.c = this.f = null;
        }

        E(Lo, vo), Lo.prototype.a = function () {
          return new xo(this.f);
        }, Lo.prototype.b = (_o = {}, function () {
          return _o;
        }), E(xo, Re);
        var Mo = 0;

        function jo(t) {
          t.c.read().then(t.cc.bind(t)).catch(t.Ma.bind(t));
        }

        function Uo(t, e) {
          e && t.f && (t.status = t.f.status, t.statusText = t.f.statusText), t.readyState = 4, t.f = null, t.c = null, t.l = null, Vo(t);
        }

        function Vo(t) {
          t.onreadystatechange && t.onreadystatechange.call(t);
        }

        function Ko(t) {
          Re.call(this), this.headers = new Ke(), this.D = t || null, this.c = !1, this.A = this.a = null, this.h = this.N = this.l = "", this.f = this.I = this.i = this.G = !1, this.g = 0, this.u = null, this.o = Fo, this.v = this.O = !1;
        }

        (t = xo.prototype).open = function (t, e) {
          if (this.readyState != Mo) throw this.abort(), Error("Error reopening a connection");
          this.o = t, this.g = e, this.readyState = 1, Vo(this);
        }, t.send = function (t) {
          if (1 != this.readyState) throw this.abort(), Error("need to call open() first. ");
          this.a = !0;
          var e = {
            headers: this.i,
            method: this.o,
            credentials: void 0,
            cache: void 0
          };
          t && (e.body = t), this.u.fetch(new Request(this.g, e)).then(this.hc.bind(this), this.Ma.bind(this));
        }, t.abort = function () {
          this.response = this.responseText = "", this.i = new Headers(), this.status = 0, this.c && this.c.cancel("Request was aborted."), 1 <= this.readyState && this.a && 4 != this.readyState && (this.a = !1, Uo(this, !1)), this.readyState = Mo;
        }, t.hc = function (t) {
          this.a && (this.f = t, this.b || (this.b = t.headers, this.readyState = 2, Vo(this)), this.a && (this.readyState = 3, Vo(this), this.a && ("arraybuffer" === this.responseType ? t.arrayBuffer().then(this.fc.bind(this), this.Ma.bind(this)) : void 0 !== l.ReadableStream && "body" in t ? (this.response = this.responseText = "", this.c = t.body.getReader(), this.l = new TextDecoder(), jo(this)) : t.text().then(this.gc.bind(this), this.Ma.bind(this)))));
        }, t.cc = function (t) {
          if (this.a) {
            var e = this.l.decode(t.value ? t.value : new Uint8Array(0), {
              stream: !t.done
            });
            e && (this.response = this.responseText += e), t.done ? Uo(this, !0) : Vo(this), 3 == this.readyState && jo(this);
          }
        }, t.gc = function (t) {
          this.a && (this.response = this.responseText = t, Uo(this, !0));
        }, t.fc = function (t) {
          this.a && (this.response = t, Uo(this, !0));
        }, t.Ma = function (t) {
          var e = this.h;
          e && e.log(Ao, "Failed to fetch url " + this.g, t instanceof Error ? t : Error(t)), this.a && Uo(this, !0);
        }, t.setRequestHeader = function (t, e) {
          this.i.append(t, e);
        }, t.getResponseHeader = function (t) {
          return this.b ? this.b.get(t.toLowerCase()) || "" : ((t = this.h) && t.log(Ao, "Attempting to get response header but no headers have been received for url: " + this.g, void 0), "");
        }, t.getAllResponseHeaders = function () {
          if (!this.b) {
            var t = this.h;
            return t && t.log(Ao, "Attempting to get all response headers but no headers have been received for url: " + this.g, void 0), "";
          }

          t = [];

          for (var e = this.b.entries(), n = e.next(); !n.done;) n = n.value, t.push(n[0] + ": " + n[1]), n = e.next();

          return t.join("\r\n");
        }, E(Ko, Re);
        var Fo = "";
        Ko.prototype.b = Ro("goog.net.XhrIo");
        var qo = /^https?$/i,
            Ho = ["POST", "PUT"];

        function Bo(e, t, n, i, r) {
          if (e.a) throw Error("[goog.net.XhrIo] Object is active with another request=" + e.l + "; newUri=" + t);
          n = n ? n.toUpperCase() : "GET", e.l = t, e.h = "", e.N = n, e.G = !1, e.c = !0, e.a = e.D ? e.D.a() : co.a(), e.A = e.D ? mo(e.D) : mo(co), e.a.onreadystatechange = I(e.Jb, e);

          try {
            Do(e.b, Qo(e, "Opening Xhr")), e.I = !0, e.a.open(n, String(t), !0), e.I = !1;
          } catch (t) {
            return Do(e.b, Qo(e, "Error opening Xhr: " + t.message)), void Wo(e, t);
          }

          t = i || "";
          var o,
              a = new Ke(e.headers);
          r && function (t, e) {
            if (t.forEach && "function" == typeof t.forEach) t.forEach(e, void 0);else if (m(t) || h(t)) x(t, e, void 0);else for (var n = Ve(t), i = Ue(t), r = i.length, o = 0; o < r; o++) e.call(void 0, i[o], n && n[o], t);
          }(r, function (t, e) {
            a.set(e, t);
          }), r = function (t) {
            t: {
              for (var e = Go, n = t.length, i = h(t) ? t.split("") : t, r = 0; r < n; r++) if (r in i && e.call(void 0, i[r], r, t)) {
                e = r;
                break t;
              }

              e = -1;
            }

            return e < 0 ? null : h(t) ? t.charAt(e) : t[e];
          }(a.U()), i = l.FormData && t instanceof l.FormData, !U(Ho, n) || r || i || a.set("Content-Type", "application/x-www-form-urlencoded;charset=utf-8"), a.forEach(function (t, e) {
            this.a.setRequestHeader(e, t);
          }, e), e.o && (e.a.responseType = e.o), "withCredentials" in e.a && e.a.withCredentials !== e.O && (e.a.withCredentials = e.O);

          try {
            Yo(e), 0 < e.g && (e.v = (o = e.a, Gt && ne(9) && "number" == typeof o.timeout && void 0 !== o.ontimeout), Do(e.b, Qo(e, "Will abort after " + e.g + "ms if incomplete, xhr2 " + e.v)), e.v ? (e.a.timeout = e.g, e.a.ontimeout = I(e.Ga, e)) : e.u = Me(e.Ga, e.g, e)), Do(e.b, Qo(e, "Sending request")), e.i = !0, e.a.send(t), e.i = !1;
          } catch (t) {
            Do(e.b, Qo(e, "Send error: " + t.message)), Wo(e, t);
          }
        }

        function Go(t) {
          return "content-type" == t.toLowerCase();
        }

        function Wo(t, e) {
          t.c = !1, t.a && (t.f = !0, t.a.abort(), t.f = !1), t.h = e, Xo(t), zo(t);
        }

        function Xo(t) {
          t.G || (t.G = !0, t.dispatchEvent("complete"), t.dispatchEvent("error"));
        }

        function Jo(e) {
          if (e.c && void 0 !== u) if (e.A[1] && 4 == $o(e) && 2 == Zo(e)) Do(e.b, Qo(e, "Local request error detected and ignored"));else if (e.i && 4 == $o(e)) Me(e.Jb, 0, e);else if (e.dispatchEvent("readystatechange"), 4 == $o(e)) {
            Do(e.b, Qo(e, "Request complete")), e.c = !1;

            try {
              var t,
                  n = Zo(e);

              t: switch (n) {
                case 200:
                case 201:
                case 202:
                case 204:
                case 206:
                case 304:
                case 1223:
                  var i = !0;
                  break t;

                default:
                  i = !1;
              }

              if (!(t = i)) {
                var r;

                if (r = 0 === n) {
                  var o = String(e.l).match(He)[1] || null;

                  if (!o && l.self && l.self.location) {
                    var a = l.self.location.protocol;
                    o = a.substr(0, a.length - 1);
                  }

                  r = !qo.test(o ? o.toLowerCase() : "");
                }

                t = r;
              }

              if (t) e.dispatchEvent("complete"), e.dispatchEvent("success");else {
                try {
                  var s = 2 < $o(e) ? e.a.statusText : "";
                } catch (t) {
                  Do(e.b, "Can not get status: " + t.message), s = "";
                }

                e.h = s + " [" + Zo(e) + "]", Xo(e);
              }
            } finally {
              zo(e);
            }
          }
        }

        function zo(e, t) {
          if (e.a) {
            Yo(e);
            var n = e.a,
                i = e.A[0] ? s : null;
            e.a = null, e.A = null, t || e.dispatchEvent("ready");

            try {
              n.onreadystatechange = i;
            } catch (t) {
              (e = e.b) && e.log(So, "Problem encountered resetting onreadystatechange: " + t.message, void 0);
            }
          }
        }

        function Yo(t) {
          t.a && t.v && (t.a.ontimeout = null), t.u && (l.clearTimeout(t.u), t.u = null);
        }

        function $o(t) {
          return t.a ? t.a.readyState : 0;
        }

        function Zo(t) {
          try {
            return 2 < $o(t) ? t.a.status : -1;
          } catch (t) {
            return -1;
          }
        }

        function Qo(t, e) {
          return e + " [" + t.N + " " + t.l + " " + Zo(t) + "]";
        }

        function ta(t) {
          var e = la;
          this.g = [], this.v = e, this.u = t || null, this.f = this.a = !1, this.c = void 0, this.l = this.A = this.i = !1, this.h = 0, this.b = null, this.m = 0;
        }

        function ea(t, e, n) {
          t.a = !0, t.c = n, t.f = !e, oa(t);
        }

        function na(t) {
          if (t.a) {
            if (!t.l) throw new aa(t);
            t.l = !1;
          }
        }

        function ia(t, e, n, i) {
          t.g.push([e, n, i]), t.a && oa(t);
        }

        function ra(t) {
          return j(t.g, function (t) {
            return g(t[1]);
          });
        }

        function oa(e) {
          if (e.h && e.a && ra(e)) {
            var n = e.h,
                i = ca[n];
            i && (l.clearTimeout(i.a), delete ca[n]), e.h = 0;
          }

          e.b && (e.b.m--, delete e.b), n = e.c;

          for (var t = i = !1; e.g.length && !e.i;) {
            var r = e.g.shift(),
                o = r[0],
                a = r[1];
            if (r = r[2], o = e.f ? a : o) try {
              var s = o.call(r || e.u, n);
              void 0 !== s && (e.f = e.f && (s == n || s instanceof Error), e.c = n = s), (S(n) || "function" == typeof l.Promise && n instanceof l.Promise) && (t = !0, e.i = !0);
            } catch (t) {
              n = t, e.f = !0, ra(e) || (i = !0);
            }
          }

          e.c = n, t && (s = I(e.o, e, !0), t = I(e.o, e, !1), n instanceof ta ? (ia(n, s, t), n.A = !0) : n.then(s, t)), i && (n = new ua(n), ca[n.a] = n, e.h = n.a);
        }

        function aa() {
          A.call(this);
        }

        function sa() {
          A.call(this);
        }

        function ua(t) {
          this.a = l.setTimeout(I(this.c, this), 0), this.b = t;
        }

        (t = Ko.prototype).Ga = function () {
          void 0 !== u && this.a && (this.h = "Timed out after " + this.g + "ms, aborting", Do(this.b, Qo(this, this.h)), this.dispatchEvent("timeout"), this.abort(8));
        }, t.abort = function () {
          this.a && this.c && (Do(this.b, Qo(this, "Aborting")), this.c = !1, this.f = !0, this.a.abort(), this.f = !1, this.dispatchEvent("complete"), this.dispatchEvent("abort"), zo(this));
        }, t.va = function () {
          this.a && (this.c && (this.c = !1, this.f = !0, this.a.abort(), this.f = !1), zo(this, !0)), Ko.qb.va.call(this);
        }, t.Jb = function () {
          this.qa || (this.I || this.i || this.f ? Jo(this) : this.wc());
        }, t.wc = function () {
          Jo(this);
        }, t.getResponse = function () {
          try {
            if (!this.a) return null;
            if ("response" in this.a) return this.a.response;

            switch (this.o) {
              case Fo:
              case "text":
                return this.a.responseText;

              case "arraybuffer":
                if ("mozResponseArrayBuffer" in this.a) return this.a.mozResponseArrayBuffer;
            }

            var t = this.b;
            return t && t.log(So, "Response type " + this.o + " is not supported on this browser", void 0), null;
          } catch (t) {
            return Do(this.b, "Can not get response: " + t.message), null;
          }
        }, ta.prototype.cancel = function (t) {
          if (this.a) this.c instanceof ta && this.c.cancel();else {
            if (this.b) {
              var e = this.b;
              delete this.b, t ? e.cancel(t) : (e.m--, e.m <= 0 && e.cancel());
            }

            this.v ? this.v.call(this.u, this) : this.l = !0, this.a || (t = new sa(this), na(this), ea(this, !1, t));
          }
        }, ta.prototype.o = function (t, e) {
          this.i = !1, ea(this, t, e);
        }, ta.prototype.then = function (t, e, n) {
          var i,
              r,
              o = new gt(function (t, e) {
            i = t, r = e;
          });
          return ia(this, i, function (t) {
            t instanceof sa ? o.cancel() : r(t);
          }), o.then(t, e, n);
        }, ta.prototype.$goog_Thenable = !0, E(aa, A), aa.prototype.message = "Deferred has already fired", aa.prototype.name = "AlreadyCalledError", E(sa, A), sa.prototype.message = "Deferred was canceled", sa.prototype.name = "CanceledError", ua.prototype.c = function () {
          throw delete ca[this.a], this.b;
        };
        var ca = {};

        function ha(t) {
          var e,
              n,
              i,
              r,
              o,
              a = document,
              s = In(t).toString(),
              u = document.createElement("SCRIPT"),
              c = {
            Lb: u,
            Ga: void 0
          },
              h = new ta(c);
          return e = window.setTimeout(function () {
            fa(u, !0);
            var t = new va(pa, "Timeout reached for loading script " + s);
            na(h), ea(h, !1, t);
          }, 5e3), c.Ga = e, u.onload = u.onreadystatechange = function () {
            u.readyState && "loaded" != u.readyState && "complete" != u.readyState || (fa(u, !1, e), na(h), ea(h, !0, null));
          }, u.onerror = function () {
            fa(u, !0, e);
            var t = new va(da, "Error while loading script " + s);
            na(h), ea(h, !1, t);
          }, ct(c = {}, {
            type: "text/javascript",
            charset: "UTF-8"
          }), Mn(u, c), i = t, (n = u).src = In(i), null === d && (d = (i = (i = l.document).querySelector && i.querySelector("script[nonce]")) && (i = i.nonce || i.getAttribute("nonce")) && f.test(i) ? i : ""), (i = d) && n.setAttribute("nonce", i), (r = a, (o = (r || document).getElementsByTagName("HEAD")) && 0 != o.length ? o[0] : r.documentElement).appendChild(u), h;
        }

        function la() {
          if (this && this.Lb) {
            var t = this.Lb;
            t && "SCRIPT" == t.tagName && fa(t, !0, this.Ga);
          }
        }

        function fa(t, e, n) {
          null != n && l.clearTimeout(n), t.onload = s, t.onerror = s, t.onreadystatechange = s, e && window.setTimeout(function () {
            t && t.parentNode && t.parentNode.removeChild(t);
          }, 0);
        }

        var da = 0,
            pa = 1;

        function va(t, e) {
          var n = "Jsloader error (code #" + t + ")";
          e && (n += ": " + e), A.call(this, n), this.code = t;
        }

        function ma(t) {
          this.f = t;
        }

        function ga(t, e, n) {
          if (this.b = t, t = e || {}, this.i = t.secureTokenEndpoint || "https://securetoken.googleapis.com/v1/token", this.m = t.secureTokenTimeout || wa, this.f = ot(t.secureTokenHeaders || Ia), this.g = t.firebaseEndpoint || "https://www.googleapis.com/identitytoolkit/v3/relyingparty/", this.h = t.firebaseTimeout || Ta, this.a = ot(t.firebaseHeaders || ka), n && (this.a["X-Client-Version"] = n, this.f["X-Client-Version"] = n), n = "Node" == ii(), !(n = l.XMLHttpRequest || n && Wh.INTERNAL.node && Wh.INTERNAL.node.XMLHttpRequest) && !ni()) throw new Bi("internal-error", "The XMLHttpRequest compatibility library was not found.");
          this.c = void 0, ni() ? this.c = new Lo(self) : ri() ? this.c = new ma(n) : this.c = new yo();
        }

        E(va, A), E(ma, vo), ma.prototype.a = function () {
          return new this.f();
        }, ma.prototype.b = function () {
          return {};
        };
        var ba,
            ya = "idToken",
            wa = new ki(3e4, 6e4),
            Ia = {
          "Content-Type": "application/x-www-form-urlencoded"
        },
            Ta = new ki(3e4, 6e4),
            ka = {
          "Content-Type": "application/json"
        };

        function Ea(t, e) {
          e ? t.a["X-Firebase-Locale"] = e : delete t.a["X-Firebase-Locale"];
        }

        function Sa(t, e) {
          e ? (t.a["X-Client-Version"] = e, t.f["X-Client-Version"] = e) : (delete t.a["X-Client-Version"], delete t.f["X-Client-Version"]);
        }

        function Aa(t, e, n, i, r, o, a) {
          var s;
          (t = !((s = si(s = hi()) != ai ? null : (s = s.match(/\sChrome\/(\d+)/i)) && 2 == s.length ? parseInt(s[1], 10) : null) && s < 30 || Gt && te && !(9 < te)) || ni() ? I(t.o, t) : (ba || (ba = new gt(function (t, e) {
            !function (t, e) {
              if (((window.gapi || {}).client || {}).request) t();else {
                l[Oa] = function () {
                  ((window.gapi || {}).client || {}).request ? t() : e(Error("CORS_UNSUPPORTED"));
                };

                var n = Tn(Na, {
                  onload: Oa
                });
                ia(ha(n), null, function () {
                  e(Error("CORS_UNSUPPORTED"));
                }, void 0);
              }
            }(t, e);
          })), I(t.l, t)))(e, n, i, r, o, a);
        }

        ga.prototype.o = function (t, n, e, i, r, o) {
          if (ni() && (void 0 === l.fetch || void 0 === l.Headers || void 0 === l.Request)) throw new Bi("operation-not-supported-in-this-environment", "fetch, Headers and Request native APIs or equivalent Polyfills must be available to support HTTP requests from a Worker environment.");
          var a = new Ko(this.c);

          if (o) {
            a.g = Math.max(0, o);
            var s = setTimeout(function () {
              a.dispatchEvent("timeout");
            }, o);
          }

          De(a, "complete", function () {
            s && clearTimeout(s);
            var e = null;

            try {
              e = JSON.parse(function (e) {
                try {
                  return e.a ? e.a.responseText : "";
                } catch (t) {
                  return Do(e.b, "Can not get responseText: " + t.message), "";
                }
              }(this)) || null;
            } catch (t) {
              e = null;
            }

            n && n(e);
          }), Le(a, "ready", function () {
            s && clearTimeout(s), Kt(this);
          }), Le(a, "timeout", function () {
            s && clearTimeout(s), Kt(this), n && n(null);
          }), Bo(a, t, e, i, r);
        };

        var Na = new mn(yn, "https://apis.google.com/js/client.js?onload=%{onload}"),
            Oa = "__fcb" + Math.floor(1e6 * Math.random()).toString();

        function _a(t) {
          if (!h(t = t.email) || !Zn.test(t)) throw new Bi("invalid-email");
        }

        function Pa(t) {
          "email" in t && _a(t);
        }

        function Ca(t) {
          if (!t[ya]) throw new Bi("internal-error");
        }

        function Ra(t) {
          if (t.phoneNumber || t.temporaryProof) {
            if (!t.phoneNumber || !t.temporaryProof) throw new Bi("internal-error");
          } else {
            if (!t.sessionInfo) throw new Bi("missing-verification-id");
            if (!t.code) throw new Bi("missing-verification-code");
          }
        }

        ga.prototype.l = function (t, n, i, r, o) {
          var a = this;
          ba.then(function () {
            window.gapi.client.setApiKey(a.b);
            var e = window.gapi.auth.getToken();
            window.gapi.auth.setToken(null), window.gapi.client.request({
              path: t,
              method: i,
              body: r,
              headers: o,
              authType: "none",
              callback: function callback(t) {
                window.gapi.auth.setToken(e), n && n(t);
              }
            });
          }).s(function (t) {
            n && n({
              error: {
                message: t && t.message || "CORS_UNSUPPORTED"
              }
            });
          });
        }, ga.prototype.ob = function () {
          return ps(this, os, {});
        }, ga.prototype.rb = function (t, e) {
          return ps(this, is, {
            idToken: t,
            email: e
          });
        }, ga.prototype.sb = function (t, e) {
          return ps(this, rs, {
            idToken: t,
            password: e
          });
        };
        var Da = {
          displayName: "DISPLAY_NAME",
          photoUrl: "PHOTO_URL"
        };

        function La(t) {
          if (!t.requestUri || !t.sessionId && !t.postBody && !t.pendingToken) throw new Bi("internal-error");
        }

        function xa(t, e) {
          return e.oauthIdToken && e.providerId && 0 == e.providerId.indexOf("oidc.") && !e.pendingToken && (t.sessionId ? e.nonce = t.sessionId : t.postBody && ln(t = new sn(t.postBody), "nonce") && (e.nonce = t.get("nonce"))), e;
        }

        function Ma(t) {
          var e = null;
          if (t.needConfirmation ? (t.code = "account-exists-with-different-credential", e = po(t)) : "FEDERATED_USER_ID_ALREADY_LINKED" == t.errorMessage ? (t.code = "credential-already-in-use", e = po(t)) : "EMAIL_EXISTS" == t.errorMessage ? (t.code = "email-already-in-use", e = po(t)) : t.errorMessage && (e = vs(t.errorMessage)), e) throw e;
          if (!t[ya]) throw new Bi("internal-error");
        }

        function ja(t, e) {
          return e.returnIdpCredential = !0, ps(t, as, e);
        }

        function Ua(t, e) {
          return e.returnIdpCredential = !0, ps(t, us, e);
        }

        function Va(t, e) {
          return e.returnIdpCredential = !0, e.autoCreate = !1, ps(t, ss, e);
        }

        function Ka(t) {
          if (!t.oobCode) throw new Bi("invalid-action-code");
        }

        (t = ga.prototype).tb = function (t, i) {
          var r = {
            idToken: t
          },
              o = [];
          return it(Da, function (t, e) {
            var n = i[e];
            null === n ? o.push(t) : e in i && (r[e] = n);
          }), o.length && (r.deleteAttribute = o), ps(this, is, r);
        }, t.kb = function (t, e) {
          return ct(t = {
            requestType: "PASSWORD_RESET",
            email: t
          }, e), ps(this, Za, t);
        }, t.lb = function (t, e) {
          return ct(t = {
            requestType: "EMAIL_SIGNIN",
            email: t
          }, e), ps(this, Ya, t);
        }, t.jb = function (t, e) {
          return ct(t = {
            requestType: "VERIFY_EMAIL",
            idToken: t
          }, e), ps(this, $a, t);
        }, t.Ua = function (t) {
          return ps(this, ls, t);
        }, t.Za = function (t, e) {
          return ps(this, es, {
            oobCode: t,
            newPassword: e
          });
        }, t.Ka = function (t) {
          return ps(this, qa, {
            oobCode: t
          });
        }, t.Wa = function (t) {
          return ps(this, Fa, {
            oobCode: t
          });
        };
        var Fa = {
          endpoint: "setAccountInfo",
          C: Ka,
          da: "email"
        },
            qa = {
          endpoint: "resetPassword",
          C: Ka,
          J: function J(t) {
            var e = t.requestType;
            if (!e || !t.email && "EMAIL_SIGNIN" != e) throw new Bi("internal-error");
          }
        },
            Ha = {
          endpoint: "signupNewUser",
          C: function C(t) {
            if (_a(t), !t.password) throw new Bi("weak-password");
          },
          J: Ca,
          R: !0
        },
            Ba = {
          endpoint: "createAuthUri"
        },
            Ga = {
          endpoint: "deleteAccount",
          T: ["idToken"]
        },
            Wa = {
          endpoint: "setAccountInfo",
          T: ["idToken", "deleteProvider"],
          C: function C(t) {
            if (!v(t.deleteProvider)) throw new Bi("internal-error");
          }
        },
            Xa = {
          endpoint: "emailLinkSignin",
          T: ["email", "oobCode"],
          C: _a,
          J: Ca,
          R: !0
        },
            Ja = {
          endpoint: "emailLinkSignin",
          T: ["idToken", "email", "oobCode"],
          C: _a,
          J: Ca,
          R: !0
        },
            za = {
          endpoint: "getAccountInfo"
        },
            Ya = {
          endpoint: "getOobConfirmationCode",
          T: ["requestType"],
          C: function C(t) {
            if ("EMAIL_SIGNIN" != t.requestType) throw new Bi("internal-error");

            _a(t);
          },
          da: "email"
        },
            $a = {
          endpoint: "getOobConfirmationCode",
          T: ["idToken", "requestType"],
          C: function C(t) {
            if ("VERIFY_EMAIL" != t.requestType) throw new Bi("internal-error");
          },
          da: "email"
        },
            Za = {
          endpoint: "getOobConfirmationCode",
          T: ["requestType"],
          C: function C(t) {
            if ("PASSWORD_RESET" != t.requestType) throw new Bi("internal-error");

            _a(t);
          },
          da: "email"
        },
            Qa = {
          wb: !0,
          endpoint: "getProjectConfig",
          Ib: "GET"
        },
            ts = {
          wb: !0,
          endpoint: "getRecaptchaParam",
          Ib: "GET",
          J: function J(t) {
            if (!t.recaptchaSiteKey) throw new Bi("internal-error");
          }
        },
            es = {
          endpoint: "resetPassword",
          C: Ka,
          da: "email"
        },
            ns = {
          endpoint: "sendVerificationCode",
          T: ["phoneNumber", "recaptchaToken"],
          da: "sessionInfo"
        },
            is = {
          endpoint: "setAccountInfo",
          T: ["idToken"],
          C: Pa,
          R: !0
        },
            rs = {
          endpoint: "setAccountInfo",
          T: ["idToken"],
          C: function C(t) {
            if (Pa(t), !t.password) throw new Bi("weak-password");
          },
          J: Ca,
          R: !0
        },
            os = {
          endpoint: "signupNewUser",
          J: Ca,
          R: !0
        },
            as = {
          endpoint: "verifyAssertion",
          C: La,
          Qa: xa,
          J: Ma,
          R: !0
        },
            ss = {
          endpoint: "verifyAssertion",
          C: La,
          Qa: xa,
          J: function J(t) {
            if (t.errorMessage && "USER_NOT_FOUND" == t.errorMessage) throw new Bi("user-not-found");
            if (t.errorMessage) throw vs(t.errorMessage);
            if (!t[ya]) throw new Bi("internal-error");
          },
          R: !0
        },
            us = {
          endpoint: "verifyAssertion",
          C: function C(t) {
            if (La(t), !t.idToken) throw new Bi("internal-error");
          },
          Qa: xa,
          J: Ma,
          R: !0
        },
            cs = {
          endpoint: "verifyCustomToken",
          C: function C(t) {
            if (!t.token) throw new Bi("invalid-custom-token");
          },
          J: Ca,
          R: !0
        },
            hs = {
          endpoint: "verifyPassword",
          C: function C(t) {
            if (_a(t), !t.password) throw new Bi("wrong-password");
          },
          J: Ca,
          R: !0
        },
            ls = {
          endpoint: "verifyPhoneNumber",
          C: Ra,
          J: Ca
        },
            fs = {
          endpoint: "verifyPhoneNumber",
          C: function C(t) {
            if (!t.idToken) throw new Bi("internal-error");
            Ra(t);
          },
          J: function J(t) {
            if (t.temporaryProof) throw t.code = "credential-already-in-use", po(t);
            Ca(t);
          }
        },
            ds = {
          Wb: {
            USER_NOT_FOUND: "user-not-found"
          },
          endpoint: "verifyPhoneNumber",
          C: Ra,
          J: Ca
        };

        function ps(t, e, n) {
          if (!function (t, e) {
            if (!e || !e.length) return !0;
            if (!t) return !1;

            for (var n = 0; n < e.length; n++) {
              var i = t[e[n]];
              if (null == i || "" === i) return !1;
            }

            return !0;
          }(n, e.T)) return St(new Bi("internal-error"));
          var i,
              r = e.Ib || "POST";
          return Et(n).then(e.C).then(function () {
            return e.R && (n.returnSecureToken = !0), function (t, e, i, r, o, n) {
              var a = Ye(t.g + e);
              Je(a, "key", t.b), n && Je(a, "cb", k().toString());
              var s = "GET" == i;
              if (s) for (var u in r) r.hasOwnProperty(u) && Je(a, u, r[u]);
              return new gt(function (e, n) {
                Aa(t, a.toString(), function (t) {
                  t ? t.error ? n(ms(t, o || {})) : e(t) : n(new Bi("network-request-failed"));
                }, i, s ? void 0 : Kn(bi(r)), t.a, t.h.get());
              });
            }(t, e.endpoint, r, n, e.Wb, e.wb || !1);
          }).then(function (t) {
            return i = t, e.Qa ? e.Qa(n, i) : i;
          }).then(e.J).then(function () {
            if (!e.da) return i;
            if (!(e.da in i)) throw new Bi("internal-error");
            return i[e.da];
          });
        }

        function vs(t) {
          return ms({
            error: {
              errors: [{
                message: t
              }],
              code: 400,
              message: t
            }
          });
        }

        function ms(t, e) {
          var n = (t.error && t.error.errors && t.error.errors[0] || {}).reason || "",
              i = {
            keyInvalid: "invalid-api-key",
            ipRefererBlocked: "app-not-authorized"
          };
          if (n = i[n] ? new Bi(i[n]) : null) return n;

          for (var r in n = t.error && t.error.message || "", ct(i = {
            INVALID_CUSTOM_TOKEN: "invalid-custom-token",
            CREDENTIAL_MISMATCH: "custom-token-mismatch",
            MISSING_CUSTOM_TOKEN: "internal-error",
            INVALID_IDENTIFIER: "invalid-email",
            MISSING_CONTINUE_URI: "internal-error",
            INVALID_EMAIL: "invalid-email",
            INVALID_PASSWORD: "wrong-password",
            USER_DISABLED: "user-disabled",
            MISSING_PASSWORD: "internal-error",
            EMAIL_EXISTS: "email-already-in-use",
            PASSWORD_LOGIN_DISABLED: "operation-not-allowed",
            INVALID_IDP_RESPONSE: "invalid-credential",
            INVALID_PENDING_TOKEN: "invalid-credential",
            FEDERATED_USER_ID_ALREADY_LINKED: "credential-already-in-use",
            MISSING_OR_INVALID_NONCE: "missing-or-invalid-nonce",
            INVALID_MESSAGE_PAYLOAD: "invalid-message-payload",
            INVALID_RECIPIENT_EMAIL: "invalid-recipient-email",
            INVALID_SENDER: "invalid-sender",
            EMAIL_NOT_FOUND: "user-not-found",
            RESET_PASSWORD_EXCEED_LIMIT: "too-many-requests",
            EXPIRED_OOB_CODE: "expired-action-code",
            INVALID_OOB_CODE: "invalid-action-code",
            MISSING_OOB_CODE: "internal-error",
            INVALID_PROVIDER_ID: "invalid-provider-id",
            CREDENTIAL_TOO_OLD_LOGIN_AGAIN: "requires-recent-login",
            INVALID_ID_TOKEN: "invalid-user-token",
            TOKEN_EXPIRED: "user-token-expired",
            USER_NOT_FOUND: "user-token-expired",
            CORS_UNSUPPORTED: "cors-unsupported",
            DYNAMIC_LINK_NOT_ACTIVATED: "dynamic-link-not-activated",
            INVALID_APP_ID: "invalid-app-id",
            TOO_MANY_ATTEMPTS_TRY_LATER: "too-many-requests",
            WEAK_PASSWORD: "weak-password",
            OPERATION_NOT_ALLOWED: "operation-not-allowed",
            USER_CANCELLED: "user-cancelled",
            CAPTCHA_CHECK_FAILED: "captcha-check-failed",
            INVALID_APP_CREDENTIAL: "invalid-app-credential",
            INVALID_CODE: "invalid-verification-code",
            INVALID_PHONE_NUMBER: "invalid-phone-number",
            INVALID_SESSION_INFO: "invalid-verification-id",
            INVALID_TEMPORARY_PROOF: "invalid-credential",
            MISSING_APP_CREDENTIAL: "missing-app-credential",
            MISSING_CODE: "missing-verification-code",
            MISSING_PHONE_NUMBER: "missing-phone-number",
            MISSING_SESSION_INFO: "missing-verification-id",
            QUOTA_EXCEEDED: "quota-exceeded",
            SESSION_EXPIRED: "code-expired",
            REJECTED_CREDENTIAL: "rejected-credential",
            INVALID_CONTINUE_URI: "invalid-continue-uri",
            MISSING_ANDROID_PACKAGE_NAME: "missing-android-pkg-name",
            MISSING_IOS_BUNDLE_ID: "missing-ios-bundle-id",
            UNAUTHORIZED_DOMAIN: "unauthorized-continue-uri",
            INVALID_DYNAMIC_LINK_DOMAIN: "invalid-dynamic-link-domain",
            INVALID_OAUTH_CLIENT_ID: "invalid-oauth-client-id",
            INVALID_CERT_HASH: "invalid-cert-hash",
            ADMIN_ONLY_OPERATION: "admin-restricted-operation"
          }, e || {}), e = (e = n.match(/^[^\s]+\s*:\s*(.*)$/)) && 1 < e.length ? e[1] : void 0, i) if (0 === n.indexOf(r)) return new Bi(i[r], e);

          return !e && t && (e = gi(t)), new Bi("internal-error", e);
        }

        function gs(t) {
          var o;
          this.b = t, this.a = null, this.fb = (o = this, (Is || (Is = new gt(function (t, e) {
            function n() {
              Ti(), li("gapi.load")("gapi.iframes", {
                callback: t,
                ontimeout: function ontimeout() {
                  Ti(), e(Error("Network Error"));
                },
                timeout: ys.get()
              });
            }

            if (li("gapi.iframes.Iframe")) t();else if (li("gapi.load")) n();else {
              var i = "__iframefcb" + Math.floor(1e6 * Math.random()).toString();
              l[i] = function () {
                li("gapi.load") ? n() : e(Error("Network Error"));
              }, Et(ha(i = Tn(bs, {
                onload: i
              }))).s(function () {
                e(Error("Network Error"));
              });
            }
          }).s(function (t) {
            throw Is = null, t;
          }))).then(function () {
            return new gt(function (i, r) {
              li("gapi.iframes.getContext")().open({
                where: document.body,
                url: o.b,
                messageHandlersFilter: li("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"),
                attributes: {
                  style: {
                    position: "absolute",
                    top: "-100px",
                    width: "1px",
                    height: "1px"
                  }
                },
                dontclear: !0
              }, function (t) {
                function e() {
                  clearTimeout(n), i();
                }

                o.a = t, o.a.restyle({
                  setHideOnLeave: !1
                });
                var n = setTimeout(function () {
                  r(Error("Network Error"));
                }, ws.get());
                t.ping(e).then(e, function () {
                  r(Error("Network Error"));
                });
              });
            });
          }));
        }

        var bs = new mn(yn, "https://apis.google.com/js/api.js?onload=%{onload}"),
            ys = new ki(3e4, 6e4),
            ws = new ki(5e3, 15e3),
            Is = null;

        function Ts(t, e, n) {
          this.i = t, this.g = e, this.h = n, this.f = null, this.a = $e(this.i, "/__/auth/iframe"), Je(this.a, "apiKey", this.g), Je(this.a, "appName", this.h), this.b = null, this.c = [];
        }

        function ks(t, e, n, i, r) {
          this.o = t, this.l = e, this.c = n, this.m = i, this.h = this.g = this.i = null, this.a = r, this.f = null;
        }

        function Es(t) {
          try {
            return Wh.app(t).auth().ya();
          } catch (t) {
            return [];
          }
        }

        function Ss(t, e, n, i, r) {
          this.l = t, this.f = e, this.b = n, this.c = i || null, this.h = r || null, this.o = this.u = this.v = null, this.g = [], this.m = this.a = null;
        }

        function As(t) {
          var e,
              s = Wn();
          return (e = t, ps(e, Qa, {}).then(function (t) {
            return t.authorizedDomains || [];
          })).then(function (t) {
            t: {
              var e = Ye(s),
                  n = e.f;
              e = e.b;

              for (var i = 0; i < t.length; i++) {
                var r = t[i],
                    o = e,
                    a = n;

                if (o = 0 == r.indexOf("chrome-extension://") ? Ye(r).b == o && "chrome-extension" == a : ("http" == a || "https" == a) && ($n.test(r) ? o == r : (r = r.split(".").join("\\."), new RegExp("^(.+\\." + r + "|" + r + ")$", "i").test(o)))) {
                  t = !0;
                  break t;
                }
              }

              t = !1;
            }

            if (!t) throw new lo(Wn());
          });
        }

        function Ns(r) {
          return r.m || (r.m = Qn().then(function () {
            if (!r.u) {
              var t = r.c,
                  e = r.h,
                  n = Es(r.b),
                  i = new Ts(r.l, r.f, r.b);
              i.f = t, i.b = e, i.c = q(n || []), r.u = i.toString();
            }

            r.i = new gs(r.u), function (i) {
              if (!i.i) throw Error("IfcHandler must be initialized!");
              t = i.i, e = function e(t) {
                var e = {};

                if (t && t.authEvent) {
                  var n = !1;

                  for (t = so(t.authEvent), e = 0; e < i.g.length; e++) n = i.g[e](t) || n;

                  return (e = {}).status = n ? "ACK" : "ERROR", Et(e);
                }

                return e.status = "ERROR", Et(e);
              }, t.fb.then(function () {
                t.a.register("authEvent", e, li("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"));
              });
              var t, e;
            }(r);
          })), r.m;
        }

        function Os(t) {
          return t.o || (t.v = t.c ? ci(t.c, Es(t.b)) : null, t.o = new ga(t.f, dr(t.h), t.v)), t.o;
        }

        function _s(t, e, n, i, r, o, a, s, u, c) {
          return (t = new ks(t, e, n, i, r)).i = o, t.g = a, t.h = s, t.b = ot(u || null), t.f = c, t.toString();
        }

        function Ps(t) {
          if (this.a = t || Wh.INTERNAL.reactNative && Wh.INTERNAL.reactNative.AsyncStorage, !this.a) throw new Bi("internal-error", "The React Native compatibility library was not found.");
          this.type = "asyncStorage";
        }

        function Cs(t) {
          this.b = t, this.a = {}, this.c = I(this.f, this);
        }

        Ts.prototype.toString = function () {
          return this.f ? Je(this.a, "v", this.f) : hn(this.a.a, "v"), this.b ? Je(this.a, "eid", this.b) : hn(this.a.a, "eid"), this.c.length ? Je(this.a, "fw", this.c.join(",")) : hn(this.a.a, "fw"), this.a.toString();
        }, ks.prototype.toString = function () {
          var t = $e(this.o, "/__/auth/handler");

          if (Je(t, "apiKey", this.l), Je(t, "appName", this.c), Je(t, "authType", this.m), this.a.isOAuthProvider) {
            var e = this.a;

            try {
              var n = Wh.app(this.c).auth().ea();
            } catch (t) {
              n = null;
            }

            for (var i in e.$a = n, Je(t, "providerId", this.a.providerId), n = bi((e = this.a).zb)) n[i] = n[i].toString();

            i = e.Dc, n = ot(n);

            for (var r = 0; r < i.length; r++) {
              var o = i[r];
              o in n && delete n[o];
            }

            e.cb && e.$a && !n[e.cb] && (n[e.cb] = e.$a), rt(n) || Je(t, "customParameters", gi(n));
          }

          if ("function" == typeof this.a.Fb && (e = this.a.Fb()).length && Je(t, "scopes", e.join(",")), this.i ? Je(t, "redirectUrl", this.i) : hn(t.a, "redirectUrl"), this.g ? Je(t, "eventId", this.g) : hn(t.a, "eventId"), this.h ? Je(t, "v", this.h) : hn(t.a, "v"), this.b) for (var a in this.b) this.b.hasOwnProperty(a) && !ze(t, a) && Je(t, a, this.b[a]);
          return this.f ? Je(t, "eid", this.f) : hn(t.a, "eid"), (a = Es(this.c)).length && Je(t, "fw", a.join(",")), t.toString();
        }, (t = Ss.prototype).Ea = function (e, n, t) {
          var i = new Bi("popup-closed-by-user"),
              r = new Bi("web-storage-unsupported"),
              o = this,
              a = !1;
          return this.ga().then(function () {
            var t, i;
            (t = o, i = {
              type: "webStorageSupport"
            }, Ns(t).then(function () {
              return e = t.i, n = i, e.fb.then(function () {
                return new gt(function (t) {
                  e.a.send(n.type, n, t, li("gapi.iframes.CROSS_ORIGIN_IFRAMES_FILTER"));
                });
              });
              var e, n;
            }).then(function (t) {
              if (t && t.length && void 0 !== t[0].webStorageSupport) return t[0].webStorageSupport;
              throw Error();
            })).then(function (t) {
              t || (e && zn(e), n(r), a = !0);
            });
          }).s(function () {}).then(function () {
            if (!a) return n = e, new gt(function (e) {
              return function t() {
                je(2e3).then(function () {
                  if (n && !n.closed) return t();
                  e();
                });
              }();
            });
            var n;
          }).then(function () {
            if (!a) return je(t).then(function () {
              n(i);
            });
          });
        }, t.Mb = function () {
          var t = hi();
          return !mi(t) && !Ii(t);
        }, t.Hb = function () {
          return !1;
        }, t.Db = function (e, t, n, i, r, o, a) {
          if (!e) return St(new Bi("popup-blocked"));
          if (a && !mi()) return this.ga().s(function (t) {
            zn(e), r(t);
          }), i(), Et();
          this.a || (this.a = As(Os(this)));
          var s = this;
          return this.a.then(function () {
            var t = s.ga().s(function (t) {
              throw zn(e), r(t), t;
            });
            return i(), t;
          }).then(function () {
            (oo(n), a) || Xn(_s(s.l, s.f, s.b, t, n, null, o, s.c, void 0, s.h), e);
          }).s(function (t) {
            throw "auth/network-request-failed" == t.code && (s.a = null), t;
          });
        }, t.Ca = function (t, e, n) {
          this.a || (this.a = As(Os(this)));
          var i = this;
          return this.a.then(function () {
            oo(e), Xn(_s(i.l, i.f, i.b, t, e, Wn(), n, i.c, void 0, i.h));
          }).s(function (t) {
            throw "auth/network-request-failed" == t.code && (i.a = null), t;
          });
        }, t.ga = function () {
          var t = this;
          return Ns(this).then(function () {
            return t.i.fb;
          }).s(function () {
            throw t.a = null, new Bi("network-request-failed");
          });
        }, t.Pb = function () {
          return !0;
        }, t.wa = function (t) {
          this.g.push(t);
        }, t.La = function (e) {
          K(this.g, function (t) {
            return t == e;
          });
        }, (t = Ps.prototype).get = function (t) {
          return Et(this.a.getItem(t)).then(function (t) {
            return t && yi(t);
          });
        }, t.set = function (t, e) {
          return Et(this.a.setItem(t, gi(e)));
        }, t.P = function (t) {
          return Et(this.a.removeItem(t));
        }, t.Y = function () {}, t.ca = function () {};
        var Rs,
            Ds = [];

        function Ls(t) {
          this.a = t;
        }

        function xs(t) {
          this.c = t, this.b = !1, this.a = [];
        }

        function Ms(i, t, e, n) {
          var r,
              o,
              a,
              s,
              u = e || {},
              c = null;
          if (i.b) return St(Error("connection_unavailable"));
          var h = n ? 800 : 50,
              l = "undefined" != typeof MessageChannel ? new MessageChannel() : null;
          return new gt(function (e, n) {
            l ? (r = Math.floor(Math.random() * Math.pow(10, 20)).toString(), l.port1.start(), a = setTimeout(function () {
              n(Error("unsupported_event"));
            }, h), c = {
              messageChannel: l,
              onMessage: o = function o(t) {
                t.data.eventId === r && ("ack" === t.data.status ? (clearTimeout(a), s = setTimeout(function () {
                  n(Error("timeout"));
                }, 3e3)) : "done" === t.data.status ? (clearTimeout(s), void 0 !== t.data.response ? e(t.data.response) : n(Error("unknown_error"))) : (clearTimeout(a), clearTimeout(s), n(Error("invalid_response"))));
              }
            }, i.a.push(c), l.port1.addEventListener("message", o), i.c.postMessage({
              eventType: t,
              eventId: r,
              data: u
            }, [l.port2])) : n(Error("connection_unavailable"));
          }).then(function (t) {
            return js(i, c), t;
          }).s(function (t) {
            throw js(i, c), t;
          });
        }

        function js(t, e) {
          if (e) {
            var n = e.messageChannel,
                i = e.onMessage;
            n && (n.port1.removeEventListener("message", i), n.port1.close()), K(t.a, function (t) {
              return t == e;
            });
          }
        }

        function Us() {
          if (!Fs()) throw new Bi("web-storage-unsupported");
          this.c = {}, this.a = [], this.b = 0, this.l = l.indexedDB, this.type = "indexedDB", this.g = this.m = this.f = this.i = null, this.u = !1, this.h = null;
          var t,
              i = this;
          ni() && self ? (this.m = function () {
            var e = ni() ? self : null;

            if (x(Ds, function (t) {
              t.b == e && (n = t);
            }), !n) {
              var n = new Cs(e);
              Ds.push(n);
            }

            return n;
          }(), this.m.subscribe("keyChanged", function (t, n) {
            return Ws(i).then(function (e) {
              return 0 < e.length && x(i.a, function (t) {
                t(e);
              }), {
                keyProcessed: U(e, n.key)
              };
            });
          }), this.m.subscribe("ping", function () {
            return Et(["keyChanged"]);
          })) : (t = l.navigator, t && t.serviceWorker ? Et().then(function () {
            return t.serviceWorker.ready;
          }).then(function (t) {
            return t.active || null;
          }).s(function () {
            return null;
          }) : Et(null)).then(function (t) {
            (i.h = t) && (i.g = new xs(new Ls(t)), Ms(i.g, "ping", null, !0).then(function (t) {
              t[0].fulfilled && U(t[0].value, "keyChanged") && (i.u = !0);
            }).s(function () {}));
          });
        }

        function Vs(r) {
          return new gt(function (e, n) {
            var t = r.l.open("firebaseLocalStorageDb", 1);
            t.onerror = function (t) {
              try {
                t.preventDefault();
              } catch (t) {}

              n(Error(t.target.error));
            }, t.onupgradeneeded = function (t) {
              t = t.target.result;

              try {
                t.createObjectStore("firebaseLocalStorage", {
                  keyPath: "fbase_key"
                });
              } catch (t) {
                n(t);
              }
            }, t.onsuccess = function (t) {
              var i;
              (t = t.target.result).objectStoreNames.contains("firebaseLocalStorage") ? e(t) : (i = r, new gt(function (t, e) {
                var n = i.l.deleteDatabase("firebaseLocalStorageDb");
                n.onsuccess = function () {
                  t();
                }, n.onerror = function (t) {
                  e(Error(t.target.error));
                };
              })).then(function () {
                return Vs(r);
              }).then(function (t) {
                e(t);
              }).s(function (t) {
                n(t);
              });
            };
          });
        }

        function Ks(t) {
          return t.o || (t.o = Vs(t)), t.o;
        }

        function Fs() {
          try {
            return !!l.indexedDB;
          } catch (t) {
            return !1;
          }
        }

        function qs(t) {
          return t.objectStore("firebaseLocalStorage");
        }

        function Hs(t, e) {
          return t.transaction(["firebaseLocalStorage"], e ? "readwrite" : "readonly");
        }

        function Bs(t) {
          return new gt(function (e, n) {
            t.onsuccess = function (t) {
              t && t.target ? e(t.target.result) : e();
            }, t.onerror = function (t) {
              n(t.target.error);
            };
          });
        }

        function Gs(t, e) {
          return t.g && t.h && ((n = l.navigator) && n.serviceWorker && n.serviceWorker.controller || null) === t.h ? Ms(t.g, "keyChanged", {
            key: e
          }, t.u).then(function () {}).s(function () {}) : Et();
          var n;
        }

        function Ws(i) {
          return Ks(i).then(function (t) {
            var r = qs(Hs(t, !1));
            return r.getAll ? Bs(r.getAll()) : new gt(function (e, n) {
              var i = [],
                  t = r.openCursor();
              t.onsuccess = function (t) {
                (t = t.target.result) ? (i.push(t.value), t.continue()) : e(i);
              }, t.onerror = function (t) {
                n(t.target.error);
              };
            });
          }).then(function (t) {
            var e = {},
                n = [];

            if (0 == i.b) {
              for (n = 0; n < t.length; n++) e[t[n].fbase_key] = t[n].value;

              n = function t(e, n) {
                var i,
                    r = [];

                for (i in e) i in n ? typeof e[i] != typeof n[i] ? r.push(i) : "object" == typeof e[i] && null != e[i] && null != n[i] ? 0 < t(e[i], n[i]).length && r.push(i) : e[i] !== n[i] && r.push(i) : r.push(i);

                for (i in n) i in e || r.push(i);

                return r;
              }(i.c, e), i.c = e;
            }

            return n;
          });
        }

        function Xs(t) {
          t.i && t.i.cancel("STOP_EVENT"), t.f && (clearTimeout(t.f), t.f = null);
        }

        function Js(t) {
          var i = this,
              r = null;
          this.a = [], this.type = "indexedDB", this.c = t, this.b = Et().then(function () {
            if (Fs()) {
              var e = wi(),
                  n = "__sak" + e;
              return Rs || (Rs = new Us()), (r = Rs).set(n, e).then(function () {
                return r.get(n);
              }).then(function (t) {
                if (t !== e) throw Error("indexedDB not supported!");
                return r.P(n);
              }).then(function () {
                return r;
              }).s(function () {
                return i.c;
              });
            }

            return i.c;
          }).then(function (t) {
            return i.type = t.type, t.Y(function (e) {
              x(i.a, function (t) {
                t(e);
              });
            }), t;
          });
        }

        function zs() {
          this.a = {}, this.type = "inMemory";
        }

        function Ys() {
          if (!function () {
            var t = "Node" == ii();
            if (!(t = $s() || t && Wh.INTERNAL.node && Wh.INTERNAL.node.localStorage)) return !1;

            try {
              return t.setItem("__sak", "1"), t.removeItem("__sak"), !0;
            } catch (t) {
              return !1;
            }
          }()) {
            if ("Node" == ii()) throw new Bi("internal-error", "The LocalStorage compatibility library was not found.");
            throw new Bi("web-storage-unsupported");
          }

          this.a = $s() || Wh.INTERNAL.node.localStorage, this.type = "localStorage";
        }

        function $s() {
          try {
            var t = l.localStorage,
                e = wi();
            return t && (t.setItem(e, "1"), t.removeItem(e)), t;
          } catch (t) {
            return null;
          }
        }

        function Zs() {
          this.type = "nullStorage";
        }

        function Qs() {
          if (!function () {
            var t = "Node" == ii();
            if (!(t = tu() || t && Wh.INTERNAL.node && Wh.INTERNAL.node.sessionStorage)) return !1;

            try {
              return t.setItem("__sak", "1"), t.removeItem("__sak"), !0;
            } catch (t) {
              return !1;
            }
          }()) {
            if ("Node" == ii()) throw new Bi("internal-error", "The SessionStorage compatibility library was not found.");
            throw new Bi("web-storage-unsupported");
          }

          this.a = tu() || Wh.INTERNAL.node.sessionStorage, this.type = "sessionStorage";
        }

        function tu() {
          try {
            var t = l.sessionStorage,
                e = wi();
            return t && (t.setItem(e, "1"), t.removeItem(e)), t;
          } catch (t) {
            return null;
          }
        }

        function eu() {
          var t = {};
          t.Browser = ru, t.Node = ou, t.ReactNative = au, t.Worker = su, this.a = t[ii()];
        }

        Cs.prototype.f = function (n) {
          var i = n.data.eventType,
              r = n.data.eventId,
              t = this.a[i];

          if (t && 0 < t.length) {
            n.ports[0].postMessage({
              status: "ack",
              eventId: r,
              eventType: i,
              response: null
            });
            var e = [];
            x(t, function (t) {
              e.push(Et().then(function () {
                return t(n.origin, n.data.data);
              }));
            }), Nt(e).then(function (t) {
              var e = [];
              x(t, function (t) {
                e.push({
                  fulfilled: t.Eb,
                  value: t.value,
                  reason: t.reason ? t.reason.message : void 0
                });
              }), x(e, function (t) {
                for (var e in t) void 0 === t[e] && delete t[e];
              }), n.ports[0].postMessage({
                status: "done",
                eventId: r,
                eventType: i,
                response: e
              });
            });
          }
        }, Cs.prototype.subscribe = function (t, e) {
          rt(this.a) && this.b.addEventListener("message", this.c), void 0 === this.a[t] && (this.a[t] = []), this.a[t].push(e);
        }, Cs.prototype.unsubscribe = function (t, e) {
          void 0 !== this.a[t] && e ? (K(this.a[t], function (t) {
            return t == e;
          }), 0 == this.a[t].length && delete this.a[t]) : e || delete this.a[t], rt(this.a) && this.b.removeEventListener("message", this.c);
        }, Ls.prototype.postMessage = function (t, e) {
          this.a.postMessage(t, e);
        }, xs.prototype.close = function () {
          for (; 0 < this.a.length;) js(this, this.a[0]);

          this.b = !0;
        }, (t = Us.prototype).set = function (n, i) {
          var r,
              o = !1,
              a = this;
          return Ks(this).then(function (t) {
            return Bs((t = qs(Hs(r = t, !0))).get(n));
          }).then(function (t) {
            var e = qs(Hs(r, !0));
            return t ? (t.value = i, Bs(e.put(t))) : (a.b++, o = !0, (t = {}).fbase_key = n, t.value = i, Bs(e.add(t)));
          }).then(function () {
            return a.c[n] = i, Gs(a, n);
          }).ia(function () {
            o && a.b--;
          });
        }, t.get = function (e) {
          return Ks(this).then(function (t) {
            return Bs(qs(Hs(t, !1)).get(e));
          }).then(function (t) {
            return t && t.value;
          });
        }, t.P = function (e) {
          var n = !1,
              i = this;
          return Ks(this).then(function (t) {
            return n = !0, i.b++, Bs(qs(Hs(t, !0)).delete(e));
          }).then(function () {
            return delete i.c[e], Gs(i, e);
          }).ia(function () {
            n && i.b--;
          });
        }, t.Y = function (t) {
          var n;
          0 == this.a.length && (Xs(n = this), function e() {
            n.f = setTimeout(function () {
              n.i = Ws(n).then(function (e) {
                0 < e.length && x(n.a, function (t) {
                  t(e);
                });
              }).then(function () {
                e();
              }).s(function (t) {
                "STOP_EVENT" != t.message && e();
              });
            }, 800);
          }()), this.a.push(t);
        }, t.ca = function (e) {
          K(this.a, function (t) {
            return t == e;
          }), 0 == this.a.length && Xs(this);
        }, (t = Js.prototype).get = function (e) {
          return this.b.then(function (t) {
            return t.get(e);
          });
        }, t.set = function (e, n) {
          return this.b.then(function (t) {
            return t.set(e, n);
          });
        }, t.P = function (e) {
          return this.b.then(function (t) {
            return t.P(e);
          });
        }, t.Y = function (t) {
          this.a.push(t);
        }, t.ca = function (e) {
          K(this.a, function (t) {
            return t == e;
          });
        }, (t = zs.prototype).get = function (t) {
          return Et(this.a[t]);
        }, t.set = function (t, e) {
          return this.a[t] = e, Et();
        }, t.P = function (t) {
          return delete this.a[t], Et();
        }, t.Y = function () {}, t.ca = function () {}, (t = Ys.prototype).get = function (t) {
          var e = this;
          return Et().then(function () {
            return yi(e.a.getItem(t));
          });
        }, t.set = function (e, n) {
          var i = this;
          return Et().then(function () {
            var t = gi(n);
            null === t ? i.P(e) : i.a.setItem(e, t);
          });
        }, t.P = function (t) {
          var e = this;
          return Et().then(function () {
            e.a.removeItem(t);
          });
        }, t.Y = function (t) {
          l.window && we(l.window, "storage", t);
        }, t.ca = function (t) {
          l.window && ke(l.window, "storage", t);
        }, (t = Zs.prototype).get = function () {
          return Et(null);
        }, t.set = function () {
          return Et();
        }, t.P = function () {
          return Et();
        }, t.Y = function () {}, t.ca = function () {}, (t = Qs.prototype).get = function (t) {
          var e = this;
          return Et().then(function () {
            return yi(e.a.getItem(t));
          });
        }, t.set = function (e, n) {
          var i = this;
          return Et().then(function () {
            var t = gi(n);
            null === t ? i.P(e) : i.a.setItem(e, t);
          });
        }, t.P = function (t) {
          var e = this;
          return Et().then(function () {
            e.a.removeItem(t);
          });
        }, t.Y = function () {}, t.ca = function () {};
        var nu,
            iu,
            ru = {
          B: Ys,
          Ra: Qs
        },
            ou = {
          B: Ys,
          Ra: Qs
        },
            au = {
          B: Ps,
          Ra: Zs
        },
            su = {
          B: Ys,
          Ra: Zs
        },
            uu = {
          Xc: "local",
          NONE: "none",
          Zc: "session"
        };

        function cu() {
          var t = !(Ii(hi()) || !ei()),
              e = mi(),
              n = fi();
          this.o = t, this.h = e, this.m = n, this.a = {}, nu || (nu = new eu()), t = nu;

          try {
            this.g = !Gn() && Ai() || !l.indexedDB ? new t.a.B() : new Js(ni() ? new zs() : new t.a.B());
          } catch (t) {
            this.g = new zs(), this.h = !0;
          }

          try {
            this.i = new t.a.Ra();
          } catch (t) {
            this.i = new zs();
          }

          this.l = new zs(), this.f = I(this.Ob, this), this.b = {};
        }

        function hu() {
          return iu || (iu = new cu()), iu;
        }

        function lu(t, e) {
          switch (e) {
            case "session":
              return t.i;

            case "none":
              return t.l;

            default:
              return t.g;
          }
        }

        function fu(t, e) {
          return "firebase:" + t.name + (e ? ":" + e : "");
        }

        function du(t, e, n) {
          return n = fu(e, n), "local" == e.B && (t.b[n] = null), lu(t, e.B).P(n);
        }

        function pu(t) {
          t.c && (clearInterval(t.c), t.c = null);
        }

        function vu(t) {
          this.a = t, this.b = hu();
        }

        (t = cu.prototype).get = function (t, e) {
          return lu(this, t.B).get(fu(t, e));
        }, t.set = function (e, t, n) {
          var i = fu(e, n),
              r = this,
              o = lu(this, e.B);
          return o.set(i, t).then(function () {
            return o.get(i);
          }).then(function (t) {
            "local" == e.B && (r.b[i] = t);
          });
        }, t.addListener = function (t, e, n) {
          var i;
          t = fu(t, e), this.m && (this.b[t] = l.localStorage.getItem(t)), rt(this.a) && (lu(this, "local").Y(this.f), this.h || (Gn() || !Ai()) && l.indexedDB || !this.m || (pu(i = this), i.c = setInterval(function () {
            for (var t in i.a) {
              var e = l.localStorage.getItem(t),
                  n = i.b[t];
              e != n && (i.b[t] = e, e = new ce({
                type: "storage",
                key: t,
                target: window,
                oldValue: n,
                newValue: e,
                a: !0
              }), i.Ob(e));
            }
          }, 1e3))), this.a[t] || (this.a[t] = []), this.a[t].push(n);
        }, t.removeListener = function (t, e, n) {
          t = fu(t, e), this.a[t] && (K(this.a[t], function (t) {
            return t == n;
          }), 0 == this.a[t].length && delete this.a[t]), rt(this.a) && (lu(this, "local").ca(this.f), pu(this));
        }, t.Ob = function (t) {
          if (t && t.f) {
            var e = t.a.key;
            if (null == e) for (var n in this.a) {
              var i = this.b[n];
              void 0 === i && (i = null);
              var r = l.localStorage.getItem(n);
              r !== i && (this.b[n] = r, this.Xa(n));
            } else if (0 == e.indexOf("firebase:") && this.a[e]) {
              if (void 0 !== t.a.a ? lu(this, "local").ca(this.f) : pu(this), this.o) if (n = l.localStorage.getItem(e), (i = t.a.newValue) !== n) null !== i ? l.localStorage.setItem(e, i) : l.localStorage.removeItem(e);else if (this.b[e] === i && void 0 === t.a.a) return;
              var o = this;
              n = function n() {
                void 0 === t.a.a && o.b[e] === l.localStorage.getItem(e) || (o.b[e] = l.localStorage.getItem(e), o.Xa(e));
              }, Gt && te && 10 == te && l.localStorage.getItem(e) !== t.a.newValue && t.a.newValue !== t.a.oldValue ? setTimeout(n, 10) : n();
            }
          } else x(t, I(this.Xa, this));
        }, t.Xa = function (t) {
          this.a[t] && x(this.a[t], function (t) {
            t();
          });
        };
        var mu,
            gu = {
          name: "authEvent",
          B: "local"
        };

        function bu() {
          this.a = hu();
        }

        function yu(t, e) {
          this.b = wu, this.f = l.Uint8Array ? new Uint8Array(this.b) : Array(this.b), this.g = this.c = 0, this.a = [], this.i = t, this.h = e, this.m = l.Int32Array ? new Int32Array(64) : Array(64), void 0 !== mu || (mu = l.Int32Array ? new Int32Array(Nu) : Nu), this.reset();
        }

        E(yu, function () {
          this.b = -1;
        });

        for (var wu = 64, Iu = wu - 1, Tu = [], ku = 0; ku < Iu; ku++) Tu[ku] = 0;

        var Eu = F(128, Tu);

        function Su(t) {
          for (var e = t.f, n = t.m, i = 0, r = 0; r < e.length;) n[i++] = e[r] << 24 | e[r + 1] << 16 | e[r + 2] << 8 | e[r + 3], r = 4 * i;

          for (e = 16; e < 64; e++) {
            r = 0 | n[e - 15], i = 0 | n[e - 2];
            var o = (0 | n[e - 16]) + ((r >>> 7 | r << 25) ^ (r >>> 18 | r << 14) ^ r >>> 3) | 0,
                a = (0 | n[e - 7]) + ((i >>> 17 | i << 15) ^ (i >>> 19 | i << 13) ^ i >>> 10) | 0;
            n[e] = o + a | 0;
          }

          i = 0 | t.a[0], r = 0 | t.a[1];
          var s = 0 | t.a[2],
              u = 0 | t.a[3],
              c = 0 | t.a[4],
              h = 0 | t.a[5],
              l = 0 | t.a[6];

          for (o = 0 | t.a[7], e = 0; e < 64; e++) {
            var f = ((i >>> 2 | i << 30) ^ (i >>> 13 | i << 19) ^ (i >>> 22 | i << 10)) + (i & r ^ i & s ^ r & s) | 0;
            a = (o = o + ((c >>> 6 | c << 26) ^ (c >>> 11 | c << 21) ^ (c >>> 25 | c << 7)) | 0) + ((a = (a = c & h ^ ~c & l) + (0 | mu[e]) | 0) + (0 | n[e]) | 0) | 0, o = l, l = h, h = c, c = u + a | 0, u = s, s = r, r = i, i = a + f | 0;
          }

          t.a[0] = t.a[0] + i | 0, t.a[1] = t.a[1] + r | 0, t.a[2] = t.a[2] + s | 0, t.a[3] = t.a[3] + u | 0, t.a[4] = t.a[4] + c | 0, t.a[5] = t.a[5] + h | 0, t.a[6] = t.a[6] + l | 0, t.a[7] = t.a[7] + o | 0;
        }

        function Au(t, e, n) {
          void 0 === n && (n = e.length);
          var i = 0,
              r = t.c;
          if (h(e)) for (; i < n;) t.f[r++] = e.charCodeAt(i++), r == t.b && (Su(t), r = 0);else {
            if (!m(e)) throw Error("message must be string or array");

            for (; i < n;) {
              var o = e[i++];
              if (!("number" == typeof o && 0 <= o && o <= 255 && o == (0 | o))) throw Error("message must be a byte array");
              t.f[r++] = o, r == t.b && (Su(t), r = 0);
            }
          }
          t.c = r, t.g += n;
        }

        yu.prototype.reset = function () {
          this.g = this.c = 0, this.a = l.Int32Array ? new Int32Array(this.h) : q(this.h);
        };

        var Nu = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298];

        function Ou() {
          yu.call(this, 8, _u);
        }

        E(Ou, yu);
        var _u = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225];

        function Pu(t, e, n, i, r) {
          this.l = t, this.i = e, this.m = n, this.o = i || null, this.u = r || null, this.h = e + ":" + n, this.v = new bu(), this.g = new vu(this.h), this.f = null, this.b = [], this.a = this.c = null;
        }

        function Cu(t) {
          return new Bi("invalid-cordova-configuration", t);
        }

        function Ru(t) {
          var e = new Ou();
          Au(e, t), t = [];
          var n = 8 * e.g;
          e.c < 56 ? Au(e, Eu, 56 - e.c) : Au(e, Eu, e.b - (e.c - 56));

          for (var i = 63; 56 <= i; i--) e.f[i] = 255 & n, n /= 256;

          for (Su(e), i = n = 0; i < e.i; i++) for (var r = 24; 0 <= r; r -= 8) t[n++] = e.a[i] >> r & 255;

          return M(t, function (t) {
            return 1 < (t = t.toString(16)).length ? t : "0" + t;
          }).join("");
        }

        function Du(t, e) {
          for (var n = 0; n < t.b.length; n++) try {
            t.b[n](e);
          } catch (t) {}
        }

        function Lu(i) {
          return i.f || (i.f = i.ga().then(function () {
            return new gt(function (n) {
              i.wa(function t(e) {
                return n(e), i.La(t), !1;
              }), function (r) {
                function e(i) {
                  t = !0, n && n.cancel(), xu(r).then(function (t) {
                    var e = o;

                    if (t && i && i.url) {
                      var n = null;
                      -1 != (e = Or(i.url)).indexOf("/__/auth/callback") && (n = (n = "object" == typeof (n = yi(ze(n = Ye(e), "firebaseError") || null)) ? Gi(n) : null) ? new ao(t.c, t.b, null, null, n) : new ao(t.c, t.b, e, t.f)), e = n || o;
                    }

                    Du(r, e);
                  });
                }

                var o = new ao("unknown", null, null, null, new Bi("no-auth-event")),
                    t = !1,
                    n = je(500).then(function () {
                  return xu(r).then(function () {
                    t || Du(r, o);
                  });
                }),
                    i = l.handleOpenURL;
                l.handleOpenURL = function (t) {
                  if (0 == t.toLowerCase().indexOf(li("BuildInfo.packageName", l).toLowerCase() + "://") && e({
                    url: t
                  }), "function" == typeof i) try {
                    i(t);
                  } catch (t) {
                    console.error(t);
                  }
                }, ho || (ho = new uo()), ho.subscribe(e);
              }(i);
            });
          })), i.f;
        }

        function xu(e) {
          var t,
              n = null;
          return (t = e.g, t.b.get(gu, t.a).then(function (t) {
            return so(t);
          })).then(function (t) {
            return n = t, du((t = e.g).b, gu, t.a);
          }).then(function () {
            return n;
          });
        }

        function Mu(t) {
          this.a = t, this.b = hu();
        }

        (t = Pu.prototype).ga = function () {
          return this.za ? this.za : this.za = (ti(void 0) ? Qn().then(function () {
            return new gt(function (t, e) {
              var n = l.document,
                  i = setTimeout(function () {
                e(Error("Cordova framework is not ready."));
              }, 1e3);
              n.addEventListener("deviceready", function () {
                clearTimeout(i), t();
              }, !1);
            });
          }) : St(Error("Cordova must run in an Android or iOS file scheme."))).then(function () {
            if ("function" != typeof li("universalLinks.subscribe", l)) throw Cu("cordova-universal-links-plugin-fix is not installed");
            if (void 0 === li("BuildInfo.packageName", l)) throw Cu("cordova-plugin-buildinfo is not installed");
            if ("function" != typeof li("cordova.plugins.browsertab.openUrl", l)) throw Cu("cordova-plugin-browsertab is not installed");
            if ("function" != typeof li("cordova.InAppBrowser.open", l)) throw Cu("cordova-plugin-inappbrowser is not installed");
          }, function () {
            throw new Bi("cordova-not-ready");
          });
        }, t.Ea = function (t, e) {
          return e(new Bi("operation-not-supported-in-this-environment")), Et();
        }, t.Db = function () {
          return St(new Bi("operation-not-supported-in-this-environment"));
        }, t.Pb = function () {
          return !1;
        }, t.Mb = function () {
          return !0;
        }, t.Hb = function () {
          return !0;
        }, t.Ca = function (t, e, n) {
          if (this.c) return St(new Bi("redirect-operation-pending"));
          var i = this,
              r = l.document,
              o = null,
              a = null,
              s = null,
              u = null;
          return this.c = Et().then(function () {
            return oo(e), Lu(i);
          }).then(function () {
            return function (n, t, e, i) {
              var r = function () {
                for (var t = 20, e = []; 0 < t;) e.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62 * Math.random()))), t--;

                return e.join("");
              }(),
                  o = new ao(t, i, null, r, new Bi("no-auth-event")),
                  a = li("BuildInfo.packageName", l);

              if ("string" != typeof a) throw new Bi("invalid-cordova-configuration");
              var s = li("BuildInfo.displayName", l),
                  u = {};
              if (hi().toLowerCase().match(/iphone|ipad|ipod/)) u.ibi = a;else {
                if (!hi().toLowerCase().match(/android/)) return St(new Bi("operation-not-supported-in-this-environment"));
                u.apn = a;
              }
              s && (u.appDisplayName = s), r = Ru(r), u.sessionId = r;

              var c = _s(n.l, n.i, n.m, t, e, null, i, n.o, u, n.u);

              return n.ga().then(function () {
                var t = n.h;
                return n.v.a.set(gu, o.w(), t);
              }).then(function () {
                var t = li("cordova.plugins.browsertab.isAvailable", l);
                if ("function" != typeof t) throw new Bi("invalid-cordova-configuration");
                var e = null;
                t(function (t) {
                  if (t) {
                    if ("function" != typeof (e = li("cordova.plugins.browsertab.openUrl", l))) throw new Bi("invalid-cordova-configuration");
                    e(c);
                  } else {
                    if ("function" != typeof (e = li("cordova.InAppBrowser.open", l))) throw new Bi("invalid-cordova-configuration");
                    t = hi(), n.a = e(c, t.match(/(iPad|iPhone|iPod).*OS 7_\d/i) || t.match(/(iPad|iPhone|iPod).*OS 8_\d/i) ? "_blank" : "_system", "location=yes");
                  }
                });
              });
            }(i, t, e, n);
          }).then(function () {
            return new gt(function (e, t) {
              a = function a() {
                var t = li("cordova.plugins.browsertab.close", l);
                return e(), "function" == typeof t && t(), i.a && "function" == typeof i.a.close && (i.a.close(), i.a = null), !1;
              }, i.wa(a), s = function s() {
                o || (o = je(2e3).then(function () {
                  t(new Bi("redirect-cancelled-by-user"));
                }));
              }, u = function u() {
                Ei() && s();
              }, r.addEventListener("resume", s, !1), hi().toLowerCase().match(/android/) || r.addEventListener("visibilitychange", u, !1);
            }).s(function (t) {
              return xu(i).then(function () {
                throw t;
              });
            });
          }).ia(function () {
            s && r.removeEventListener("resume", s, !1), u && r.removeEventListener("visibilitychange", u, !1), o && o.cancel(), a && i.La(a), i.c = null;
          });
        }, t.wa = function (e) {
          this.b.push(e), Lu(this).s(function (t) {
            "auth/invalid-cordova-configuration" === t.code && (t = new ao("unknown", null, null, null, new Bi("no-auth-event")), e(t));
          });
        }, t.La = function (e) {
          K(this.b, function (t) {
            return t == e;
          });
        };
        var ju = {
          name: "pendingRedirect",
          B: "session"
        };

        function Uu(t) {
          return du(t.b, ju, t.a);
        }

        function Vu(t, e, n) {
          this.i = {}, this.u = 0, this.A = t, this.l = e, this.o = n, this.h = [], this.f = !1, this.m = I(this.bb, this), this.b = new zu(), this.v = new Qu(), this.g = new Mu(this.l + ":" + this.o), this.c = {}, this.c.unknown = this.b, this.c.signInViaRedirect = this.b, this.c.linkViaRedirect = this.b, this.c.reauthViaRedirect = this.b, this.c.signInViaPopup = this.v, this.c.linkViaPopup = this.v, this.c.reauthViaPopup = this.v, this.a = Ku(this.A, this.l, this.o, lr);
        }

        function Ku(t, e, n, i) {
          var r = Wh.SDK_VERSION || null;
          return ti() ? new Pu(t, e, n, r, i) : new Ss(t, e, n, r, i);
        }

        function Fu(e) {
          e.f || (e.f = !0, e.a.wa(e.m));
          var n = e.a;
          return e.a.ga().s(function (t) {
            throw e.a == n && e.reset(), t;
          });
        }

        function qu(n) {
          n.a.Mb() && Fu(n).s(function (t) {
            var e = new ao("unknown", null, null, null, new Bi("operation-not-supported-in-this-environment"));
            Wu(t) && n.bb(e);
          }), n.a.Hb() || Yu(n.b);
        }

        (t = Vu.prototype).reset = function () {
          this.f = !1, this.a.La(this.m), this.a = Ku(this.A, this.l, this.o), this.i = {};
        }, t.Ya = function () {
          this.b.Ya();
        }, t.subscribe = function (t) {
          if (U(this.h, t) || this.h.push(t), !this.f) {
            var n = this;
            (e = this.g, e.b.get(ju, e.a).then(function (t) {
              return "pending" == t;
            })).then(function (t) {
              t ? Uu(n.g).then(function () {
                Fu(n).s(function (t) {
                  var e = new ao("unknown", null, null, null, new Bi("operation-not-supported-in-this-environment"));
                  Wu(t) && n.bb(e);
                });
              }) : qu(n);
            }).s(function () {
              qu(n);
            });
          }

          var e;
        }, t.unsubscribe = function (e) {
          K(this.h, function (t) {
            return t == e;
          });
        }, t.bb = function (t) {
          if (!t) throw new Bi("invalid-auth-event");
          if (6e5 <= k() - this.u && (this.i = {}, this.u = 0), t && t.getUid() && this.i.hasOwnProperty(t.getUid())) return !1;

          for (var e = !1, n = 0; n < this.h.length; n++) {
            var i = this.h[n];

            if (i.xb(t.c, t.b)) {
              (e = this.c[t.c]) && (e.h(t, i), t && (t.f || t.b) && (this.i[t.getUid()] = !0, this.u = k())), e = !0;
              break;
            }
          }

          return Yu(this.b), e;
        };
        var Hu = new ki(2e3, 1e4),
            Bu = new ki(3e4, 6e4);

        function Gu(t, e, n, i, r, o) {
          return t.a.Db(e, n, i, function () {
            t.f || (t.f = !0, t.a.wa(t.m));
          }, function () {
            t.reset();
          }, r, o);
        }

        function Wu(t) {
          return !(!t || "auth/cordova-not-ready" != t.code);
        }

        Vu.prototype.fa = function () {
          return this.b.fa();
        }, Vu.prototype.Ca = function (t, e, n) {
          var i,
              r,
              o = this;
          return (r = this.g, r.b.set(ju, "pending", r.a)).then(function () {
            return o.a.Ca(t, e, n).s(function (t) {
              if (Wu(t)) throw new Bi("operation-not-supported-in-this-environment");
              return i = t, Uu(o.g).then(function () {
                throw i;
              });
            }).then(function () {
              return o.a.Pb() ? new gt(function () {}) : Uu(o.g).then(function () {
                return o.fa();
              }).then(function () {}).s(function () {});
            });
          });
        }, Vu.prototype.Ea = function (e, n, t, i) {
          return this.a.Ea(t, function (t) {
            e.ha(n, null, t, i);
          }, Hu.get());
        };
        var Xu = {};

        function Ju(t, e, n) {
          var i = e + ":" + n;
          return Xu[i] || (Xu[i] = new Vu(t, e, n)), Xu[i];
        }

        function zu() {
          this.b = null, this.f = [], this.c = [], this.a = null, this.i = this.g = !1;
        }

        function Yu(t) {
          t.g || (t.g = !0, Zu(t, !1, null, null));
        }

        function $u(t, e) {
          if (t.b = function () {
            return Et(e);
          }, t.f.length) for (var n = 0; n < t.f.length; n++) t.f[n](e);
        }

        function Zu(t, e, n, i) {
          e ? i ? function (t, e) {
            if (t.b = function () {
              return St(e);
            }, t.c.length) for (var n = 0; n < t.c.length; n++) t.c[n](e);
          }(t, i) : $u(t, n) : $u(t, {
            user: null
          }), t.f = [], t.c = [];
        }

        function Qu() {}

        function tc() {
          this.ub = !1, Object.defineProperty(this, "appVerificationDisabled", {
            get: function get() {
              return this.ub;
            },
            set: function set(t) {
              this.ub = t;
            },
            enumerable: !1
          });
        }

        function ec(t, e) {
          this.a = e, Ci(this, "verificationId", t);
        }

        function nc(t, e, n, i) {
          return new no(t).Ua(e, n).then(function (t) {
            return new ec(t, i);
          });
        }

        function ic(t) {
          var e = hr(t);
          if (!(e && e.exp && e.auth_time && e.iat)) throw new Bi("internal-error", "An internal error occurred. The token obtained by Firebase appears to be malformed. Please retry the operation.");
          Ri(this, {
            token: t,
            expirationTime: Si(1e3 * e.exp),
            authTime: Si(1e3 * e.auth_time),
            issuedAtTime: Si(1e3 * e.iat),
            signInProvider: e.firebase && e.firebase.sign_in_provider ? e.firebase.sign_in_provider : null,
            claims: e
          });
        }

        function rc(t, e, n) {
          if (this.h = t, this.i = e, this.g = n, this.c = 3e4, this.f = 96e4, this.b = null, this.a = this.c, this.f < this.c) throw Error("Proactive refresh lower bound greater than upper bound!");
        }

        function oc(t, e) {
          return e ? (t.a = t.c, t.g()) : (e = t.a, t.a *= 2, t.a > t.f && (t.a = t.f), e);
        }

        function ac(t) {
          this.f = t, this.b = this.a = null, this.c = 0;
        }

        function sc(t, e) {
          var n = e[ya],
              i = e.refreshToken;
          e = uc(e.expiresIn), t.b = n, t.c = e, t.a = i;
        }

        function uc(t) {
          return k() + 1e3 * parseInt(t, 10);
        }

        function cc(e, t) {
          return (i = e.f, r = t, new gt(function (e, n) {
            "refresh_token" == r.grant_type && r.refresh_token || "authorization_code" == r.grant_type && r.code ? Aa(i, i.i + "?key=" + encodeURIComponent(i.b), function (t) {
              t ? t.error ? n(ms(t)) : t.access_token && t.refresh_token ? e(t) : n(new Bi("internal-error")) : n(new Bi("network-request-failed"));
            }, "POST", cn(r).toString(), i.f, i.m.get()) : n(new Bi("internal-error"));
          })).then(function (t) {
            return e.b = t.access_token, e.c = uc(t.expires_in), e.a = t.refresh_token, {
              accessToken: e.b,
              expirationTime: e.c,
              refreshToken: e.a
            };
          }).s(function (t) {
            throw "auth/user-token-expired" == t.code && (e.a = null), t;
          });
          var i, r;
        }

        function hc(t, e) {
          this.a = t || null, this.b = e || null, Ri(this, {
            lastSignInTime: Si(e || null),
            creationTime: Si(t || null)
          });
        }

        function lc(t, e, n, i, r, o) {
          Ri(this, {
            uid: t,
            displayName: i || null,
            photoURL: r || null,
            email: n || null,
            phoneNumber: o || null,
            providerId: e
          });
        }

        function fc(t, e) {
          for (var n in ue.call(this, t), e) this[n] = e[n];
        }

        function dc(t, e, n) {
          var i;
          this.G = [], this.l = t.apiKey, this.o = t.appName, this.u = t.authDomain || null, t = Wh.SDK_VERSION ? ci(Wh.SDK_VERSION) : null, this.c = new ga(this.l, dr(lr), t), this.h = new ac(this.c), wc(this, e[ya]), sc(this.h, e), Ci(this, "refreshToken", this.h.a), kc(this, n || {}), Re.call(this), this.I = !1, this.u && di() && (this.a = Ju(this.u, this.l, this.o)), this.N = [], this.i = null, this.A = (i = this, new rc(function () {
            return i.F(!0);
          }, function (t) {
            return !(!t || "auth/network-request-failed" != t.code);
          }, function () {
            var t = i.h.c - k() - 3e5;
            return 0 < t ? t : 0;
          })), this.V = I(this.Ha, this);
          var r = this;
          this.ka = null, this.ta = function (t) {
            r.pa(t.g);
          }, this.X = null, this.O = [], this.sa = function (t) {
            vc(r, t.c);
          }, this.W = null;
        }

        function pc(t, e) {
          t.X && ke(t.X, "languageCodeChanged", t.ta), (t.X = e) && we(e, "languageCodeChanged", t.ta);
        }

        function vc(t, e) {
          t.O = e, Sa(t.c, Wh.SDK_VERSION ? ci(Wh.SDK_VERSION, t.O) : null);
        }

        function mc(t, e) {
          t.W && ke(t.W, "frameworkChanged", t.sa), (t.W = e) && we(e, "frameworkChanged", t.sa);
        }

        function gc(e) {
          try {
            return Wh.app(e.o).auth();
          } catch (t) {
            throw new Bi("internal-error", "No firebase.auth.Auth instance is available for the Firebase App '" + e.o + "'!");
          }
        }

        function bc(t) {
          t.D || t.A.b || (t.A.start(), ke(t, "tokenChanged", t.V), we(t, "tokenChanged", t.V));
        }

        function yc(t) {
          ke(t, "tokenChanged", t.V), t.A.stop();
        }

        function wc(t, e) {
          t.ra = e, Ci(t, "_lat", e);
        }

        function Ic(t) {
          for (var e = [], n = 0; n < t.N.length; n++) e.push(t.N[n](t));

          return Nt(e).then(function () {
            return t;
          });
        }

        function Tc(t) {
          t.a && !t.I && (t.I = !0, t.a.subscribe(t));
        }

        function kc(t, e) {
          Ri(t, {
            uid: e.uid,
            displayName: e.displayName || null,
            photoURL: e.photoURL || null,
            email: e.email || null,
            emailVerified: e.emailVerified || !1,
            phoneNumber: e.phoneNumber || null,
            isAnonymous: e.isAnonymous || !1,
            metadata: new hc(e.createdAt, e.lastLoginAt),
            providerData: []
          });
        }

        function Ec() {}

        function Sc(t) {
          return Et().then(function () {
            if (t.D) throw new Bi("app-deleted");
          });
        }

        function Ac(t) {
          return M(t.providerData, function (t) {
            return t.providerId;
          });
        }

        function Nc(t, e) {
          e && (Oc(t, e.providerId), t.providerData.push(e));
        }

        function Oc(t, e) {
          K(t.providerData, function (t) {
            return t.providerId == e;
          });
        }

        function _c(t, e, n) {
          ("uid" != e || n) && t.hasOwnProperty(e) && Ci(t, e, n);
        }

        function Pc(e, t) {
          var n, i, r;
          e != t && (Ri(e, {
            uid: t.uid,
            displayName: t.displayName,
            photoURL: t.photoURL,
            email: t.email,
            emailVerified: t.emailVerified,
            phoneNumber: t.phoneNumber,
            isAnonymous: t.isAnonymous,
            providerData: []
          }), t.metadata ? Ci(e, "metadata", new hc((r = t.metadata).a, r.b)) : Ci(e, "metadata", new hc()), x(t.providerData, function (t) {
            Nc(e, t);
          }), n = e.h, i = t.h, n.b = i.b, n.a = i.a, n.c = i.c, Ci(e, "refreshToken", e.h.a));
        }

        function Cc(r) {
          return r.F().then(function (t) {
            var e,
                n,
                i = r.isAnonymous;
            return (e = r, n = t, ps(e.c, za, {
              idToken: n
            }).then(I(e.xc, e))).then(function () {
              return i || _c(r, "isAnonymous", !1), t;
            });
          });
        }

        function Rc(t, e) {
          e[ya] && t.ra != e[ya] && (sc(t.h, e), t.dispatchEvent(new fc("tokenChanged")), wc(t, e[ya]), _c(t, "refreshToken", t.h.a));
        }

        function Dc(t, e) {
          return Cc(t).then(function () {
            if (U(Ac(t), e)) return Ic(t).then(function () {
              throw new Bi("provider-already-linked");
            });
          });
        }

        function Lc(t, e, n) {
          return Di({
            user: t,
            credential: ro(e),
            additionalUserInfo: e = br(e),
            operationType: n
          });
        }

        function xc(t, e) {
          return Rc(t, e), t.reload().then(function () {
            return t;
          });
        }

        function Mc(n, i, t, e, r) {
          if (!di()) return St(new Bi("operation-not-supported-in-this-environment"));
          if (n.i && !r) return St(n.i);
          var o = gr(t.providerId),
              a = wi(n.uid + ":::"),
              s = null;
          (!mi() || ei()) && n.u && t.isOAuthProvider && (s = _s(n.u, n.l, n.o, i, t, null, a, Wh.SDK_VERSION || null));
          var u = Yn(s, o && o.Ba, o && o.Aa);
          return e = e().then(function () {
            if (Uc(n), !r) return n.F().then(function () {});
          }).then(function () {
            return Gu(n.a, u, i, t, a, !!s);
          }).then(function () {
            return new gt(function (t, e) {
              n.ha(i, null, new Bi("cancelled-popup-request"), n.g || null), n.f = t, n.v = e, n.g = a, n.b = n.a.Ea(n, i, u, a);
            });
          }).then(function (t) {
            return u && zn(u), t ? Di(t) : null;
          }).s(function (t) {
            throw u && zn(u), t;
          }), Vc(n, e, r);
        }

        function jc(e, t, n, i, r) {
          if (!di()) return St(new Bi("operation-not-supported-in-this-environment"));
          if (e.i && !r) return St(e.i);
          var o = null,
              a = wi(e.uid + ":::");
          return i = i().then(function () {
            if (Uc(e), !r) return e.F().then(function () {});
          }).then(function () {
            return e.aa = a, Ic(e);
          }).then(function (t) {
            return e.ba && (t = (t = e.ba).b.set(qc, e.w(), t.a)), t;
          }).then(function () {
            return e.a.Ca(t, n, a);
          }).s(function (t) {
            if (o = t, e.ba) return Hc(e.ba);
            throw o;
          }).then(function () {
            if (o) throw o;
          }), Vc(e, i, r);
        }

        function Uc(t) {
          if (!t.a || !t.I) {
            if (t.a && !t.I) throw new Bi("internal-error");
            throw new Bi("auth-domain-config-required");
          }
        }

        function Vc(t, e, n) {
          var i,
              r,
              o,
              a = (r = e, o = n, (i = t).i && !o ? (r.cancel(), St(i.i)) : r.s(function (t) {
            throw !t || "auth/user-disabled" != t.code && "auth/user-token-expired" != t.code || (i.i || i.dispatchEvent(new fc("userInvalidated")), i.i = t), t;
          }));
          return t.G.push(a), a.ia(function () {
            V(t.G, a);
          }), a;
        }

        function Kc(t) {
          if (!t.apiKey) return null;
          var e = {
            apiKey: t.apiKey,
            authDomain: t.authDomain,
            appName: t.appName
          },
              n = {};
          if (!(t.stsTokenManager && t.stsTokenManager.accessToken && t.stsTokenManager.expirationTime)) return null;
          n[ya] = t.stsTokenManager.accessToken, n.refreshToken = t.stsTokenManager.refreshToken || null, n.expiresIn = (t.stsTokenManager.expirationTime - k()) / 1e3;
          var i = new dc(e, n, t);
          return t.providerData && x(t.providerData, function (t) {
            t && Nc(i, Di(t));
          }), t.redirectEventId && (i.aa = t.redirectEventId), i;
        }

        function Fc(t) {
          this.a = t, this.b = hu();
        }

        zu.prototype.reset = function () {
          this.b = null, this.a && (this.a.cancel(), this.a = null);
        }, zu.prototype.h = function (t, e) {
          if (t) {
            this.reset(), this.g = !0;
            var n = t.c,
                i = t.b,
                r = t.a && "auth/web-storage-unsupported" == t.a.code,
                o = t.a && "auth/operation-not-supported-in-this-environment" == t.a.code;
            this.i = !(!r && !o), "unknown" != n || r || o ? t.a ? (Zu(this, !0, null, t.a), Et()) : e.xa(n, i) ? function (e, t, n) {
              n = n.xa(t.c, t.b);
              var i = t.g,
                  r = t.f,
                  o = t.h,
                  a = !!t.c.match(/Redirect$/);
              n(i, r, o).then(function (t) {
                Zu(e, a, t, null);
              }).s(function (t) {
                Zu(e, a, null, t);
              });
            }(this, t, e) : St(new Bi("invalid-auth-event")) : (Zu(this, !1, null, null), Et());
          } else St(new Bi("invalid-auth-event"));
        }, zu.prototype.Ya = function () {
          this.g && !this.i && Zu(this, !1, null, null);
        }, zu.prototype.fa = function () {
          var r = this;
          return new gt(function (t, e) {
            var n, i;
            r.b ? r.b().then(t, e) : (r.f.push(t), r.c.push(e), n = r, i = new Bi("timeout"), n.a && n.a.cancel(), n.a = je(Bu.get()).then(function () {
              n.b || (n.g = !0, Zu(n, !0, null, i));
            }));
          });
        }, Qu.prototype.h = function (t, e) {
          if (t) {
            var n = t.c,
                i = t.b;
            t.a ? (e.ha(t.c, null, t.a, t.b), Et()) : e.xa(n, i) ? (o = e, a = (r = t).b, s = r.c, o.xa(s, a)(r.g, r.f, r.h).then(function (t) {
              o.ha(s, t, null, a);
            }).s(function (t) {
              o.ha(s, null, t, a);
            })) : St(new Bi("invalid-auth-event"));
          } else St(new Bi("invalid-auth-event"));

          var r, o, a, s;
        }, ec.prototype.confirm = function (t) {
          return t = io(this.verificationId, t), this.a(t);
        }, rc.prototype.start = function () {
          this.a = this.c, function e(n, t) {
            n.stop();
            n.b = je(oc(n, t)).then(function () {
              return e = l.document, _n2 = null, Ei() || !e ? Et() : new gt(function (t) {
                _n2 = function n() {
                  Ei() && (e.removeEventListener("visibilitychange", _n2, !1), t());
                }, e.addEventListener("visibilitychange", _n2, !1);
              }).s(function (t) {
                throw e.removeEventListener("visibilitychange", _n2, !1), t;
              });

              var e, _n2;
            }).then(function () {
              return n.h();
            }).then(function () {
              e(n, !0);
            }).s(function (t) {
              n.i(t) && e(n, !1);
            });
          }(this, !0);
        }, rc.prototype.stop = function () {
          this.b && (this.b.cancel(), this.b = null);
        }, ac.prototype.w = function () {
          return {
            apiKey: this.f.b,
            refreshToken: this.a,
            accessToken: this.b,
            expirationTime: this.c
          };
        }, ac.prototype.getToken = function (t) {
          return t = !!t, this.b && !this.a ? St(new Bi("user-token-expired")) : t || !this.b || k() > this.c - 3e4 ? this.a ? cc(this, {
            grant_type: "refresh_token",
            refresh_token: this.a
          }) : Et(null) : Et({
            accessToken: this.b,
            expirationTime: this.c,
            refreshToken: this.a
          });
        }, hc.prototype.w = function () {
          return {
            lastLoginAt: this.b,
            createdAt: this.a
          };
        }, E(fc, ue), E(dc, Re), dc.prototype.pa = function (t) {
          this.ka = t, Ea(this.c, t);
        }, dc.prototype.ea = function () {
          return this.ka;
        }, dc.prototype.ya = function () {
          return q(this.O);
        }, dc.prototype.Ha = function () {
          this.A.b && (this.A.stop(), this.A.start());
        }, Ci(dc.prototype, "providerId", "firebase"), (t = dc.prototype).reload = function () {
          var t = this;
          return Vc(this, Sc(this).then(function () {
            return Cc(t).then(function () {
              return Ic(t);
            }).then(Ec);
          }));
        }, t.bc = function (t) {
          return this.F(t).then(function (t) {
            return new ic(t);
          });
        }, t.F = function (t) {
          var e = this;
          return Vc(this, Sc(this).then(function () {
            return e.h.getToken(t);
          }).then(function (t) {
            if (!t) throw new Bi("internal-error");
            return t.accessToken != e.ra && (wc(e, t.accessToken), e.dispatchEvent(new fc("tokenChanged"))), _c(e, "refreshToken", t.refreshToken), t.accessToken;
          }));
        }, t.xc = function (t) {
          if (!(t = t.users) || !t.length) throw new Bi("internal-error");
          kc(this, {
            uid: (t = t[0]).localId,
            displayName: t.displayName,
            photoURL: t.photoUrl,
            email: t.email,
            emailVerified: !!t.emailVerified,
            phoneNumber: t.phoneNumber,
            lastLoginAt: t.lastLoginAt,
            createdAt: t.createdAt
          });

          for (var e = (i = (i = t).providerUserInfo) && i.length ? M(i, function (t) {
            return new lc(t.rawId, t.providerId, t.email, t.displayName, t.photoUrl, t.phoneNumber);
          }) : [], n = 0; n < e.length; n++) Nc(this, e[n]);

          var i;

          _c(this, "isAnonymous", !(this.email && t.passwordHash || this.providerData && this.providerData.length));
        }, t.yc = function (t) {
          return _i("firebase.User.prototype.reauthenticateAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.reauthenticateWithCredential instead."), this.gb(t);
        }, t.gb = function (t) {
          var e = this,
              n = null;
          return Vc(this, t.f(this.c, this.uid).then(function (t) {
            return Rc(e, t), n = Lc(e, t, "reauthenticate"), e.i = null, e.reload();
          }).then(function () {
            return n;
          }), !0);
        }, t.pc = function (t) {
          return _i("firebase.User.prototype.linkAndRetrieveDataWithCredential is deprecated. Please use firebase.User.prototype.linkWithCredential instead."), this.eb(t);
        }, t.eb = function (e) {
          var n = this,
              i = null;
          return Vc(this, Dc(this, e.providerId).then(function () {
            return n.F();
          }).then(function (t) {
            return e.b(n.c, t);
          }).then(function (t) {
            return i = Lc(n, t, "link"), xc(n, t);
          }).then(function () {
            return i;
          }));
        }, t.qc = function (t, e) {
          var n = this;
          return Vc(this, Dc(this, "phone").then(function () {
            return nc(gc(n), t, e, I(n.eb, n));
          }));
        }, t.zc = function (t, e) {
          var n = this;
          return Vc(this, Et().then(function () {
            return nc(gc(n), t, e, I(n.gb, n));
          }), !0);
        }, t.rb = function (e) {
          var n = this;
          return Vc(this, this.F().then(function (t) {
            return n.c.rb(t, e);
          }).then(function (t) {
            return Rc(n, t), n.reload();
          }));
        }, t.Pc = function (e) {
          var n = this;
          return Vc(this, this.F().then(function (t) {
            return e.b(n.c, t);
          }).then(function (t) {
            return Rc(n, t), n.reload();
          }));
        }, t.sb = function (e) {
          var n = this;
          return Vc(this, this.F().then(function (t) {
            return n.c.sb(t, e);
          }).then(function (t) {
            return Rc(n, t), n.reload();
          }));
        }, t.tb = function (e) {
          if (void 0 === e.displayName && void 0 === e.photoURL) return Sc(this);
          var n = this;
          return Vc(this, this.F().then(function (t) {
            return n.c.tb(t, {
              displayName: e.displayName,
              photoUrl: e.photoURL
            });
          }).then(function (t) {
            return Rc(n, t), _c(n, "displayName", t.displayName || null), _c(n, "photoURL", t.photoUrl || null), x(n.providerData, function (t) {
              "password" === t.providerId && (Ci(t, "displayName", n.displayName), Ci(t, "photoURL", n.photoURL));
            }), Ic(n);
          }).then(Ec));
        }, t.Nc = function (r) {
          var o = this;
          return Vc(this, Cc(this).then(function (t) {
            return U(Ac(o), r) ? (e = o.c, n = t, i = [r], ps(e, Wa, {
              idToken: n,
              deleteProvider: i
            })).then(function (t) {
              var e = {};
              return x(t.providerUserInfo || [], function (t) {
                e[t.providerId] = !0;
              }), x(Ac(o), function (t) {
                e[t] || Oc(o, t);
              }), e[no.PROVIDER_ID] || Ci(o, "phoneNumber", null), Ic(o);
            }) : Ic(o).then(function () {
              throw new Bi("no-such-provider");
            });
            var e, n, i;
          }));
        }, t.delete = function () {
          var e = this;
          return Vc(this, this.F().then(function (t) {
            return ps(e.c, Ga, {
              idToken: t
            });
          }).then(function () {
            e.dispatchEvent(new fc("userDeleted"));
          })).then(function () {
            for (var t = 0; t < e.G.length; t++) e.G[t].cancel("app-deleted");

            pc(e, null), mc(e, null), e.G = [], e.D = !0, yc(e), Ci(e, "refreshToken", null), e.a && e.a.unsubscribe(e);
          });
        }, t.xb = function (t, e) {
          return !!("linkViaPopup" == t && (this.g || null) == e && this.f || "reauthViaPopup" == t && (this.g || null) == e && this.f || "linkViaRedirect" == t && (this.aa || null) == e || "reauthViaRedirect" == t && (this.aa || null) == e);
        }, t.ha = function (t, e, n, i) {
          "linkViaPopup" != t && "reauthViaPopup" != t || i != (this.g || null) || (n && this.v ? this.v(n) : e && !n && this.f && this.f(e), this.b && (this.b.cancel(), this.b = null), delete this.f, delete this.v);
        }, t.xa = function (t, e) {
          return "linkViaPopup" == t && e == (this.g || null) ? I(this.Bb, this) : "reauthViaPopup" == t && e == (this.g || null) ? I(this.Cb, this) : "linkViaRedirect" == t && (this.aa || null) == e ? I(this.Bb, this) : "reauthViaRedirect" == t && (this.aa || null) == e ? I(this.Cb, this) : null;
        }, t.rc = function (t) {
          var e = this;
          return Mc(this, "linkViaPopup", t, function () {
            return Dc(e, t.providerId).then(function () {
              return Ic(e);
            });
          }, !1);
        }, t.Ac = function (t) {
          return Mc(this, "reauthViaPopup", t, function () {
            return Et();
          }, !0);
        }, t.sc = function (t) {
          var e = this;
          return jc(this, "linkViaRedirect", t, function () {
            return Dc(e, t.providerId);
          }, !1);
        }, t.Bc = function (t) {
          return jc(this, "reauthViaRedirect", t, function () {
            return Et();
          }, !0);
        }, t.Bb = function (e, n, i) {
          var r = this;
          this.b && (this.b.cancel(), this.b = null);
          var o = null;
          return Vc(this, this.F().then(function (t) {
            return Ua(r.c, {
              requestUri: e,
              postBody: i,
              sessionId: n,
              idToken: t
            });
          }).then(function (t) {
            return o = Lc(r, t, "link"), xc(r, t);
          }).then(function () {
            return o;
          }));
        }, t.Cb = function (t, e, n) {
          var i = this;
          this.b && (this.b.cancel(), this.b = null);
          var r = null;
          return Vc(this, Et().then(function () {
            return Pr(Va(i.c, {
              requestUri: t,
              sessionId: e,
              postBody: n
            }), i.uid);
          }).then(function (t) {
            return r = Lc(i, t, "reauthenticate"), Rc(i, t), i.i = null, i.reload();
          }).then(function () {
            return r;
          }), !0);
        }, t.jb = function (e) {
          var n = this,
              i = null;
          return Vc(this, this.F().then(function (t) {
            return i = t, void 0 === e || rt(e) ? {} : rr(new Ji(e));
          }).then(function (t) {
            return n.c.jb(i, t);
          }).then(function (t) {
            if (n.email != t) return n.reload();
          }).then(function () {}));
        }, t.toJSON = function () {
          return this.w();
        }, t.w = function () {
          var e = {
            uid: this.uid,
            displayName: this.displayName,
            photoURL: this.photoURL,
            email: this.email,
            emailVerified: this.emailVerified,
            phoneNumber: this.phoneNumber,
            isAnonymous: this.isAnonymous,
            providerData: [],
            apiKey: this.l,
            appName: this.o,
            authDomain: this.u,
            stsTokenManager: this.h.w(),
            redirectEventId: this.aa || null
          };
          return this.metadata && ct(e, this.metadata.w()), x(this.providerData, function (t) {
            e.providerData.push(function (t) {
              var e,
                  n = {};

              for (e in t) t.hasOwnProperty(e) && (n[e] = t[e]);

              return n;
            }(t));
          }), e;
        };
        var qc = {
          name: "redirectUser",
          B: "session"
        };

        function Hc(t) {
          return du(t.b, qc, t.a);
        }

        function Bc(t) {
          var e, n, i, r, o, a, s, u, c;
          this.a = t, this.b = hu(), this.c = null, this.f = (e = this, n = Xc("local"), i = Xc("session"), r = Xc("none"), (o = e.b, a = n, s = e.a, u = fu(a, s), c = lu(o, a.B), o.get(a, s).then(function (t) {
            var e = null;

            try {
              e = yi(l.localStorage.getItem(u));
            } catch (t) {}

            if (e && !t) return l.localStorage.removeItem(u), o.set(a, e, s);
            e && t && "localStorage" != c.type && l.localStorage.removeItem(u);
          })).then(function () {
            return e.b.get(i, e.a);
          }).then(function (t) {
            return t ? i : e.b.get(r, e.a).then(function (t) {
              return t ? r : e.b.get(n, e.a).then(function (t) {
                return t ? n : e.b.get(Wc, e.a).then(function (t) {
                  return t ? Xc(t) : n;
                });
              });
            });
          }).then(function (t) {
            return e.c = t, Gc(e, t.B);
          }).s(function () {
            e.c || (e.c = n);
          })), this.b.addListener(Xc("local"), this.a, I(this.g, this));
        }

        function Gc(t, e) {
          var n,
              s,
              i = [];

          for (n in uu) uu[n] !== e && i.push(du(t.b, Xc(uu[n]), t.a));

          return i.push(du(t.b, Wc, t.a)), s = i, new gt(function (n, e) {
            var i = s.length,
                r = [];
            if (i) for (var t = function t(_t3, e) {
              i--, r[_t3] = e, 0 == i && n(r);
            }, o = function o(t) {
              e(t);
            }, a = 0; a < s.length; a++) At(s[a], T(t, a), o);else n(r);
          });
        }

        Bc.prototype.g = function () {
          var e = this,
              n = Xc("local");
          $c(this, function () {
            return Et().then(function () {
              return e.c && "local" != e.c.B ? e.b.get(n, e.a) : null;
            }).then(function (t) {
              if (t) return Gc(e, "local").then(function () {
                e.c = n;
              });
            });
          });
        };

        var Wc = {
          name: "persistence",
          B: "session"
        };

        function Xc(t) {
          return {
            name: "authUser",
            B: t
          };
        }

        function Jc(t, e) {
          return $c(t, function () {
            return t.b.set(t.c, e.w(), t.a);
          });
        }

        function zc(t) {
          return $c(t, function () {
            return du(t.b, t.c, t.a);
          });
        }

        function Yc(t, e) {
          return $c(t, function () {
            return t.b.get(t.c, t.a).then(function (t) {
              return t && e && (t.authDomain = e), Kc(t || {});
            });
          });
        }

        function $c(t, e) {
          return t.f = t.f.then(e, e), t.f;
        }

        function Zc(t) {
          if (this.l = !1, Ci(this, "settings", new tc()), Ci(this, "app", t), !oh(this).options || !oh(this).options.apiKey) throw new Bi("invalid-api-key");
          var n, e, i, r, o, a, s, u, c, h, l, f;
          t = Wh.SDK_VERSION ? ci(Wh.SDK_VERSION) : null, this.c = new ga(oh(this).options && oh(this).options.apiKey, dr(lr), t), this.N = [], this.o = [], this.I = [], this.Sb = Wh.INTERNAL.createSubscribe(I(this.mc, this)), this.O = void 0, this.Tb = Wh.INTERNAL.createSubscribe(I(this.nc, this)), ih(this, null), this.h = new Bc(oh(this).options.apiKey + ":" + oh(this).name), this.A = new Fc(oh(this).options.apiKey + ":" + oh(this).name), this.V = ch(this, (e = oh(n = this).options.authDomain, i = (r = n, o = (a = r.A, s = oh(r).options.authDomain, a.b.get(qc, a.a).then(function (t) {
            return t && s && (t.authDomain = s), Kc(t || {});
          })).then(function (t) {
            return (r.D = t) && (t.ba = r.A), Hc(r.A);
          }), ch(r, o)).then(function () {
            return Yc(n.h, e);
          }).then(function (e) {
            return e ? (e.ba = n.A, n.D && (n.D.aa || null) == (e.aa || null) ? e : e.reload().then(function () {
              return Jc(n.h, e).then(function () {
                return e;
              });
            }).s(function (t) {
              return "auth/network-request-failed" == t.code ? e : zc(n.h);
            })) : null;
          }).then(function (t) {
            ih(n, t || null);
          }), ch(n, i))), this.i = ch(this, (u = this).V.then(function () {
            return u.fa();
          }).s(function () {}).then(function () {
            if (!u.l) return u.ka();
          }).s(function () {}).then(function () {
            if (!u.l) {
              u.X = !0;
              var t = u.h;
              t.b.addListener(Xc("local"), t.a, u.ka);
            }
          })), this.X = !1, this.ka = I(this.Kc, this), this.Ha = I(this.Z, this), this.ra = I(this.$b, this), this.sa = I(this.jc, this), this.ta = I(this.kc, this), h = oh(c = this).options.authDomain, l = oh(c).options.apiKey, h && di() && (c.Rb = c.V.then(function () {
            if (!c.l) {
              if (c.a = Ju(h, l, oh(c).name), c.a.subscribe(c), ah(c) && Tc(ah(c)), c.D) {
                Tc(c.D);
                var t = c.D;
                t.pa(c.ea()), pc(t, c), vc(t = c.D, c.G), mc(t, c), c.D = null;
              }

              return c.a;
            }
          })), this.INTERNAL = {}, this.INTERNAL.delete = I(this.delete, this), this.INTERNAL.logFramework = I(this.tc, this), this.u = 0, Re.call(this), f = this, Object.defineProperty(f, "lc", {
            get: function get() {
              return this.ea();
            },
            set: function set(t) {
              this.pa(t);
            },
            enumerable: !1
          }), f.W = null, this.G = [];
        }

        function Qc(t) {
          ue.call(this, "languageCodeChanged"), this.g = t;
        }

        function th(t) {
          ue.call(this, "frameworkChanged"), this.c = t;
        }

        function eh(t) {
          return t.Rb || St(new Bi("auth-domain-config-required"));
        }

        function nh(o, a) {
          var s = {};
          return s.apiKey = oh(o).options.apiKey, s.authDomain = oh(o).options.authDomain, s.appName = oh(o).name, o.V.then(function () {
            return t = s, e = a, n = o.A, i = o.ya(), r = new dc(t, e), n && (r.ba = n), i && vc(r, i), r.reload().then(function () {
              return r;
            });
            var t, e, n, i, r;
          }).then(function (t) {
            return ah(o) && t.uid == ah(o).uid ? Pc(ah(o), t) : (ih(o, t), Tc(t)), o.Z(t);
          }).then(function () {
            uh(o);
          });
        }

        function ih(t, e) {
          var n, i;
          ah(t) && (n = ah(t), i = t.Ha, K(n.N, function (t) {
            return t == i;
          }), ke(ah(t), "tokenChanged", t.ra), ke(ah(t), "userDeleted", t.sa), ke(ah(t), "userInvalidated", t.ta), yc(ah(t))), e && (e.N.push(t.Ha), we(e, "tokenChanged", t.ra), we(e, "userDeleted", t.sa), we(e, "userInvalidated", t.ta), 0 < t.u && bc(e)), Ci(t, "currentUser", e), e && (e.pa(t.ea()), pc(e, t), vc(e, t.G), mc(e, t));
        }

        function rh(e, t) {
          var n = null,
              i = null;
          return ch(e, t.then(function (t) {
            return n = ro(t), i = br(t), nh(e, t);
          }).then(function () {
            return Di({
              user: ah(e),
              credential: n,
              additionalUserInfo: i,
              operationType: "signIn"
            });
          }));
        }

        function oh(t) {
          return t.app;
        }

        function ah(t) {
          return t.currentUser;
        }

        function sh(t) {
          return ah(t) && ah(t)._lat || null;
        }

        function uh(t) {
          if (t.X) {
            for (var e = 0; e < t.o.length; e++) t.o[e] && t.o[e](sh(t));

            if (t.O !== t.getUid() && t.I.length) for (t.O = t.getUid(), e = 0; e < t.I.length; e++) t.I[e] && t.I[e](sh(t));
          }
        }

        function ch(t, e) {
          return t.N.push(e), e.ia(function () {
            V(t.N, e);
          }), e;
        }

        function hh() {}

        function lh() {
          this.a = {}, this.b = 1e12;
        }

        Bc.prototype.mb = function (e) {
          var n = null,
              i = this;
          return function (t) {
            var e = new Bi("invalid-persistence-type"),
                n = new Bi("unsupported-persistence-type");

            t: {
              for (i in uu) if (uu[i] == t) {
                var i = !0;
                break t;
              }

              i = !1;
            }

            if (!i || "string" != typeof t) throw e;

            switch (ii()) {
              case "ReactNative":
                if ("session" === t) throw n;
                break;

              case "Node":
                if ("none" !== t) throw n;
                break;

              default:
                if (!fi() && "none" !== t) throw n;
            }
          }(e), $c(this, function () {
            return e != i.c.B ? i.b.get(i.c, i.a).then(function (t) {
              return n = t, Gc(i, e);
            }).then(function () {
              if (i.c = Xc(e), n) return i.b.set(i.c, n, i.a);
            }) : Et();
          });
        }, E(Zc, Re), E(Qc, ue), E(th, ue), (t = Zc.prototype).mb = function (t) {
          return ch(this, t = this.h.mb(t));
        }, t.pa = function (t) {
          this.W === t || this.l || (this.W = t, Ea(this.c, this.W), this.dispatchEvent(new Qc(this.ea())));
        }, t.ea = function () {
          return this.W;
        }, t.Qc = function () {
          var t = l.navigator;
          this.pa(t && (t.languages && t.languages[0] || t.language || t.userLanguage) || null);
        }, t.tc = function (t) {
          this.G.push(t), Sa(this.c, Wh.SDK_VERSION ? ci(Wh.SDK_VERSION, this.G) : null), this.dispatchEvent(new th(this.G));
        }, t.ya = function () {
          return q(this.G);
        }, t.toJSON = function () {
          return {
            apiKey: oh(this).options.apiKey,
            authDomain: oh(this).options.authDomain,
            appName: oh(this).name,
            currentUser: ah(this) && ah(this).w()
          };
        }, t.xb = function (t, e) {
          switch (t) {
            case "unknown":
            case "signInViaRedirect":
              return !0;

            case "signInViaPopup":
              return this.g == e && !!this.f;

            default:
              return !1;
          }
        }, t.ha = function (t, e, n, i) {
          "signInViaPopup" == t && this.g == i && (n && this.v ? this.v(n) : e && !n && this.f && this.f(e), this.b && (this.b.cancel(), this.b = null), delete this.f, delete this.v);
        }, t.xa = function (t, e) {
          return "signInViaRedirect" == t || "signInViaPopup" == t && this.g == e && this.f ? I(this.Zb, this) : null;
        }, t.Zb = function (t, e, n) {
          var i = this;
          t = {
            requestUri: t,
            postBody: n,
            sessionId: e
          }, this.b && (this.b.cancel(), this.b = null);
          var r = null,
              o = null,
              a = ja(i.c, t).then(function (t) {
            return r = ro(t), o = br(t), t;
          });
          return ch(this, t = i.V.then(function () {
            return a;
          }).then(function (t) {
            return nh(i, t);
          }).then(function () {
            return Di({
              user: ah(i),
              credential: r,
              additionalUserInfo: o,
              operationType: "signIn"
            });
          }));
        }, t.Ic = function (e) {
          if (!di()) return St(new Bi("operation-not-supported-in-this-environment"));
          var n = this,
              t = gr(e.providerId),
              i = wi(),
              r = null;
          (!mi() || ei()) && oh(this).options.authDomain && e.isOAuthProvider && (r = _s(oh(this).options.authDomain, oh(this).options.apiKey, oh(this).name, "signInViaPopup", e, null, i, Wh.SDK_VERSION || null));
          var o = Yn(r, t && t.Ba, t && t.Aa);
          return ch(this, t = eh(this).then(function (t) {
            return Gu(t, o, "signInViaPopup", e, i, !!r);
          }).then(function () {
            return new gt(function (t, e) {
              n.ha("signInViaPopup", null, new Bi("cancelled-popup-request"), n.g), n.f = t, n.v = e, n.g = i, n.b = n.a.Ea(n, "signInViaPopup", o, i);
            });
          }).then(function (t) {
            return o && zn(o), t ? Di(t) : null;
          }).s(function (t) {
            throw o && zn(o), t;
          }));
        }, t.Jc = function (t) {
          if (!di()) return St(new Bi("operation-not-supported-in-this-environment"));
          var e = this;
          return ch(this, eh(this).then(function () {
            return $c(t = e.h, function () {
              return t.b.set(Wc, t.c.B, t.a);
            });
            var t;
          }).then(function () {
            return e.a.Ca("signInViaRedirect", t);
          }));
        }, t.fa = function () {
          if (!di()) return St(new Bi("operation-not-supported-in-this-environment"));
          var t = this;
          return ch(this, eh(this).then(function () {
            return t.a.fa();
          }).then(function (t) {
            return t ? Di(t) : null;
          }));
        }, t.Oc = function (t) {
          if (!t) return St(new Bi("null-user"));
          var e = this,
              n = {};
          n.apiKey = oh(this).options.apiKey, n.authDomain = oh(this).options.authDomain, n.appName = oh(this).name;

          var i = function (t, e, n, i) {
            e = e || {
              apiKey: t.l,
              authDomain: t.u,
              appName: t.o
            };
            var r = t.h,
                o = {};
            return o[ya] = r.b, o.refreshToken = r.a, o.expiresIn = (r.c - k()) / 1e3, e = new dc(e, o), n && (e.ba = n), i && vc(e, i), Pc(e, t), e;
          }(t, n, e.A, e.ya());

          return ch(this, this.i.then(function () {
            if (oh(e).options.apiKey != t.l) return i.reload();
          }).then(function () {
            return ah(e) && t.uid == ah(e).uid ? (Pc(ah(e), t), e.Z(t)) : (ih(e, i), Tc(i), e.Z(i));
          }).then(function () {
            uh(e);
          }));
        }, t.pb = function () {
          var t = this;
          return ch(this, this.i.then(function () {
            return ah(t) ? (ih(t, null), zc(t.h).then(function () {
              uh(t);
            })) : Et();
          }));
        }, t.Kc = function () {
          var i = this;
          return Yc(this.h, oh(this).options.authDomain).then(function (t) {
            if (!i.l) {
              var e;

              if (e = ah(i) && t) {
                e = ah(i).uid;
                var n = t.uid;
                e = null != e && "" !== e && null != n && "" !== n && e == n;
              }

              if (e) return Pc(ah(i), t), ah(i).F();
              (ah(i) || t) && (ih(i, t), t && (Tc(t), t.ba = i.A), i.a && i.a.subscribe(i), uh(i));
            }
          });
        }, t.Z = function (t) {
          return Jc(this.h, t);
        }, t.$b = function () {
          uh(this), this.Z(ah(this));
        }, t.jc = function () {
          this.pb();
        }, t.kc = function () {
          this.pb();
        }, t.mc = function (t) {
          var e = this;
          this.addAuthTokenListener(function () {
            t.next(ah(e));
          });
        }, t.nc = function (t) {
          var e,
              n,
              i = this;
          n = function n() {
            t.next(ah(i));
          }, (e = this).I.push(n), ch(e, e.i.then(function () {
            !e.l && U(e.I, n) && e.O !== e.getUid() && (e.O = e.getUid(), n(sh(e)));
          }));
        }, t.vc = function (t, e, n) {
          var i = this;
          return this.X && Promise.resolve().then(function () {
            g(t) ? t(ah(i)) : g(t.next) && t.next(ah(i));
          }), this.Sb(t, e, n);
        }, t.uc = function (t, e, n) {
          var i = this;
          return this.X && Promise.resolve().then(function () {
            i.O = i.getUid(), g(t) ? t(ah(i)) : g(t.next) && t.next(ah(i));
          }), this.Tb(t, e, n);
        }, t.ac = function (t) {
          var e = this;
          return ch(this, this.i.then(function () {
            return ah(e) ? ah(e).F(t).then(function (t) {
              return {
                accessToken: t
              };
            }) : null;
          }));
        }, t.Ec = function (t) {
          var n = this;
          return this.i.then(function () {
            return rh(n, ps(n.c, cs, {
              token: t
            }));
          }).then(function (t) {
            var e = t.user;
            return _c(e, "isAnonymous", !1), n.Z(e), t;
          });
        }, t.Fc = function (t, e) {
          var n = this;
          return this.i.then(function () {
            return rh(n, ps(n.c, hs, {
              email: t,
              password: e
            }));
          });
        }, t.Vb = function (t, e) {
          var n = this;
          return this.i.then(function () {
            return rh(n, ps(n.c, Ha, {
              email: t,
              password: e
            }));
          });
        }, t.Nb = function (t) {
          var e = this;
          return this.i.then(function () {
            return rh(e, t.la(e.c));
          });
        }, t.nb = function (t) {
          return _i("firebase.auth.Auth.prototype.signInAndRetrieveDataWithCredential is deprecated. Please use firebase.auth.Auth.prototype.signInWithCredential instead."), this.Nb(t);
        }, t.ob = function () {
          var n = this;
          return this.i.then(function () {
            var t = ah(n);
            return t && t.isAnonymous ? Di({
              user: t,
              credential: null,
              additionalUserInfo: Di({
                providerId: null,
                isNewUser: !1
              }),
              operationType: "signIn"
            }) : rh(n, n.c.ob()).then(function (t) {
              var e = t.user;
              return _c(e, "isAnonymous", !0), n.Z(e), t;
            });
          });
        }, t.getUid = function () {
          return ah(this) && ah(this).uid || null;
        }, t.Ub = function (t) {
          this.addAuthTokenListener(t), this.u++, 0 < this.u && ah(this) && bc(ah(this));
        }, t.Cc = function (e) {
          var n = this;
          x(this.o, function (t) {
            t == e && n.u--;
          }), this.u < 0 && (this.u = 0), 0 == this.u && ah(this) && yc(ah(this)), this.removeAuthTokenListener(e);
        }, t.addAuthTokenListener = function (t) {
          var e = this;
          this.o.push(t), ch(this, this.i.then(function () {
            e.l || U(e.o, t) && t(sh(e));
          }));
        }, t.removeAuthTokenListener = function (e) {
          K(this.o, function (t) {
            return t == e;
          });
        }, t.delete = function () {
          this.l = !0;

          for (var t = 0; t < this.N.length; t++) this.N[t].cancel("app-deleted");

          return this.N = [], this.h && (t = this.h).b.removeListener(Xc("local"), t.a, this.ka), this.a && (this.a.unsubscribe(this), this.a.Ya()), Promise.resolve();
        }, t.Yb = function (t) {
          return ch(this, ps(this.c, Ba, {
            identifier: t,
            continueUri: pi() ? Wn() : "http://localhost"
          }).then(function (t) {
            return t.signinMethods || [];
          }));
        }, t.oc = function (t) {
          return !!Zr(t);
        }, t.lb = function (e, n) {
          var i = this;
          return ch(this, Et().then(function () {
            var t = new Ji(n);
            if (!t.c) throw new Bi("argument-error", $i + " must be true when sending sign in link to email");
            return rr(t);
          }).then(function (t) {
            return i.c.lb(e, t);
          }).then(function () {}));
        }, t.Rc = function (t) {
          return this.Ka(t).then(function (t) {
            return t.data.email;
          });
        }, t.Za = function (t, e) {
          return ch(this, this.c.Za(t, e).then(function () {}));
        }, t.Ka = function (t) {
          return ch(this, this.c.Ka(t).then(function (t) {
            return new xi(t);
          }));
        }, t.Wa = function (t) {
          return ch(this, this.c.Wa(t).then(function () {}));
        }, t.kb = function (e, t) {
          var n = this;
          return ch(this, Et().then(function () {
            return void 0 === t || rt(t) ? {} : rr(new Ji(t));
          }).then(function (t) {
            return n.c.kb(e, t);
          }).then(function () {}));
        }, t.Hc = function (t, e) {
          return ch(this, nc(this, t, e, I(this.nb, this)));
        }, t.Gc = function (e, n) {
          var i = this;
          return ch(this, Et().then(function () {
            var t = $r(e, n || Wn());
            return i.nb(t);
          }));
        }, hh.prototype.render = function () {}, hh.prototype.reset = function () {}, hh.prototype.getResponse = function () {}, hh.prototype.execute = function () {};
        var fh = null;

        function dh(t, e) {
          return (e = ph(e)) && t.a[e] || null;
        }

        function ph(t) {
          return (t = void 0 === t ? 1e12 : t) ? t.toString() : null;
        }

        function vh(t, e) {
          this.g = !1, this.c = e, this.a = this.b = null, this.h = "invisible" !== this.c.size, this.f = xn(t);
          var n = this;
          this.i = function () {
            n.execute();
          }, this.h ? this.execute() : we(this.f, "click", this.i);
        }

        function mh(t) {
          if (t.g) throw Error("reCAPTCHA mock was already deleted!");
        }

        function gh() {}

        lh.prototype.render = function (t, e) {
          return this.a[this.b.toString()] = new vh(t, e), this.b++;
        }, lh.prototype.reset = function (t) {
          var e = dh(this, t);
          t = ph(t), e && t && (e.delete(), delete this.a[t]);
        }, lh.prototype.getResponse = function (t) {
          return (t = dh(this, t)) ? t.getResponse() : null;
        }, lh.prototype.execute = function (t) {
          (t = dh(this, t)) && t.execute();
        }, vh.prototype.getResponse = function () {
          return mh(this), this.b;
        }, vh.prototype.execute = function () {
          mh(this);
          var n = this;
          this.a || (this.a = setTimeout(function () {
            n.b = function () {
              for (var t = 50, e = []; 0 < t;) e.push("1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ".charAt(Math.floor(62 * Math.random()))), t--;

              return e.join("");
            }();

            var t = n.c.callback,
                e = n.c["expired-callback"];
            if (t) try {
              t(n.b);
            } catch (t) {}
            n.a = setTimeout(function () {
              if (n.a = null, n.b = null, e) try {
                e();
              } catch (t) {}
              n.h && n.execute();
            }, 6e4);
          }, 500));
        }, vh.prototype.delete = function () {
          mh(this), this.g = !0, clearTimeout(this.a), this.a = null, ke(this.f, "click", this.i);
        }, gh.prototype.g = function () {
          return fh || (fh = new lh()), Et(fh);
        }, gh.prototype.c = function () {};
        var bh = null;

        function yh() {
          this.b = l.grecaptcha ? 1 / 0 : 0, this.f = null, this.a = "__rcb" + Math.floor(1e6 * Math.random()).toString();
        }

        var wh = new mn(yn, "https://www.google.com/recaptcha/api.js?onload=%{onload}&render=explicit&hl=%{hl}"),
            Ih = new ki(3e4, 6e4);
        yh.prototype.g = function (r) {
          var o = this;
          return new gt(function (t, e) {
            var i = setTimeout(function () {
              e(new Bi("network-request-failed"));
            }, Ih.get());
            !l.grecaptcha || r !== o.f && !o.b ? (l[o.a] = function () {
              if (l.grecaptcha) {
                o.f = r;
                var n = l.grecaptcha.render;
                l.grecaptcha.render = function (t, e) {
                  return t = n(t, e), o.b++, t;
                }, clearTimeout(i), t(l.grecaptcha);
              } else clearTimeout(i), e(new Bi("internal-error"));

              delete l[o.a];
            }, Et(ha(Tn(wh, {
              onload: o.a,
              hl: r || ""
            }))).s(function () {
              clearTimeout(i), e(new Bi("internal-error", "Unable to load external reCAPTCHA dependencies!"));
            })) : (clearTimeout(i), t(l.grecaptcha));
          });
        }, yh.prototype.c = function () {
          this.b--;
        };
        var Th = null;

        function kh(t, e, n, i, r, o, a) {
          if (Ci(this, "type", "recaptcha"), this.c = this.f = null, this.D = !1, this.l = e, this.g = null, a = a ? (bh || (bh = new gh()), bh) : (Th || (Th = new yh()), Th), this.o = a, this.a = n || {
            theme: "light",
            type: "image"
          }, this.h = [], this.a[Ah]) throw new Bi("argument-error", "sitekey should not be provided for reCAPTCHA as one is automatically provisioned for the current project.");
          if (this.i = "invisible" === this.a[Nh], !l.document) throw new Bi("operation-not-supported-in-this-environment", "RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment with DOM support.");
          if (!xn(e) || !this.i && xn(e).hasChildNodes()) throw new Bi("argument-error", "reCAPTCHA container is either not found or already contains inner elements!");
          this.u = new ga(t, o || null, r || null), this.v = i || function () {
            return null;
          };
          var s = this;
          this.m = [];
          var u = this.a[Eh];

          this.a[Eh] = function (t) {
            if (Oh(s, t), "function" == typeof u) u(t);else if ("string" == typeof u) {
              var e = li(u, l);
              "function" == typeof e && e(t);
            }
          };

          var c = this.a[Sh];

          this.a[Sh] = function () {
            if (Oh(s, null), "function" == typeof c) c();else if ("string" == typeof c) {
              var t = li(c, l);
              "function" == typeof t && t();
            }
          };
        }

        var Eh = "callback",
            Sh = "expired-callback",
            Ah = "sitekey",
            Nh = "size";

        function Oh(t, e) {
          for (var n = 0; n < t.m.length; n++) try {
            t.m[n](e);
          } catch (t) {}
        }

        function _h(t, e) {
          return t.h.push(e), e.ia(function () {
            V(t.h, e);
          }), e;
        }

        function Ph(t) {
          if (t.D) throw new Bi("internal-error", "RecaptchaVerifier instance has been destroyed.");
        }

        function Ch(t, e, n) {
          var i = !1;

          try {
            this.b = n || Wh.app();
          } catch (t) {
            throw new Bi("argument-error", "No firebase.app.App instance is currently initialized.");
          }

          if (!this.b.options || !this.b.options.apiKey) throw new Bi("invalid-api-key");
          n = this.b.options.apiKey;
          var r = this,
              o = null;

          try {
            o = this.b.auth().ya();
          } catch (t) {}

          try {
            i = this.b.auth().settings.appVerificationDisabledForTesting;
          } catch (t) {}

          o = Wh.SDK_VERSION ? ci(Wh.SDK_VERSION, o) : null, kh.call(this, n, t, e, function () {
            try {
              var e = r.b.auth().ea();
            } catch (t) {
              e = null;
            }

            return e;
          }, o, dr(lr), i);
        }

        function Rh(t, e, n, i) {
          t: {
            n = Array.prototype.slice.call(n);

            for (var r = 0, o = !1, a = 0; a < e.length; a++) if (e[a].optional) o = !0;else {
              if (o) throw new Bi("internal-error", "Argument validator encountered a required argument after an optional argument.");
              r++;
            }

            if (o = e.length, n.length < r || o < n.length) i = "Expected " + (r == o ? 1 == r ? "1 argument" : r + " arguments" : r + "-" + o + " arguments") + " but got " + n.length + ".";else {
              for (r = 0; r < n.length; r++) if (o = e[r].optional && void 0 === n[r], !e[r].M(n[r]) && !o) {
                if (e = e[r], r < 0 || r >= Dh.length) throw new Bi("internal-error", "Argument validator received an unsupported number of arguments.");
                n = Dh[r], i = (i ? "" : n + " argument ") + (e.name ? '"' + e.name + '" ' : "") + "must be " + e.K + ".";
                break t;
              }

              i = null;
            }
          }

          if (i) throw new Bi("argument-error", t + " failed: " + i);
        }

        (t = kh.prototype).za = function () {
          var e = this;
          return this.f ? this.f : this.f = _h(this, Et().then(function () {
            if (pi() && !ni()) return Qn();
            throw new Bi("operation-not-supported-in-this-environment", "RecaptchaVerifier is only supported in a browser HTTP/HTTPS environment.");
          }).then(function () {
            return e.o.g(e.v());
          }).then(function (t) {
            return e.g = t, ps(e.u, ts, {});
          }).then(function (t) {
            e.a[Ah] = t.recaptchaSiteKey;
          }).s(function (t) {
            throw e.f = null, t;
          }));
        }, t.render = function () {
          Ph(this);
          var n = this;
          return _h(this, this.za().then(function () {
            if (null === n.c) {
              var t = n.l;

              if (!n.i) {
                var e = xn(t);
                t = Un("DIV"), e.appendChild(t);
              }

              n.c = n.g.render(t, n.a);
            }

            return n.c;
          }));
        }, t.verify = function () {
          Ph(this);
          var r = this;
          return _h(this, this.render().then(function (e) {
            return new gt(function (n) {
              var t = r.g.getResponse(e);
              if (t) n(t);else {
                var i = function i(t) {
                  var e;
                  t && (e = i, K(r.m, function (t) {
                    return t == e;
                  }), n(t));
                };

                r.m.push(i), r.i && r.g.execute(r.c);
              }
            });
          }));
        }, t.reset = function () {
          Ph(this), null !== this.c && this.g.reset(this.c);
        }, t.clear = function () {
          Ph(this), this.D = !0, this.o.c();

          for (var t = 0; t < this.h.length; t++) this.h[t].cancel("RecaptchaVerifier instance has been destroyed.");

          if (!this.i) {
            t = xn(this.l);

            for (var e; e = t.firstChild;) t.removeChild(e);
          }
        }, E(Ch, kh);
        var Dh = "First Second Third Fourth Fifth Sixth Seventh Eighth Ninth".split(" ");

        function Lh(t, e) {
          return {
            name: t || "",
            K: "a valid string",
            optional: !!e,
            M: h
          };
        }

        function xh(t, e) {
          return {
            name: t || "",
            K: "a boolean",
            optional: !!e,
            M: n
          };
        }

        function Mh(t, e) {
          return {
            name: t || "",
            K: "a valid object",
            optional: !!e,
            M: b
          };
        }

        function jh(t, e) {
          return {
            name: t || "",
            K: "a function",
            optional: !!e,
            M: g
          };
        }

        function Uh(t, e) {
          return {
            name: t || "",
            K: "null",
            optional: !!e,
            M: i
          };
        }

        function Vh(n) {
          return {
            name: n ? n + "Credential" : "credential",
            K: n ? "a valid " + n + " credential" : "a valid credential",
            optional: !1,
            M: function M(t) {
              if (!t) return !1;
              var e = !n || t.providerId === n;
              return !(!t.la || !e);
            }
          };
        }

        function Kh() {
          return {
            name: "applicationVerifier",
            K: "an implementation of firebase.auth.ApplicationVerifier",
            optional: !1,
            M: function M(t) {
              return !!(t && h(t.type) && g(t.verify));
            }
          };
        }

        function Fh(e, n, t, i) {
          return {
            name: t || "",
            K: e.K + " or " + n.K,
            optional: !!i,
            M: function M(t) {
              return e.M(t) || n.M(t);
            }
          };
        }

        function qh(t, e) {
          for (var n in e) {
            var i = e[n].name;
            t[i] = Gh(i, t[n], e[n].j);
          }
        }

        function Hh(t, e) {
          for (var n in e) {
            var i = e[n].name;
            i !== n && Object.defineProperty(t, i, {
              get: T(function (t) {
                return this[t];
              }, n),
              set: T(function (t, e, n, i) {
                Rh(t, [n], [i], !0), this[e] = i;
              }, i, n, e[n].vb),
              enumerable: !0
            });
          }
        }

        function Bh(t, e, n, i) {
          t[e] = Gh(e, n, i);
        }

        function Gh(t, e, n) {
          function i() {
            var t = Array.prototype.slice.call(arguments);
            return Rh(a, n, t), e.apply(this, t);
          }

          if (!n) return e;
          var r,
              o,
              a = (o = (o = t).split("."))[o.length - 1];

          for (r in e) i[r] = e[r];

          for (r in e.prototype) i.prototype[r] = e.prototype[r];

          return i;
        }

        qh(Zc.prototype, {
          Wa: {
            name: "applyActionCode",
            j: [Lh("code")]
          },
          Ka: {
            name: "checkActionCode",
            j: [Lh("code")]
          },
          Za: {
            name: "confirmPasswordReset",
            j: [Lh("code"), Lh("newPassword")]
          },
          Vb: {
            name: "createUserWithEmailAndPassword",
            j: [Lh("email"), Lh("password")]
          },
          Yb: {
            name: "fetchSignInMethodsForEmail",
            j: [Lh("email")]
          },
          fa: {
            name: "getRedirectResult",
            j: []
          },
          oc: {
            name: "isSignInWithEmailLink",
            j: [Lh("emailLink")]
          },
          uc: {
            name: "onAuthStateChanged",
            j: [Fh(Mh(), jh(), "nextOrObserver"), jh("opt_error", !0), jh("opt_completed", !0)]
          },
          vc: {
            name: "onIdTokenChanged",
            j: [Fh(Mh(), jh(), "nextOrObserver"), jh("opt_error", !0), jh("opt_completed", !0)]
          },
          kb: {
            name: "sendPasswordResetEmail",
            j: [Lh("email"), Fh(Mh("opt_actionCodeSettings", !0), Uh(null, !0), "opt_actionCodeSettings", !0)]
          },
          lb: {
            name: "sendSignInLinkToEmail",
            j: [Lh("email"), Mh("actionCodeSettings")]
          },
          mb: {
            name: "setPersistence",
            j: [Lh("persistence")]
          },
          nb: {
            name: "signInAndRetrieveDataWithCredential",
            j: [Vh()]
          },
          ob: {
            name: "signInAnonymously",
            j: []
          },
          Nb: {
            name: "signInWithCredential",
            j: [Vh()]
          },
          Ec: {
            name: "signInWithCustomToken",
            j: [Lh("token")]
          },
          Fc: {
            name: "signInWithEmailAndPassword",
            j: [Lh("email"), Lh("password")]
          },
          Gc: {
            name: "signInWithEmailLink",
            j: [Lh("email"), Lh("emailLink", !0)]
          },
          Hc: {
            name: "signInWithPhoneNumber",
            j: [Lh("phoneNumber"), Kh()]
          },
          Ic: {
            name: "signInWithPopup",
            j: [{
              name: "authProvider",
              K: "a valid Auth provider",
              optional: !1,
              M: function M(t) {
                return !!(t && t.providerId && t.hasOwnProperty && t.hasOwnProperty("isOAuthProvider"));
              }
            }]
          },
          Jc: {
            name: "signInWithRedirect",
            j: [{
              name: "authProvider",
              K: "a valid Auth provider",
              optional: !1,
              M: function M(t) {
                return !!(t && t.providerId && t.hasOwnProperty && t.hasOwnProperty("isOAuthProvider"));
              }
            }]
          },
          Oc: {
            name: "updateCurrentUser",
            j: [Fh({
              name: "user",
              K: "an instance of Firebase User",
              optional: !1,
              M: function M(t) {
                return !!(t && t instanceof dc);
              }
            }, Uh(), "user")]
          },
          pb: {
            name: "signOut",
            j: []
          },
          toJSON: {
            name: "toJSON",
            j: [Lh(null, !0)]
          },
          Qc: {
            name: "useDeviceLanguage",
            j: []
          },
          Rc: {
            name: "verifyPasswordResetCode",
            j: [Lh("code")]
          }
        }), Hh(Zc.prototype, {
          lc: {
            name: "languageCode",
            vb: Fh(Lh(), Uh(), "languageCode")
          }
        }), (Zc.Persistence = uu).LOCAL = "local", Zc.Persistence.SESSION = "session", Zc.Persistence.NONE = "none", qh(dc.prototype, {
          delete: {
            name: "delete",
            j: []
          },
          bc: {
            name: "getIdTokenResult",
            j: [xh("opt_forceRefresh", !0)]
          },
          F: {
            name: "getIdToken",
            j: [xh("opt_forceRefresh", !0)]
          },
          pc: {
            name: "linkAndRetrieveDataWithCredential",
            j: [Vh()]
          },
          eb: {
            name: "linkWithCredential",
            j: [Vh()]
          },
          qc: {
            name: "linkWithPhoneNumber",
            j: [Lh("phoneNumber"), Kh()]
          },
          rc: {
            name: "linkWithPopup",
            j: [{
              name: "authProvider",
              K: "a valid Auth provider",
              optional: !1,
              M: function M(t) {
                return !!(t && t.providerId && t.hasOwnProperty && t.hasOwnProperty("isOAuthProvider"));
              }
            }]
          },
          sc: {
            name: "linkWithRedirect",
            j: [{
              name: "authProvider",
              K: "a valid Auth provider",
              optional: !1,
              M: function M(t) {
                return !!(t && t.providerId && t.hasOwnProperty && t.hasOwnProperty("isOAuthProvider"));
              }
            }]
          },
          yc: {
            name: "reauthenticateAndRetrieveDataWithCredential",
            j: [Vh()]
          },
          gb: {
            name: "reauthenticateWithCredential",
            j: [Vh()]
          },
          zc: {
            name: "reauthenticateWithPhoneNumber",
            j: [Lh("phoneNumber"), Kh()]
          },
          Ac: {
            name: "reauthenticateWithPopup",
            j: [{
              name: "authProvider",
              K: "a valid Auth provider",
              optional: !1,
              M: function M(t) {
                return !!(t && t.providerId && t.hasOwnProperty && t.hasOwnProperty("isOAuthProvider"));
              }
            }]
          },
          Bc: {
            name: "reauthenticateWithRedirect",
            j: [{
              name: "authProvider",
              K: "a valid Auth provider",
              optional: !1,
              M: function M(t) {
                return !!(t && t.providerId && t.hasOwnProperty && t.hasOwnProperty("isOAuthProvider"));
              }
            }]
          },
          reload: {
            name: "reload",
            j: []
          },
          jb: {
            name: "sendEmailVerification",
            j: [Fh(Mh("opt_actionCodeSettings", !0), Uh(null, !0), "opt_actionCodeSettings", !0)]
          },
          toJSON: {
            name: "toJSON",
            j: [Lh(null, !0)]
          },
          Nc: {
            name: "unlink",
            j: [Lh("provider")]
          },
          rb: {
            name: "updateEmail",
            j: [Lh("email")]
          },
          sb: {
            name: "updatePassword",
            j: [Lh("password")]
          },
          Pc: {
            name: "updatePhoneNumber",
            j: [Vh("phone")]
          },
          tb: {
            name: "updateProfile",
            j: [Mh("profile")]
          }
        }), qh(lh.prototype, {
          execute: {
            name: "execute"
          },
          render: {
            name: "render"
          },
          reset: {
            name: "reset"
          },
          getResponse: {
            name: "getResponse"
          }
        }), qh(hh.prototype, {
          execute: {
            name: "execute"
          },
          render: {
            name: "render"
          },
          reset: {
            name: "reset"
          },
          getResponse: {
            name: "getResponse"
          }
        }), qh(gt.prototype, {
          ia: {
            name: "finally"
          },
          s: {
            name: "catch"
          },
          then: {
            name: "then"
          }
        }), Hh(tc.prototype, {
          appVerificationDisabled: {
            name: "appVerificationDisabledForTesting",
            vb: xh("appVerificationDisabledForTesting")
          }
        }), qh(ec.prototype, {
          confirm: {
            name: "confirm",
            j: [Lh("verificationCode")]
          }
        }), Bh(_r, "fromJSON", function (t) {
          t = h(t) ? JSON.parse(t) : t;

          for (var e, n = [Mr, zr, to, Dr], i = 0; i < n.length; i++) if (e = n[i](t)) return e;

          return null;
        }, [Fh(Lh(), Mh(), "json")]), Bh(Yr, "credential", function (t, e) {
          return new Jr(t, e);
        }, [Lh("email"), Lh("password")]), qh(Jr.prototype, {
          w: {
            name: "toJSON",
            j: [Lh(null, !0)]
          }
        }), qh(Kr.prototype, {
          ua: {
            name: "addScope",
            j: [Lh("scope")]
          },
          Da: {
            name: "setCustomParameters",
            j: [Mh("customOAuthParameters")]
          }
        }), Bh(Kr, "credential", Fr, [Fh(Lh(), Mh(), "token")]), Bh(Yr, "credentialWithLink", $r, [Lh("email"), Lh("emailLink")]), qh(qr.prototype, {
          ua: {
            name: "addScope",
            j: [Lh("scope")]
          },
          Da: {
            name: "setCustomParameters",
            j: [Mh("customOAuthParameters")]
          }
        }), Bh(qr, "credential", Hr, [Fh(Lh(), Mh(), "token")]), qh(Br.prototype, {
          ua: {
            name: "addScope",
            j: [Lh("scope")]
          },
          Da: {
            name: "setCustomParameters",
            j: [Mh("customOAuthParameters")]
          }
        }), Bh(Br, "credential", Gr, [Fh(Lh(), Fh(Mh(), Uh()), "idToken"), Fh(Lh(), Uh(), "accessToken", !0)]), qh(Wr.prototype, {
          Da: {
            name: "setCustomParameters",
            j: [Mh("customOAuthParameters")]
          }
        }), Bh(Wr, "credential", Xr, [Fh(Lh(), Mh(), "token"), Lh("secret", !0)]), qh(Vr.prototype, {
          ua: {
            name: "addScope",
            j: [Lh("scope")]
          },
          credential: {
            name: "credential",
            j: [Fh(Lh(), Fh(Mh(), Uh()), "optionsOrIdToken"), Fh(Lh(), Uh(), "accessToken", !0)]
          },
          Da: {
            name: "setCustomParameters",
            j: [Mh("customOAuthParameters")]
          }
        }), qh(Lr.prototype, {
          w: {
            name: "toJSON",
            j: [Lh(null, !0)]
          }
        }), qh(Cr.prototype, {
          w: {
            name: "toJSON",
            j: [Lh(null, !0)]
          }
        }), Bh(no, "credential", io, [Lh("verificationId"), Lh("verificationCode")]), qh(no.prototype, {
          Ua: {
            name: "verifyPhoneNumber",
            j: [Lh("phoneNumber"), Kh()]
          }
        }), qh(Qr.prototype, {
          w: {
            name: "toJSON",
            j: [Lh(null, !0)]
          }
        }), qh(Bi.prototype, {
          toJSON: {
            name: "toJSON",
            j: [Lh(null, !0)]
          }
        }), qh(fo.prototype, {
          toJSON: {
            name: "toJSON",
            j: [Lh(null, !0)]
          }
        }), qh(lo.prototype, {
          toJSON: {
            name: "toJSON",
            j: [Lh(null, !0)]
          }
        }), qh(Ch.prototype, {
          clear: {
            name: "clear",
            j: []
          },
          render: {
            name: "render",
            j: []
          },
          verify: {
            name: "verify",
            j: []
          }
        }), function () {
          if (void 0 === Wh || !Wh.INTERNAL || !Wh.INTERNAL.registerService) throw Error("Cannot find the firebase namespace; be sure to include firebase-app.js before this library.");
          var t = {
            Auth: Zc,
            AuthCredential: _r,
            Error: Bi
          };
          Bh(t, "EmailAuthProvider", Yr, []), Bh(t, "FacebookAuthProvider", Kr, []), Bh(t, "GithubAuthProvider", qr, []), Bh(t, "GoogleAuthProvider", Br, []), Bh(t, "TwitterAuthProvider", Wr, []), Bh(t, "OAuthProvider", Vr, [Lh("providerId")]), Bh(t, "SAMLAuthProvider", Ur, [Lh("providerId")]), Bh(t, "PhoneAuthProvider", no, [{
            name: "auth",
            K: "an instance of Firebase Auth",
            optional: !0,
            M: function M(t) {
              return !!(t && t instanceof Zc);
            }
          }]), Bh(t, "RecaptchaVerifier", Ch, [Fh(Lh(), {
            name: "",
            K: "an HTML element",
            optional: !1,
            M: function M(t) {
              return !!(t && t instanceof Element);
            }
          }, "recaptchaContainer"), Mh("recaptchaParameters", !0), {
            name: "app",
            K: "an instance of Firebase App",
            optional: !0,
            M: function M(t) {
              return !!(t && t instanceof Wh.app.App);
            }
          }]), Wh.INTERNAL.registerService("auth", function (t, e) {
            return e({
              INTERNAL: {
                getUid: I((t = new Zc(t)).getUid, t),
                getToken: I(t.ac, t),
                addAuthTokenListener: I(t.Ub, t),
                removeAuthTokenListener: I(t.Cc, t)
              }
            }), t;
          }, t, function (t, e) {
            if ("create" === t) try {
              e.auth();
            } catch (t) {}
          }), Wh.INTERNAL.extendNamespace({
            User: dc
          });
        }();
      }.apply("undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
    }).apply(this, arguments);
  } catch (t) {
    throw console.error(t), new Error("Cannot instantiate firebase-auth - be sure to load firebase-app.js first.");
  }
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(17)))

/***/ }),
/* 113 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(114);
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(17)))

/***/ }),
/* 114 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(17), __webpack_require__(64)))

/***/ })
/******/ ]);